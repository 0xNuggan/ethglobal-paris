{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "ActionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AnyAddressDisallowedForWhoAndWhere",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ConditionNotPresentForAnyAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientGas",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "NativeTokenDepositAmountMismatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "permissionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "currentCondition",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newCondition",
          "type": "address"
        }
      ],
      "name": "PermissionAlreadyGrantedForDifferentCondition",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PermissionsForAnyAddressDisallowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooManyActions",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "permissionId",
          "type": "bytes32"
        }
      ],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "callbackSelector",
          "type": "bytes4"
        },
        {
          "internalType": "bytes4",
          "name": "magicNumber",
          "type": "bytes4"
        }
      ],
      "name": "UnkownCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAmount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "CallbackReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_reference",
          "type": "string"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "actor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "callId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct IDAO.Action[]",
          "name": "actions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allowFailureMap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "failureMap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "execResults",
          "type": "bytes[]"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "permissionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "here",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "where",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IPermissionCondition",
          "name": "condition",
          "type": "address"
        }
      ],
      "name": "Granted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "NativeTokenDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "daoURI",
          "type": "string"
        }
      ],
      "name": "NewURI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "permissionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "here",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "where",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "Revoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "signatureValidator",
          "type": "address"
        }
      ],
      "name": "SignatureValidatorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "callbackSelector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "magicNumber",
          "type": "bytes4"
        }
      ],
      "name": "StandardCallbackRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "TrustedForwarderSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "EXECUTE_PERMISSION_ID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REGISTER_STANDARD_CALLBACK_PERMISSION_ID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT_PERMISSION_ID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SET_METADATA_PERMISSION_ID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SET_SIGNATURE_VALIDATOR_PERMISSION_ID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SET_TRUSTED_FORWARDER_PERMISSION_ID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UPGRADE_DAO_PERMISSION_ID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum PermissionLib.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "condition",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "permissionId",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermissionLib.MultiTargetPermission[]",
          "name": "_items",
          "type": "tuple[]"
        }
      ],
      "name": "applyMultiTargetPermissions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_where",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum PermissionLib.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "permissionId",
              "type": "bytes32"
            }
          ],
          "internalType": "struct PermissionLib.SingleTargetPermission[]",
          "name": "items",
          "type": "tuple[]"
        }
      ],
      "name": "applySingleTargetPermissions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daoURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_reference",
          "type": "string"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_callId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct IDAO.Action[]",
          "name": "_actions",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "_allowFailureMap",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "execResults",
          "type": "bytes[]"
        },
        {
          "internalType": "uint256",
          "name": "failureMap",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTrustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_where",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_permissionId",
          "type": "bytes32"
        }
      ],
      "name": "grant",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_where",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_permissionId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IPermissionCondition",
          "name": "_condition",
          "type": "address"
        }
      ],
      "name": "grantWithCondition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_where",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_permissionId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "hasPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_metadata",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_initialOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_trustedForwarder",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "daoURI_",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_where",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_permissionId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "isGranted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        },
        {
          "internalType": "bytes4",
          "name": "_callbackSelector",
          "type": "bytes4"
        },
        {
          "internalType": "bytes4",
          "name": "_magicNumber",
          "type": "bytes4"
        }
      ],
      "name": "registerStandardCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_where",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_permissionId",
          "type": "bytes32"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newDaoURI",
          "type": "string"
        }
      ],
      "name": "setDaoURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_metadata",
          "type": "bytes"
        }
      ],
      "name": "setMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signatureValidator",
          "type": "address"
        }
      ],
      "name": "setSignatureValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newTrustedForwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signatureValidator",
      "outputs": [
        {
          "internalType": "contract IERC1271",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051612f1c6200011f600039600081816109c401528181610a0401528181610b2401528181610b640152610bf70152612f1c6000f3fe6080604052600436106101d15760003560e01c8063829331a1116100f7578063d96054c411610095578063e978afe511610064578063e978afe51461068e578063eafb8b06146106ae578063ee57e36f146106ce578063fdef9106146106ee57610210565b8063d96054c4146105f8578063da74222814610618578063e2e3556314610638578063e306bee71461066c57610210565b8063c71bf324116100d1578063c71bf3241461056b578063c9dbc2a414610599578063ce1b815f146105b9578063d68bad2c146105d857610210565b8063829331a114610504578063bfe07da614610538578063c4a501451461054b57610210565b80632675fdd01161016f5780633e2ab0d91161013e5780633e2ab0d91461049a5780634f1ef286146104ba57806352d1902d146104cd5780637034731b146104e257610210565b80632675fdd0146103ed57806326875b1f1461040d5780633659cfe614610441578063388da9341461046157610210565b80631080f99b116101ab5780631080f99b1461033e5780631626ba7e1461036057806322844d041461039957806324b4d73f146103b957610210565b806301ffc9a7146102a55780630729d054146102da57806309e56b141461031c57610210565b3661021057604080513381523460208201527f62c2c8e34665db7c56b2cabd7f5fb9702ccd352ffa8150147e450797e9f8e8f3910160405180910390a1005b34801561021c57600080fd5b50600036606060006102706000356001600160e01b03191685858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061070e92505050565b604080516001600160e01b03198316602082015291925001604051602081830303815290604052915050915050805190602001f35b3480156102b157600080fd5b506102c56102c03660046121e4565b6107b7565b60405190151581526020015b60405180910390f35b3480156102e657600080fd5b5061030e7fbf04b4486c9663d805744005c3da000eda93de6e3308a4a7a812eb565327b78d81565b6040519081526020016102d1565b34801561032857600080fd5b5061030e600080516020612ec783398151915281565b34801561034a57600080fd5b5061035e610359366004612249565b6107f3565b005b34801561036c57600080fd5b5061038061037b36600461232c565b61081a565b6040516001600160e01b031990911681526020016102d1565b3480156103a557600080fd5b5061035e6103b4366004612387565b6108b1565b3480156103c557600080fd5b5061030e7f1f53edd44352e5d15bad2b29233baa93bcd595e09457780bc7c5445bbbe751cc81565b3480156103f957600080fd5b506102c561040836600461240e565b61096f565b34801561041957600080fd5b5061030e7ffaf505be9907aa6951c2ebe5b0312f4980e14f21912ed355372103cc8bd683bc81565b34801561044d57600080fd5b5061035e61045c366004612479565b6109ba565b34801561046d57600080fd5b5061012d54610482906001600160a01b031681565b6040516001600160a01b0390911681526020016102d1565b3480156104a657600080fd5b5061035e6104b5366004612479565b610a99565b61035e6104c8366004612496565b610b1a565b3480156104d957600080fd5b5061030e610bea565b3480156104ee57600080fd5b506104f7610c9d565b6040516102d1919061251f565b34801561051057600080fd5b5061030e7f06d294bc8cbad2e393408b20dd019a772661f60b8d633e56761157cb1ec85f8c81565b61035e610546366004612532565b610d30565b34801561055757600080fd5b5061035e61056636600461258d565b610e1f565b34801561057757600080fd5b5061058b6105863660046125d8565b610eae565b6040516102d19291906126b1565b3480156105a557600080fd5b5061035e6105b43660046126d3565b61113d565b3480156105c557600080fd5b5061012e546001600160a01b0316610482565b3480156105e457600080fd5b5061035e6105f3366004612726565b611161565b34801561060457600080fd5b5061035e610613366004612726565b61118a565b34801561062457600080fd5b5061035e610633366004612479565b6111ad565b34801561064457600080fd5b5061030e7f0dcbfb19b09fb8ff4e9af583d4b8e9c8127cc1b26529b4d96dd3b7e77808837281565b34801561067857600080fd5b5061030e600080516020612e6083398151915281565b34801561069a57600080fd5b5061035e6106a9366004612767565b6111e0565b3480156106ba57600080fd5b5061035e6106c93660046127db565b6112d5565b3480156106da57600080fd5b5061035e6106e9366004612249565b611442565b3480156106fa57600080fd5b506102c561070936600461240e565b611464565b6001600160e01b0319808316600090815260fb6020526040812054909160e09190911b90811661076a57604051632a5ee61f60e11b81526001600160e01b03198086166004830152821660248201526044015b60405180910390fd5b836001600160e01b0319167f4792cb6e46e49876374bea490ba23274bacea6b84c216a64f47abab54027589b33856040516107a6929190612873565b60405180910390a290505b92915050565b60006301ffc9a760e01b6001600160e01b0319831614806107b15750506001600160e01b03191660009081526033602052604090205460ff1690565b600080516020612e6083398151915261080b81611472565b61081583836114e1565b505050565b61012d546000906001600160a01b0316610836575060006107b1565b61012d54604051630b135d3f60e11b81526001600160a01b0390911690631626ba7e906108699086908690600401612897565b602060405180830381865afa158015610886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108aa91906128b0565b9392505050565b600080516020612ec78339815191526108c981611472565b60005b828110156109685760008484838181106108e8576108e86128cd565b9050606002018036038101906108fe91906128f7565b90506000815160028111156109155761091561295f565b036109325761092d8682602001518360400151611521565b61095f565b6001815160028111156109475761094761295f565b0361095f5761095f868260200151836040015161152e565b506001016108cc565b5050505050565b600061097d858585856115c2565b806109965750610996856001600160a01b0385856115c2565b806109af57506109af6001600160a01b038585856115c2565b90505b949350505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610a025760405162461bcd60e51b815260040161076190612975565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a4b600080516020612e80833981519152546001600160a01b031690565b6001600160a01b031614610a715760405162461bcd60e51b8152600401610761906129c1565b610a7a816116aa565b60408051600080825260208201909252610a96918391906116d4565b50565b7f0dcbfb19b09fb8ff4e9af583d4b8e9c8127cc1b26529b4d96dd3b7e778088372610ac381611472565b61012d80546001600160a01b0319166001600160a01b0384169081179091556040519081527f3b25c5d3870ec0eac28822b177f18c9130233ade5b7f857c6a224a507c37fc4e906020015b60405180910390a15050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610b625760405162461bcd60e51b815260040161076190612975565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610bab600080516020612e80833981519152546001600160a01b031690565b6001600160a01b031614610bd15760405162461bcd60e51b8152600401610761906129c1565b610bda826116aa565b610be6828260016116d4565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c8a5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610761565b50600080516020612e8083398151915290565b606061012f8054610cad90612a0d565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd990612a0d565b8015610d265780601f10610cfb57610100808354040283529160200191610d26565b820191906000526020600020905b815481529060010190602001808311610d0957829003601f168201915b5050505050905090565b82600003610d5157604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b038416610d8d57823414610d88576040516301abd56160e41b815260048101849052346024820152604401610761565b610dca565b3415610db5576040516301abd56160e41b815260006004820152346024820152604401610761565b610dca6001600160a01b03851633308661183f565b836001600160a01b0316336001600160a01b03167f2bc500cf071be2d1c1458ed6ff484cd4db4345ada8943dee7ff29e7af3558f76858585604051610e1193929190612a70565b60405180910390a350505050565b7ffaf505be9907aa6951c2ebe5b0312f4980e14f21912ed355372103cc8bd683bc610e4981611472565b610e5284611899565b610e5c8383611918565b604080516001600160e01b03198681168252858116602083015284168183015290517ffc72fd547553f7a663e0048e590afc9c47b56a4242e960f31cf4c62e23d308b99181900360600190a150505050565b606060007fbf04b4486c9663d805744005c3da000eda93de6e3308a4a7a812eb565327b78d610edc81611472565b610100851115610eff576040516308e3b1eb60e11b815260040160405180910390fd5b846001600160401b03811115610f1757610f1761228a565b604051908082528060200260200182016040528015610f4a57816020015b6060815260200190600190039081610f355790505b50925060008060005b878110156110e5575a92506000808a8a84818110610f7357610f736128cd565b9050602002810190610f859190612a8a565b610f93906020810190612479565b6001600160a01b03168b8b85818110610fae57610fae6128cd565b9050602002810190610fc09190612a8a565b602001358c8c86818110610fd657610fd66128cd565b9050602002810190610fe89190612a8a565b610ff6906040810190612aaa565b604051611004929190612af0565b60006040518083038185875af1925050503d8060008114611041576040519150601f19603f3d011682016040523d82523d6000602084013e611046565b606091505b50915091505a9350600160ff84161b8916611081578161107c5760405163a6a7dbbd60e01b815260048101849052602401610761565b6110bd565b816110bd57611091604086612b00565b8410156110b1576040516307099c5360e21b815260040160405180910390fd5b600160ff84161b871896505b808884815181106110d0576110d06128cd565b60209081029190910101525050600101610f53565b50336001600160a01b03167fd4e57c2049f004fb297ef78591cd409503ceb6b2c722d7ffed032fc99e5f3b588a8a8a8a898b60405161112996959493929190612b22565b60405180910390a250505094509492505050565b600080516020612ec783398151915261115581611472565b6109688585858561194a565b600080516020612ec783398151915261117981611472565b611184848484611521565b50505050565b600080516020612ec78339815191526111a281611472565b61118484848461152e565b7f06d294bc8cbad2e393408b20dd019a772661f60b8d633e56761157cb1ec85f8c6111d781611472565b610be682611b1f565b600080516020612ec78339815191526111f881611472565b60005b82811015611184576000848483818110611217576112176128cd565b905060a0020180360381019061122d9190612c30565b90506000815160028111156112445761124461295f565b0361126557611260816020015182604001518360800151611521565b6112cc565b60018151600281111561127a5761127a61295f565b036112965761126081602001518260400151836080015161152e565b6002815160028111156112ab576112ab61295f565b036112cc576112cc816020015182604001518360800151846060015161194a565b506001016111fb565b600054610100900460ff16158080156112f55750600054600160ff909116105b8061130f5750303b15801561130f575060005460ff166001145b6113725760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610761565b6000805460ff191660011790558015611395576000805461ff0019166101001790555b6113a56349c2aa3f60e11b611899565b6113b5630b135d3f60e11b611899565b6113c5637034731b60e01b611899565b6113cd611b74565b6113d78787611bc9565b6113e084611b1f565b6113ea83836114e1565b6113f385611bfa565b8015611439576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b600080516020612e6083398151915261145a81611472565b6108158383611bc9565b60006109af8585858561096f565b6114b53033836000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061096f92505050565b610a9657604051631e09743f60e01b815230600482015233602482015260448101829052606401610761565b61012f6114ef828483612d0c565b507fe9b617ecb5f63f6a9ccd8d4d5fa0d7b2ef9b17ce3f48e6b135808d6a40e677428282604051610b0e929190612dcb565b610815838383600261194a565b600061153b848484611c6e565b600081815260c960205260409020549091506001600160a01b03161561118457600081815260c9602090815260409182902080546001600160a01b031916905590516001600160a01b038681168252851691339185917f3ca48185ec3f6e47e24db18b13f1c65b1ce05da1659f9c1c4fe717dda5f67524910160405180910390a450505050565b60008060c960006115d4888888611c6e565b81526020810191909152604001600020546001600160a01b03169050806115ff5760009150506109b2565b6001196001600160a01b0382160161161b5760019150506109b2565b6040516302675fdd60e41b81526001600160a01b03821690632675fdd09061164d908990899089908990600401612ddf565b602060405180830381865afa925050508015611686575060408051601f3d908101601f1916820190925261168391810190612e12565b60015b1561169e57801561169c576001925050506109b2565b505b50600095945050505050565b7f1f53edd44352e5d15bad2b29233baa93bcd595e09457780bc7c5445bbbe751cc610be681611472565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156117075761081583611cd3565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611761575060408051601f3d908101601f1916820190925261175e91810190612e34565b60015b6117c45760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610761565b600080516020612e8083398151915281146118335760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610761565b50610815838383611d6f565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611184908590611d94565b6001600160e01b031980821690036118f35760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401610761565b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b6001600160e01b031991909116600090815260fb60205260409020805463ffffffff191660e09290921c919091179055565b6001600160a01b0384811614801561196a57506001600160a01b03838116145b15611988576040516385f1ba9960e01b815260040160405180910390fd5b6001600160a01b0384811614806119a757506001600160a01b03838116145b15611a1d5760006119b783611e69565b9050600080516020612ec78339815191528314806119d25750805b156119f0576040516324159e5b60e01b815260040160405180910390fd5b6001196001600160a01b03831601611a1b576040516324aadf4360e21b815260040160405180910390fd5b505b6000611a2a858585611c6e565b600081815260c960205260409020549091506001600160a01b03168281611ac357600083815260c9602090815260409182902080546001600160a01b0319166001600160a01b038581169190911790915582518a8216815287821692810192909252881691339188917f0f579ad49235a8c1fd9041427e7067b1eb10926bbed380bf6fabc73e0e807644910160405180910390a4611439565b806001600160a01b0316826001600160a01b031614611439576040516305cc3c4f60e11b81526001600160a01b03808916600483015280881660248301526044820187905280841660648301528216608482015260a401610761565b61012e80546001600160a01b0319166001600160a01b0383169081179091556040519081527fd91237492a9e30cd2faf361fc103998a382ff0ec2b1b07dc1cbebb76ae2f1ea29060200160405180910390a150565b611b84630a85bd0160e11b611899565b611b94630271189760e51b611899565b611ba5630a85bd0160e11b80611918565b611bb663f23a6e6160e01b80611918565b611bc763bc197c8160e01b80611918565b565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed8282604051610b0e929190612dcb565b600054610100900460ff16611c655760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610761565b610a9681611f50565b604051692822a926a4a9a9a4a7a760b11b60208201526bffffffffffffffffffffffff19606084811b8216602a84015285901b16603e820152605281018290526000906072016040516020818303038152906040528051906020012090509392505050565b6001600160a01b0381163b611d405760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610761565b600080516020612e8083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611d7883611f69565b600082511180611d855750805b15610815576111848383611fa9565b6000611de9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611fce9092919063ffffffff16565b9050805160001480611e0a575080806020019051810190611e0a9190612e12565b6108155760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610761565b60007fbf04b4486c9663d805744005c3da000eda93de6e3308a4a7a812eb565327b78d821480611eb857507f1f53edd44352e5d15bad2b29233baa93bcd595e09457780bc7c5445bbbe751cc82145b80611ed05750600080516020612e6083398151915282145b80611efa57507f06d294bc8cbad2e393408b20dd019a772661f60b8d633e56761157cb1ec85f8c82145b80611f2457507f0dcbfb19b09fb8ff4e9af583d4b8e9c8127cc1b26529b4d96dd3b7e77808837282145b806107b15750507ffaf505be9907aa6951c2ebe5b0312f4980e14f21912ed355372103cc8bd683bc1490565b610a963082600080516020612ec7833981519152611521565b611f7281611cd3565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606108aa8383604051806060016040528060278152602001612ea060279139611fdd565b60606109b28484600085612055565b6060600080856001600160a01b031685604051611ffa9190612e4d565b600060405180830381855af49150503d8060008114612035576040519150601f19603f3d011682016040523d82523d6000602084013e61203a565b606091505b509150915061204b86838387612130565b9695505050505050565b6060824710156120b65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610761565b600080866001600160a01b031685876040516120d29190612e4d565b60006040518083038185875af1925050503d806000811461210f576040519150601f19603f3d011682016040523d82523d6000602084013e612114565b606091505b509150915061212587838387612130565b979650505050505050565b6060831561219f578251600003612198576001600160a01b0385163b6121985760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610761565b50816109b2565b6109b283838151156121b45781518083602001fd5b8060405162461bcd60e51b8152600401610761919061251f565b6001600160e01b031981168114610a9657600080fd5b6000602082840312156121f657600080fd5b81356108aa816121ce565b60008083601f84011261221357600080fd5b5081356001600160401b0381111561222a57600080fd5b60208301915083602082850101111561224257600080fd5b9250929050565b6000806020838503121561225c57600080fd5b82356001600160401b0381111561227257600080fd5b61227e85828601612201565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126122b157600080fd5b81356001600160401b03808211156122cb576122cb61228a565b604051601f8301601f19908116603f011681019082821181831017156122f3576122f361228a565b8160405283815286602085880101111561230c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561233f57600080fd5b8235915060208301356001600160401b0381111561235c57600080fd5b612368858286016122a0565b9150509250929050565b6001600160a01b0381168114610a9657600080fd5b60008060006040848603121561239c57600080fd5b83356123a781612372565b925060208401356001600160401b03808211156123c357600080fd5b818601915086601f8301126123d757600080fd5b8135818111156123e657600080fd5b8760206060830285010111156123fb57600080fd5b6020830194508093505050509250925092565b6000806000806080858703121561242457600080fd5b843561242f81612372565b9350602085013561243f81612372565b92506040850135915060608501356001600160401b0381111561246157600080fd5b61246d878288016122a0565b91505092959194509250565b60006020828403121561248b57600080fd5b81356108aa81612372565b600080604083850312156124a957600080fd5b82356124b481612372565b915060208301356001600160401b0381111561235c57600080fd5b60005b838110156124ea5781810151838201526020016124d2565b50506000910152565b6000815180845261250b8160208601602086016124cf565b601f01601f19169290920160200192915050565b6020815260006108aa60208301846124f3565b6000806000806060858703121561254857600080fd5b843561255381612372565b93506020850135925060408501356001600160401b0381111561257557600080fd5b61258187828801612201565b95989497509550505050565b6000806000606084860312156125a257600080fd5b83356125ad816121ce565b925060208401356125bd816121ce565b915060408401356125cd816121ce565b809150509250925092565b600080600080606085870312156125ee57600080fd5b8435935060208501356001600160401b038082111561260c57600080fd5b818701915087601f83011261262057600080fd5b81358181111561262f57600080fd5b8860208260051b850101111561264457600080fd5b95986020929092019750949560400135945092505050565b600081518084526020808501808196508360051b8101915082860160005b858110156126a45782840389526126928483516124f3565b9885019893509084019060010161267a565b5091979650505050505050565b6040815260006126c4604083018561265c565b90508260208301529392505050565b600080600080608085870312156126e957600080fd5b84356126f481612372565b9350602085013561270481612372565b925060408501359150606085013561271b81612372565b939692955090935050565b60008060006060848603121561273b57600080fd5b833561274681612372565b9250602084013561275681612372565b929592945050506040919091013590565b6000806020838503121561277a57600080fd5b82356001600160401b038082111561279157600080fd5b818501915085601f8301126127a557600080fd5b8135818111156127b457600080fd5b86602060a0830285010111156127c957600080fd5b60209290920196919550909350505050565b600080600080600080608087890312156127f457600080fd5b86356001600160401b038082111561280b57600080fd5b6128178a838b01612201565b90985096506020890135915061282c82612372565b90945060408801359061283e82612372565b9093506060880135908082111561285457600080fd5b5061286189828a01612201565b979a9699509497509295939492505050565b6001600160a01b03831681526040602082018190526000906109b2908301846124f3565b8281526040602082015260006109b260408301846124f3565b6000602082840312156128c257600080fd5b81516108aa816121ce565b634e487b7160e01b600052603260045260246000fd5b8035600381106128f257600080fd5b919050565b60006060828403121561290957600080fd5b604051606081018181106001600160401b038211171561292b5761292b61228a565b604052612937836128e3565b8152602083013561294781612372565b60208201526040928301359281019290925250919050565b634e487b7160e01b600052602160045260246000fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600181811c90821680612a2157607f821691505b602082108103612a4157634e487b7160e01b600052602260045260246000fd5b50919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8381526040602082015260006109af604083018486612a47565b60008235605e19833603018112612aa057600080fd5b9190910192915050565b6000808335601e19843603018112612ac157600080fd5b8301803591506001600160401b03821115612adb57600080fd5b60200191503681900382131561224257600080fd5b8183823760009101908152919050565b600082612b1d57634e487b7160e01b600052601260045260246000fd5b500490565b600060a08201888352602060a0818501528188835260c08501905060c08960051b86010192508960005b8a811015612c015786850360bf190183528135368d9003605e19018112612b7257600080fd5b8c0160608135612b8181612372565b6001600160a01b03168752818601358688015260408083013536849003601e19018112612bad57600080fd5b9092018681019290356001600160401b03811115612bca57600080fd5b803603841315612bd957600080fd5b82828a0152612beb838a018286612a47565b9850505093850193505090830190600101612b4c565b505050508560408401528460608401528281036080840152612c23818561265c565b9998505050505050505050565b600060a08284031215612c4257600080fd5b60405160a081018181106001600160401b0382111715612c6457612c6461228a565b604052612c70836128e3565b81526020830135612c8081612372565b60208201526040830135612c9381612372565b60408201526060830135612ca681612372565b60608201526080928301359281019290925250919050565b601f82111561081557600081815260208120601f850160051c81016020861015612ce55750805b601f850160051c820191505b81811015612d0457828155600101612cf1565b505050505050565b6001600160401b03831115612d2357612d2361228a565b612d3783612d318354612a0d565b83612cbe565b6000601f841160018114612d6b5760008515612d535750838201355b600019600387901b1c1916600186901b178355610968565b600083815260209020601f19861690835b82811015612d9c5786850135825560209485019460019092019101612d7c565b5086821015612db95760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6020815260006109b2602083018486612a47565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061204b908301846124f3565b600060208284031215612e2457600080fd5b815180151581146108aa57600080fd5b600060208284031215612e4657600080fd5b5051919050565b60008251612aa08184602087016124cf56fe4707e94b25cfce1a7c363508fbb838c35864388ad77284b248282b9746982b9b360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564815fe80e4b37c8582a3b773d1d7071f983eacfd56b5965db654f3087c25ada33a2646970667358221220ff3e75c85a549209d04ff41e6765c690ce535882cc5348dcfda7eca2d2600fd464736f6c63430008110033",
    "sourceMap": "1397:13752:50:-:0;;;1332:4:24;1289:48;;4382:53:50;;;;;;;;;-1:-1:-1;4406:22:50;:20;:22::i;:::-;1397:13752;;5939:280:23;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:23;;216:2:72;5998:66:23;;;198:21:72;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:72;;;338:37;392:19;;5998:66:23;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:23;6140:15;6125:30;;;;;;6174:28;;564:36:72;;;6174:28:23;;552:2:72;537:18;6174:28:23;;;;;;;6074:139;5939:280::o;422:184:72:-;1397:13752:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101d15760003560e01c8063829331a1116100f7578063d96054c411610095578063e978afe511610064578063e978afe51461068e578063eafb8b06146106ae578063ee57e36f146106ce578063fdef9106146106ee57610210565b8063d96054c4146105f8578063da74222814610618578063e2e3556314610638578063e306bee71461066c57610210565b8063c71bf324116100d1578063c71bf3241461056b578063c9dbc2a414610599578063ce1b815f146105b9578063d68bad2c146105d857610210565b8063829331a114610504578063bfe07da614610538578063c4a501451461054b57610210565b80632675fdd01161016f5780633e2ab0d91161013e5780633e2ab0d91461049a5780634f1ef286146104ba57806352d1902d146104cd5780637034731b146104e257610210565b80632675fdd0146103ed57806326875b1f1461040d5780633659cfe614610441578063388da9341461046157610210565b80631080f99b116101ab5780631080f99b1461033e5780631626ba7e1461036057806322844d041461039957806324b4d73f146103b957610210565b806301ffc9a7146102a55780630729d054146102da57806309e56b141461031c57610210565b3661021057604080513381523460208201527f62c2c8e34665db7c56b2cabd7f5fb9702ccd352ffa8150147e450797e9f8e8f3910160405180910390a1005b34801561021c57600080fd5b50600036606060006102706000356001600160e01b03191685858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061070e92505050565b604080516001600160e01b03198316602082015291925001604051602081830303815290604052915050915050805190602001f35b3480156102b157600080fd5b506102c56102c03660046121e4565b6107b7565b60405190151581526020015b60405180910390f35b3480156102e657600080fd5b5061030e7fbf04b4486c9663d805744005c3da000eda93de6e3308a4a7a812eb565327b78d81565b6040519081526020016102d1565b34801561032857600080fd5b5061030e600080516020612ec783398151915281565b34801561034a57600080fd5b5061035e610359366004612249565b6107f3565b005b34801561036c57600080fd5b5061038061037b36600461232c565b61081a565b6040516001600160e01b031990911681526020016102d1565b3480156103a557600080fd5b5061035e6103b4366004612387565b6108b1565b3480156103c557600080fd5b5061030e7f1f53edd44352e5d15bad2b29233baa93bcd595e09457780bc7c5445bbbe751cc81565b3480156103f957600080fd5b506102c561040836600461240e565b61096f565b34801561041957600080fd5b5061030e7ffaf505be9907aa6951c2ebe5b0312f4980e14f21912ed355372103cc8bd683bc81565b34801561044d57600080fd5b5061035e61045c366004612479565b6109ba565b34801561046d57600080fd5b5061012d54610482906001600160a01b031681565b6040516001600160a01b0390911681526020016102d1565b3480156104a657600080fd5b5061035e6104b5366004612479565b610a99565b61035e6104c8366004612496565b610b1a565b3480156104d957600080fd5b5061030e610bea565b3480156104ee57600080fd5b506104f7610c9d565b6040516102d1919061251f565b34801561051057600080fd5b5061030e7f06d294bc8cbad2e393408b20dd019a772661f60b8d633e56761157cb1ec85f8c81565b61035e610546366004612532565b610d30565b34801561055757600080fd5b5061035e61056636600461258d565b610e1f565b34801561057757600080fd5b5061058b6105863660046125d8565b610eae565b6040516102d19291906126b1565b3480156105a557600080fd5b5061035e6105b43660046126d3565b61113d565b3480156105c557600080fd5b5061012e546001600160a01b0316610482565b3480156105e457600080fd5b5061035e6105f3366004612726565b611161565b34801561060457600080fd5b5061035e610613366004612726565b61118a565b34801561062457600080fd5b5061035e610633366004612479565b6111ad565b34801561064457600080fd5b5061030e7f0dcbfb19b09fb8ff4e9af583d4b8e9c8127cc1b26529b4d96dd3b7e77808837281565b34801561067857600080fd5b5061030e600080516020612e6083398151915281565b34801561069a57600080fd5b5061035e6106a9366004612767565b6111e0565b3480156106ba57600080fd5b5061035e6106c93660046127db565b6112d5565b3480156106da57600080fd5b5061035e6106e9366004612249565b611442565b3480156106fa57600080fd5b506102c561070936600461240e565b611464565b6001600160e01b0319808316600090815260fb6020526040812054909160e09190911b90811661076a57604051632a5ee61f60e11b81526001600160e01b03198086166004830152821660248201526044015b60405180910390fd5b836001600160e01b0319167f4792cb6e46e49876374bea490ba23274bacea6b84c216a64f47abab54027589b33856040516107a6929190612873565b60405180910390a290505b92915050565b60006301ffc9a760e01b6001600160e01b0319831614806107b15750506001600160e01b03191660009081526033602052604090205460ff1690565b600080516020612e6083398151915261080b81611472565b61081583836114e1565b505050565b61012d546000906001600160a01b0316610836575060006107b1565b61012d54604051630b135d3f60e11b81526001600160a01b0390911690631626ba7e906108699086908690600401612897565b602060405180830381865afa158015610886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108aa91906128b0565b9392505050565b600080516020612ec78339815191526108c981611472565b60005b828110156109685760008484838181106108e8576108e86128cd565b9050606002018036038101906108fe91906128f7565b90506000815160028111156109155761091561295f565b036109325761092d8682602001518360400151611521565b61095f565b6001815160028111156109475761094761295f565b0361095f5761095f868260200151836040015161152e565b506001016108cc565b5050505050565b600061097d858585856115c2565b806109965750610996856001600160a01b0385856115c2565b806109af57506109af6001600160a01b038585856115c2565b90505b949350505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610a025760405162461bcd60e51b815260040161076190612975565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a4b600080516020612e80833981519152546001600160a01b031690565b6001600160a01b031614610a715760405162461bcd60e51b8152600401610761906129c1565b610a7a816116aa565b60408051600080825260208201909252610a96918391906116d4565b50565b7f0dcbfb19b09fb8ff4e9af583d4b8e9c8127cc1b26529b4d96dd3b7e778088372610ac381611472565b61012d80546001600160a01b0319166001600160a01b0384169081179091556040519081527f3b25c5d3870ec0eac28822b177f18c9130233ade5b7f857c6a224a507c37fc4e906020015b60405180910390a15050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610b625760405162461bcd60e51b815260040161076190612975565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610bab600080516020612e80833981519152546001600160a01b031690565b6001600160a01b031614610bd15760405162461bcd60e51b8152600401610761906129c1565b610bda826116aa565b610be6828260016116d4565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c8a5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610761565b50600080516020612e8083398151915290565b606061012f8054610cad90612a0d565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd990612a0d565b8015610d265780601f10610cfb57610100808354040283529160200191610d26565b820191906000526020600020905b815481529060010190602001808311610d0957829003601f168201915b5050505050905090565b82600003610d5157604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b038416610d8d57823414610d88576040516301abd56160e41b815260048101849052346024820152604401610761565b610dca565b3415610db5576040516301abd56160e41b815260006004820152346024820152604401610761565b610dca6001600160a01b03851633308661183f565b836001600160a01b0316336001600160a01b03167f2bc500cf071be2d1c1458ed6ff484cd4db4345ada8943dee7ff29e7af3558f76858585604051610e1193929190612a70565b60405180910390a350505050565b7ffaf505be9907aa6951c2ebe5b0312f4980e14f21912ed355372103cc8bd683bc610e4981611472565b610e5284611899565b610e5c8383611918565b604080516001600160e01b03198681168252858116602083015284168183015290517ffc72fd547553f7a663e0048e590afc9c47b56a4242e960f31cf4c62e23d308b99181900360600190a150505050565b606060007fbf04b4486c9663d805744005c3da000eda93de6e3308a4a7a812eb565327b78d610edc81611472565b610100851115610eff576040516308e3b1eb60e11b815260040160405180910390fd5b846001600160401b03811115610f1757610f1761228a565b604051908082528060200260200182016040528015610f4a57816020015b6060815260200190600190039081610f355790505b50925060008060005b878110156110e5575a92506000808a8a84818110610f7357610f736128cd565b9050602002810190610f859190612a8a565b610f93906020810190612479565b6001600160a01b03168b8b85818110610fae57610fae6128cd565b9050602002810190610fc09190612a8a565b602001358c8c86818110610fd657610fd66128cd565b9050602002810190610fe89190612a8a565b610ff6906040810190612aaa565b604051611004929190612af0565b60006040518083038185875af1925050503d8060008114611041576040519150601f19603f3d011682016040523d82523d6000602084013e611046565b606091505b50915091505a9350600160ff84161b8916611081578161107c5760405163a6a7dbbd60e01b815260048101849052602401610761565b6110bd565b816110bd57611091604086612b00565b8410156110b1576040516307099c5360e21b815260040160405180910390fd5b600160ff84161b871896505b808884815181106110d0576110d06128cd565b60209081029190910101525050600101610f53565b50336001600160a01b03167fd4e57c2049f004fb297ef78591cd409503ceb6b2c722d7ffed032fc99e5f3b588a8a8a8a898b60405161112996959493929190612b22565b60405180910390a250505094509492505050565b600080516020612ec783398151915261115581611472565b6109688585858561194a565b600080516020612ec783398151915261117981611472565b611184848484611521565b50505050565b600080516020612ec78339815191526111a281611472565b61118484848461152e565b7f06d294bc8cbad2e393408b20dd019a772661f60b8d633e56761157cb1ec85f8c6111d781611472565b610be682611b1f565b600080516020612ec78339815191526111f881611472565b60005b82811015611184576000848483818110611217576112176128cd565b905060a0020180360381019061122d9190612c30565b90506000815160028111156112445761124461295f565b0361126557611260816020015182604001518360800151611521565b6112cc565b60018151600281111561127a5761127a61295f565b036112965761126081602001518260400151836080015161152e565b6002815160028111156112ab576112ab61295f565b036112cc576112cc816020015182604001518360800151846060015161194a565b506001016111fb565b600054610100900460ff16158080156112f55750600054600160ff909116105b8061130f5750303b15801561130f575060005460ff166001145b6113725760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610761565b6000805460ff191660011790558015611395576000805461ff0019166101001790555b6113a56349c2aa3f60e11b611899565b6113b5630b135d3f60e11b611899565b6113c5637034731b60e01b611899565b6113cd611b74565b6113d78787611bc9565b6113e084611b1f565b6113ea83836114e1565b6113f385611bfa565b8015611439576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b600080516020612e6083398151915261145a81611472565b6108158383611bc9565b60006109af8585858561096f565b6114b53033836000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061096f92505050565b610a9657604051631e09743f60e01b815230600482015233602482015260448101829052606401610761565b61012f6114ef828483612d0c565b507fe9b617ecb5f63f6a9ccd8d4d5fa0d7b2ef9b17ce3f48e6b135808d6a40e677428282604051610b0e929190612dcb565b610815838383600261194a565b600061153b848484611c6e565b600081815260c960205260409020549091506001600160a01b03161561118457600081815260c9602090815260409182902080546001600160a01b031916905590516001600160a01b038681168252851691339185917f3ca48185ec3f6e47e24db18b13f1c65b1ce05da1659f9c1c4fe717dda5f67524910160405180910390a450505050565b60008060c960006115d4888888611c6e565b81526020810191909152604001600020546001600160a01b03169050806115ff5760009150506109b2565b6001196001600160a01b0382160161161b5760019150506109b2565b6040516302675fdd60e41b81526001600160a01b03821690632675fdd09061164d908990899089908990600401612ddf565b602060405180830381865afa925050508015611686575060408051601f3d908101601f1916820190925261168391810190612e12565b60015b1561169e57801561169c576001925050506109b2565b505b50600095945050505050565b7f1f53edd44352e5d15bad2b29233baa93bcd595e09457780bc7c5445bbbe751cc610be681611472565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156117075761081583611cd3565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611761575060408051601f3d908101601f1916820190925261175e91810190612e34565b60015b6117c45760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610761565b600080516020612e8083398151915281146118335760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610761565b50610815838383611d6f565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611184908590611d94565b6001600160e01b031980821690036118f35760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401610761565b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b6001600160e01b031991909116600090815260fb60205260409020805463ffffffff191660e09290921c919091179055565b6001600160a01b0384811614801561196a57506001600160a01b03838116145b15611988576040516385f1ba9960e01b815260040160405180910390fd5b6001600160a01b0384811614806119a757506001600160a01b03838116145b15611a1d5760006119b783611e69565b9050600080516020612ec78339815191528314806119d25750805b156119f0576040516324159e5b60e01b815260040160405180910390fd5b6001196001600160a01b03831601611a1b576040516324aadf4360e21b815260040160405180910390fd5b505b6000611a2a858585611c6e565b600081815260c960205260409020549091506001600160a01b03168281611ac357600083815260c9602090815260409182902080546001600160a01b0319166001600160a01b038581169190911790915582518a8216815287821692810192909252881691339188917f0f579ad49235a8c1fd9041427e7067b1eb10926bbed380bf6fabc73e0e807644910160405180910390a4611439565b806001600160a01b0316826001600160a01b031614611439576040516305cc3c4f60e11b81526001600160a01b03808916600483015280881660248301526044820187905280841660648301528216608482015260a401610761565b61012e80546001600160a01b0319166001600160a01b0383169081179091556040519081527fd91237492a9e30cd2faf361fc103998a382ff0ec2b1b07dc1cbebb76ae2f1ea29060200160405180910390a150565b611b84630a85bd0160e11b611899565b611b94630271189760e51b611899565b611ba5630a85bd0160e11b80611918565b611bb663f23a6e6160e01b80611918565b611bc763bc197c8160e01b80611918565b565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed8282604051610b0e929190612dcb565b600054610100900460ff16611c655760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610761565b610a9681611f50565b604051692822a926a4a9a9a4a7a760b11b60208201526bffffffffffffffffffffffff19606084811b8216602a84015285901b16603e820152605281018290526000906072016040516020818303038152906040528051906020012090509392505050565b6001600160a01b0381163b611d405760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610761565b600080516020612e8083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611d7883611f69565b600082511180611d855750805b15610815576111848383611fa9565b6000611de9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611fce9092919063ffffffff16565b9050805160001480611e0a575080806020019051810190611e0a9190612e12565b6108155760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610761565b60007fbf04b4486c9663d805744005c3da000eda93de6e3308a4a7a812eb565327b78d821480611eb857507f1f53edd44352e5d15bad2b29233baa93bcd595e09457780bc7c5445bbbe751cc82145b80611ed05750600080516020612e6083398151915282145b80611efa57507f06d294bc8cbad2e393408b20dd019a772661f60b8d633e56761157cb1ec85f8c82145b80611f2457507f0dcbfb19b09fb8ff4e9af583d4b8e9c8127cc1b26529b4d96dd3b7e77808837282145b806107b15750507ffaf505be9907aa6951c2ebe5b0312f4980e14f21912ed355372103cc8bd683bc1490565b610a963082600080516020612ec7833981519152611521565b611f7281611cd3565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606108aa8383604051806060016040528060278152602001612ea060279139611fdd565b60606109b28484600085612055565b6060600080856001600160a01b031685604051611ffa9190612e4d565b600060405180830381855af49150503d8060008114612035576040519150601f19603f3d011682016040523d82523d6000602084013e61203a565b606091505b509150915061204b86838387612130565b9695505050505050565b6060824710156120b65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610761565b600080866001600160a01b031685876040516120d29190612e4d565b60006040518083038185875af1925050503d806000811461210f576040519150601f19603f3d011682016040523d82523d6000602084013e612114565b606091505b509150915061212587838387612130565b979650505050505050565b6060831561219f578251600003612198576001600160a01b0385163b6121985760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610761565b50816109b2565b6109b283838151156121b45781518083602001fd5b8060405162461bcd60e51b8152600401610761919061251f565b6001600160e01b031981168114610a9657600080fd5b6000602082840312156121f657600080fd5b81356108aa816121ce565b60008083601f84011261221357600080fd5b5081356001600160401b0381111561222a57600080fd5b60208301915083602082850101111561224257600080fd5b9250929050565b6000806020838503121561225c57600080fd5b82356001600160401b0381111561227257600080fd5b61227e85828601612201565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126122b157600080fd5b81356001600160401b03808211156122cb576122cb61228a565b604051601f8301601f19908116603f011681019082821181831017156122f3576122f361228a565b8160405283815286602085880101111561230c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561233f57600080fd5b8235915060208301356001600160401b0381111561235c57600080fd5b612368858286016122a0565b9150509250929050565b6001600160a01b0381168114610a9657600080fd5b60008060006040848603121561239c57600080fd5b83356123a781612372565b925060208401356001600160401b03808211156123c357600080fd5b818601915086601f8301126123d757600080fd5b8135818111156123e657600080fd5b8760206060830285010111156123fb57600080fd5b6020830194508093505050509250925092565b6000806000806080858703121561242457600080fd5b843561242f81612372565b9350602085013561243f81612372565b92506040850135915060608501356001600160401b0381111561246157600080fd5b61246d878288016122a0565b91505092959194509250565b60006020828403121561248b57600080fd5b81356108aa81612372565b600080604083850312156124a957600080fd5b82356124b481612372565b915060208301356001600160401b0381111561235c57600080fd5b60005b838110156124ea5781810151838201526020016124d2565b50506000910152565b6000815180845261250b8160208601602086016124cf565b601f01601f19169290920160200192915050565b6020815260006108aa60208301846124f3565b6000806000806060858703121561254857600080fd5b843561255381612372565b93506020850135925060408501356001600160401b0381111561257557600080fd5b61258187828801612201565b95989497509550505050565b6000806000606084860312156125a257600080fd5b83356125ad816121ce565b925060208401356125bd816121ce565b915060408401356125cd816121ce565b809150509250925092565b600080600080606085870312156125ee57600080fd5b8435935060208501356001600160401b038082111561260c57600080fd5b818701915087601f83011261262057600080fd5b81358181111561262f57600080fd5b8860208260051b850101111561264457600080fd5b95986020929092019750949560400135945092505050565b600081518084526020808501808196508360051b8101915082860160005b858110156126a45782840389526126928483516124f3565b9885019893509084019060010161267a565b5091979650505050505050565b6040815260006126c4604083018561265c565b90508260208301529392505050565b600080600080608085870312156126e957600080fd5b84356126f481612372565b9350602085013561270481612372565b925060408501359150606085013561271b81612372565b939692955090935050565b60008060006060848603121561273b57600080fd5b833561274681612372565b9250602084013561275681612372565b929592945050506040919091013590565b6000806020838503121561277a57600080fd5b82356001600160401b038082111561279157600080fd5b818501915085601f8301126127a557600080fd5b8135818111156127b457600080fd5b86602060a0830285010111156127c957600080fd5b60209290920196919550909350505050565b600080600080600080608087890312156127f457600080fd5b86356001600160401b038082111561280b57600080fd5b6128178a838b01612201565b90985096506020890135915061282c82612372565b90945060408801359061283e82612372565b9093506060880135908082111561285457600080fd5b5061286189828a01612201565b979a9699509497509295939492505050565b6001600160a01b03831681526040602082018190526000906109b2908301846124f3565b8281526040602082015260006109b260408301846124f3565b6000602082840312156128c257600080fd5b81516108aa816121ce565b634e487b7160e01b600052603260045260246000fd5b8035600381106128f257600080fd5b919050565b60006060828403121561290957600080fd5b604051606081018181106001600160401b038211171561292b5761292b61228a565b604052612937836128e3565b8152602083013561294781612372565b60208201526040928301359281019290925250919050565b634e487b7160e01b600052602160045260246000fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600181811c90821680612a2157607f821691505b602082108103612a4157634e487b7160e01b600052602260045260246000fd5b50919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8381526040602082015260006109af604083018486612a47565b60008235605e19833603018112612aa057600080fd5b9190910192915050565b6000808335601e19843603018112612ac157600080fd5b8301803591506001600160401b03821115612adb57600080fd5b60200191503681900382131561224257600080fd5b8183823760009101908152919050565b600082612b1d57634e487b7160e01b600052601260045260246000fd5b500490565b600060a08201888352602060a0818501528188835260c08501905060c08960051b86010192508960005b8a811015612c015786850360bf190183528135368d9003605e19018112612b7257600080fd5b8c0160608135612b8181612372565b6001600160a01b03168752818601358688015260408083013536849003601e19018112612bad57600080fd5b9092018681019290356001600160401b03811115612bca57600080fd5b803603841315612bd957600080fd5b82828a0152612beb838a018286612a47565b9850505093850193505090830190600101612b4c565b505050508560408401528460608401528281036080840152612c23818561265c565b9998505050505050505050565b600060a08284031215612c4257600080fd5b60405160a081018181106001600160401b0382111715612c6457612c6461228a565b604052612c70836128e3565b81526020830135612c8081612372565b60208201526040830135612c9381612372565b60408201526060830135612ca681612372565b60608201526080928301359281019290925250919050565b601f82111561081557600081815260208120601f850160051c81016020861015612ce55750805b601f850160051c820191505b81811015612d0457828155600101612cf1565b505050505050565b6001600160401b03831115612d2357612d2361228a565b612d3783612d318354612a0d565b83612cbe565b6000601f841160018114612d6b5760008515612d535750838201355b600019600387901b1c1916600186901b178355610968565b600083815260209020601f19861690835b82811015612d9c5786850135825560209485019460019092019101612d7c565b5086821015612db95760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6020815260006109b2602083018486612a47565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061204b908301846124f3565b600060208284031215612e2457600080fd5b815180151581146108aa57600080fd5b600060208284031215612e4657600080fd5b5051919050565b60008251612aa08184602087016124cf56fe4707e94b25cfce1a7c363508fbb838c35864388ad77284b248282b9746982b9b360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564815fe80e4b37c8582a3b773d1d7071f983eacfd56b5965db654f3087c25ada33a2646970667358221220ff3e75c85a549209d04ff41e6765c690ce535882cc5348dcfda7eca2d2600fd464736f6c63430008110033",
    "sourceMap": "1397:13752:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11792:43;;;11813:10;188:51:72;;11825:9:50;270:2:72;255:18;;248:34;11792:43:50;;161:18:72;11792:43:50;;;;;;;1397:13752;;;;;;;;;;;;;;12328:12;12352:18;12373:32;12389:7;;-1:-1:-1;;;;;;12389:7:50;12398:6;;12373:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12373:15:50;;-1:-1:-1;;;12373:32:50:i;:::-;12422:23;;;-1:-1:-1;;;;;;455:33:72;;12422:23:50;;;437:52:72;12352:53:50;;-1:-1:-1;410:18:72;12422:23:50;;;;;;;;;;;;12415:30;;;12278:174;;;1397:13752;;;;;;841:188:34;;;;;;;;;;-1:-1:-1;841:188:34;;;;;:::i;:::-;;:::i;:::-;;;1051:14:72;;1044:22;1026:41;;1014:2;999:18;841:188:34;;;;;;;;1749:79:50;;;;;;;;;;;;1797:31;1749:79;;;;;1224:25:72;;;1212:2;1197:18;1749:79:50;1078:177:72;595:73:55;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;595:73:55;;14479:126:50;;;;;;;;;;-1:-1:-1;14479:126:50;;;;;:::i;:::-;;:::i;:::-;;10918:434;;;;;;;;;;-1:-1:-1;10918:434:50;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;455:33:72;;;437:52;;425:2;410:18;10918:434:50;293:202:72;8099:649:55;;;;;;;;;;-1:-1:-1;8099:649:55;;;;;:::i;:::-;;:::i;1927:87:50:-;;;;;;;;;;;;1979:35;1927:87;;10488:578:55;;;;;;;;;;-1:-1:-1;10488:578:55;;;;;:::i;:::-;;:::i;2740:125:50:-;;;;;;;;;;;;2815:50;2740:125;;3387:195:24;;;;;;;;;;-1:-1:-1;3387:195:24;;;;;:::i;:::-;;:::i;3103:34:50:-;;;;;;;;;;-1:-1:-1;3103:34:50;;;;-1:-1:-1;;;;;3103:34:50;;;;;;-1:-1:-1;;;;;5318:32:72;;;5300:51;;5288:2;5273:18;3103:34:50;5136:221:72;10604:283:50;;;;;;;;;;-1:-1:-1;10604:283:50;;;;;:::i;:::-;;:::i;3901:220:24:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;14278:87:50:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2297:115::-;;;;;;;;;;;;2367:45;2297:115;;9904:669;;;;;;:::i;:::-;;:::i;13849:394::-;;;;;;;;;;-1:-1:-1;13849:394:50;;;;;:::i;:::-;;:::i;7586:2287::-;;;;;;;;;;-1:-1:-1;7586:2287:50;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;6749:271:55:-;;;;;;;;;;-1:-1:-1;6749:271:55;;;;;:::i;:::-;;:::i;6980:120:50:-;;;;;;;;;;-1:-1:-1;7077:16:50;;-1:-1:-1;;;;;7077:16:50;6980:120;;5732:192:55;;;;;;;;;;-1:-1:-1;5732:192:55;;;;;:::i;:::-;;:::i;7655:194::-;;;;;;;;;;-1:-1:-1;7655:194:55;;;;;:::i;:::-;;:::i;6757:192:50:-;;;;;;;;;;-1:-1:-1;6757:192:50;;;;;:::i;:::-;;:::i;2515:119::-;;;;;;;;;;;;2587:47;2515:119;;2107:89;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2107:89:50;;8941:934:55;;;;;;;;;;-1:-1:-1;8941:934:55;;;;;:::i;:::-;;:::i;5182:548:50:-;;;;;;;;;;-1:-1:-1;5182:548:50;;;;;:::i;:::-;;:::i;7403:152::-;;;;;;;;;;-1:-1:-1;7403:152:50;;;;;:::i;:::-;;:::i;7131:241::-;;;;;;;;;;-1:-1:-1;7131:241:50;;;;;:::i;:::-;;:::i;2229:486:61:-;-1:-1:-1;;;;;;2387:39:61;;;2348:6;2387:39;;;:20;:39;;;;;;2348:6;;2387:39;;;;;;2440:36;;2436:153;;2499:79;;-1:-1:-1;;;2499:79:61;;-1:-1:-1;;;;;;13092:15:72;;;2499:79:61;;;13074:34:72;13144:15;;13124:18;;;13117:43;13008:18;;2499:79:61;;;;;;;;2436:153;2647:17;-1:-1:-1;;;;;2604:75:61;;;2630:10;2672:5;2604:75;;;;;;;:::i;:::-;;;;;;;;2697:11;-1:-1:-1;2229:486:61;;;;;:::o;841:188:34:-;926:4;-1:-1:-1;;;;;;;;;1168:51:35;;;949:73:34;;;-1:-1:-1;;;;;;;;989:33:34;;;;;:20;:33;;;;;;;;;841:188::o;14479:126:50:-;-1:-1:-1;;;;;;;;;;;4670:20:55;4676:13;4670:5;:20::i;:::-;14577:21:50::1;14588:9;;14577:10;:21::i;:::-;14479:126:::0;;;:::o;10918:434::-;11084:18;;11054:6;;-1:-1:-1;;;;;11084:18:50;11072:135;;-1:-1:-1;11194:1:50;11180:16;;11072:135;11291:18;;:54;;-1:-1:-1;;;11291:54:50;;-1:-1:-1;;;;;11291:18:50;;;;:35;;:54;;11327:5;;11334:10;;11291:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11284:61;10918:434;-1:-1:-1;;;10918:434:50:o;8099:649:55:-;-1:-1:-1;;;;;;;;;;;4670:20:55;4676:13;4670:5;:20::i;:::-;8287:9:::1;8282:460;8298:16:::0;;::::1;8282:460;;;8332:48;8383:5;;8389:1;8383:8;;;;;;;:::i;:::-;;;;;;8332:59;;;;;;;;;;:::i;:::-;::::0;-1:-1:-1;8428:29:55::1;8410:14:::0;;:47:::1;::::0;::::1;;;;;;:::i;:::-;::::0;8406:266:::1;;8477:43;8484:6;8492:4;:8;;;8502:4;:17;;;8477:6;:43::i;:::-;8406:266;;;8563:30;8545:14:::0;;:48:::1;::::0;::::1;;;;;;:::i;:::-;::::0;8541:131:::1;;8613:44;8621:6;8629:4;:8;;;8639:4;:17;;;8613:7;:44::i;:::-;-1:-1:-1::0;8714:3:55::1;;8282:460;;;;8099:649:::0;;;;:::o;10488:578::-;10647:4;10682:46;10693:6;10701:4;10707:13;10722:5;10682:10;:46::i;:::-;:178;;;;10810:50;10821:6;-1:-1:-1;;;;;10839:13:55;10854:5;10810:10;:50::i;:::-;10682:308;;;;10942:48;-1:-1:-1;;;;;10963:4:55;10969:13;10984:5;10942:10;:48::i;:::-;10663:327;;10488:578;;;;;;;:::o;3387:195:24:-;-1:-1:-1;;;;;1898:6:24;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:24;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:24;:20;-1:-1:-1;;;;;;;;;;;1536:65:21;-1:-1:-1;;;;;1536:65:21;;1457:151;1971:20:24;-1:-1:-1;;;;;1971:30:24;;1963:87;;;;-1:-1:-1;;;1963:87:24;;;;;;;:::i;:::-;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;10604:283:50:-;2587:47;4670:20:55;4676:13;4670:5;:20::i;:::-;10750:18:50::1;:50:::0;;-1:-1:-1;;;;;;10750:50:50::1;-1:-1:-1::0;;;;;10750:50:50;::::1;::::0;;::::1;::::0;;;10816:64:::1;::::0;5300:51:72;;;10816:64:50::1;::::0;5288:2:72;5273:18;10816:64:50::1;;;;;;;;10604:283:::0;;:::o;3901:220:24:-;-1:-1:-1;;;;;1898:6:24;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:24;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:24;:20;-1:-1:-1;;;;;;;;;;;1536:65:21;-1:-1:-1;;;;;1536:65:21;;1457:151;1971:20:24;-1:-1:-1;;;;;1971:30:24;;1963:87;;;;-1:-1:-1;;;1963:87:24;;;;;;;:::i;:::-;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;:::-;3901:220:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:24;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:24;;16157:2:72;2308:92:24;;;16139:21:72;16196:2;16176:18;;;16169:30;16235:34;16215:18;;;16208:62;16306:26;16286:18;;;16279:54;16350:19;;2308:92:24;15955:420:72;2308:92:24;-1:-1:-1;;;;;;;;;;;;3006:131:24;:::o;14278:87:50:-;14319:13;14351:7;14344:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14278:87;:::o;9904:669::-;10052:7;10063:1;10052:12;10048:37;;10073:12;;-1:-1:-1;;;10073:12:50;;;;;;;;;;;10048:37;-1:-1:-1;;;;;10100:20:50;;10096:405;;10153:7;10140:9;:20;10136:121;;10185:72;;-1:-1:-1;;;10185:72:50;;;;;16939:25:72;;;10246:9:50;16980:18:72;;;16973:34;16912:18;;10185:72:50;16765:248:72;10136:121:50;10096:405;;;10292:9;:14;10288:109;;10331:66;;-1:-1:-1;;;10331:66:50;;10375:1;10331:66;;;16939:25:72;10386:9:50;16980:18:72;;;16973:34;16912:18;;10331:66:50;16765:248:72;10288:109:50;10412:78;-1:-1:-1;;;;;10412:42:50;;10455:10;10475:4;10482:7;10412:42;:78::i;:::-;10538:6;-1:-1:-1;;;;;10516:50:50;10526:10;-1:-1:-1;;;;;10516:50:50;;10546:7;10555:10;;10516:50;;;;;;;;:::i;:::-;;;;;;;;9904:669;;;;:::o;13849:394::-;2815:50;4670:20:55;4676:13;4670:5;:20::i;:::-;14056:32:50::1;14075:12;14056:18;:32::i;:::-;14098:50;14116:17;14135:12;14098:17;:50::i;:::-;14163:73;::::0;;-1:-1:-1;;;;;;18127:15:72;;;18109:34;;18179:15;;;18174:2;18159:18;;18152:43;18231:15;;18211:18;;;18204:43;14163:73:50;;::::1;::::0;;;;18058:2:72;14163:73:50;;::::1;13849:394:::0;;;;:::o;7586:2287::-;7791:26;7819:18;1797:31;4670:20:55;4676:13;4670:5;:20::i;:::-;2991:3:50::1;7857:29:::0;::::1;7853:83;;;7909:16;;-1:-1:-1::0;;;7909:16:50::1;;;;;;;;;;;7853:83;7972:8:::0;-1:-1:-1;;;;;7960:28:50;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7946:42;;7999:17;8026:16:::0;8058:9:::1;8053:1566;8073:19:::0;;::::1;8053:1566;;;8122:9;8110:21;;8147:12;8161:19:::0;8184:8:::1;;8193:1;8184:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:14;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;8184:19:50::1;8211:8;;8220:1;8211:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:17;;;8247:8;;8256:1;8247:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:16;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;8184:93;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8146:131;;;;8302:9;8291:20:::0;-1:-1:-1;368:1:60;:10;;;;358:21;;8369:1142:50::1;;8478:7;8473:77;;8516:15;::::0;-1:-1:-1;;;8516:15:50;;::::1;::::0;::::1;1224:25:72::0;;;1197:18;;8516:15:50::1;1078:177:72::0;8473:77:50::1;8369:1142;;;8638:7;8633:864;;9271:14;9283:2;9271:9:::0;:14:::1;:::i;:::-;9260:8;:25;9256:104;;;9320:17;;-1:-1:-1::0;;;9320:17:50::1;;;;;;;;;;;9256:104;676:1:60::0;:10;;;;666:21;;9436:42:50::1;;8633:864;9542:6;9525:11;9537:1;9525:14;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:23;-1:-1:-1;;9591:3:50::1;;8053:1566;;;;9664:10;-1:-1:-1::0;;;;;9634:232:50::1;;9696:7;9726:8;;9765:16;9807:10;9844:11;9634:232;;;;;;;;;;;:::i;:::-;;;;;;;;7843:2030;;7586:2287:::0;;;;;;;;:::o;6749:271:55:-;-1:-1:-1;;;;;;;;;;;4670:20:55;4676:13;4670:5;:20::i;:::-;6953:60:::1;6973:6;6981:4;6987:13;7002:10;6953:19;:60::i;5732:192::-:0;-1:-1:-1;;;;;;;;;;;4670:20:55;4676:13;4670:5;:20::i;:::-;5882:35:::1;5889:6;5897:4;5903:13;5882:6;:35::i;:::-;5732:192:::0;;;;:::o;7655:194::-;-1:-1:-1;;;;;;;;;;;4670:20:55;4676:13;4670:5;:20::i;:::-;7806:36:::1;7814:6;7822:4;7828:13;7806:7;:36::i;6757:192:50:-:0;2367:45;4670:20:55;4676:13;4670:5;:20::i;:::-;6900:42:50::1;6921:20;6900;:42::i;8941:934:55:-:0;-1:-1:-1;;;;;;;;;;;4670:20:55;4676:13;4670:5;:20::i;:::-;9104:9:::1;9099:770;9115:17:::0;;::::1;9099:770;;;9150:47;9200:6;;9207:1;9200:9;;;;;;;:::i;:::-;;;;;;9150:59;;;;;;;;;;:::i;:::-;::::0;-1:-1:-1;9246:29:55::1;9228:14:::0;;:47:::1;::::0;::::1;;;;;;:::i;:::-;::::0;9224:575:::1;;9295:47;9302:4;:10;;;9314:4;:8;;;9324:4;:17;;;9295:6;:47::i;:::-;9224:575;;;9385:30;9367:14:::0;;:48:::1;::::0;::::1;;;;;;:::i;:::-;::::0;9363:436:::1;;9435:48;9443:4;:10;;;9455:4;:8;;;9465:4;:17;;;9435:7;:48::i;9363:436::-;9526:42;9508:14:::0;;:60:::1;::::0;::::1;;;;;;:::i;:::-;::::0;9504:295:::1;;9588:196;9629:4;:10;;;9661:4;:8;;;9691:4;:17;;;9751:4;:14;;;9588:19;:196::i;:::-;-1:-1:-1::0;9841:3:55::1;;9099:770;;5182:548:50::0;3279:19:23;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:23;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:23;1713:19:31;:23;;;3387:66:23;;-1:-1:-1;3436:12:23;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:23;;23190:2:72;3325:201:23;;;23172:21:72;23229:2;23209:18;;;23202:30;23268:34;23248:18;;;23241:62;-1:-1:-1;;;23319:18:72;;;23312:44;23373:19;;3325:201:23;22988:410:72;3325:201:23;3536:12;:16;;-1:-1:-1;;3536:16:23;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:23;;;;;3562:65;5372:42:50::1;-1:-1:-1::0;;;5372:18:50::1;:42::i;:::-;5424:46;-1:-1:-1::0;;;5424:18:50::1;:46::i;:::-;5480;-1:-1:-1::0;;;5480:18:50::1;:46::i;:::-;5536:26;:24;:26::i;:::-;5573:23;5586:9;;5573:12;:23::i;:::-;5606:39;5627:17;5606:20;:39::i;:::-;5655:19;5666:7;;5655:10;:19::i;:::-;5684:39;5709:13;5684:24;:39::i;:::-;3651:14:23::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:23;;;3721:14;;-1:-1:-1;23555:36:72;;3721:14:23;;23543:2:72;23528:18;3721:14:23;;;;;;;3647:99;3269:483;5182:548:50;;;;;;:::o;7403:152::-;-1:-1:-1;;;;;;;;;;;4670:20:55;4676:13;4670:5;:20::i;:::-;7525:23:50::1;7538:9;;7525:12;:23::i;7131:241::-:0;7297:4;7320:45;7330:6;7338:4;7344:13;7359:5;7320:9;:45::i;17066:320:55:-;17141:61;17159:4;17166:10;17178:13;17193:8;;17141:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17141:9:55;;-1:-1:-1;;;17141:61:55:i;:::-;17136:244;;17225:144;;-1:-1:-1;;;17225:144:55;;17271:4;17225:144;;;23842:34:72;17299:10:55;23892:18:72;;;23885:43;23944:18;;;23937:34;;;23777:18;;17225:144:55;23602:375:72;14720:119:50;14784:7;:17;14794:7;;14784;:17;:::i;:::-;;14817:15;14824:7;;14817:15;;;;;;;:::i;11740:185:55:-;11836:82;11856:6;11864:4;11870:13;1121:1;11836:19;:82::i;15001:355::-;15098:16;15117:43;15132:6;15140:4;15146:13;15117:14;:43::i;:::-;994:1;15174:27;;;:17;:27;;;;;;15098:62;;-1:-1:-1;;;;;;15174:27:55;:41;15170:180;;994:1;15231:27;;;:17;:27;;;;;;;;;:40;;-1:-1:-1;;;;;;15231:40:55;;;15291:48;;-1:-1:-1;;;;;5318:32:72;;;5300:51;;15291:48:55;;;15314:10;;15299:13;;15291:48;;5273:18:72;15291:48:55;;;;;;;15088:268;15001:355;;;:::o;15988:832::-;16150:4;16166:29;16198:17;:84;16229:43;16244:6;16252:4;16258:13;16229:14;:43::i;:::-;16198:84;;;;;;;;;;;-1:-1:-1;16198:84:55;;-1:-1:-1;;;;;16198:84:55;;-1:-1:-1;16198:84:55;16293:53;;16341:5;16334:12;;;;;16293:53;-1:-1:-1;;;;;;;16360:35:55;;;16356:52;;16404:4;16397:11;;;;;16356:52;16534:167;;-1:-1:-1;;;16534:167:55;;-1:-1:-1;;;;;16534:53:55;;;;;:167;;16605:6;;16629:4;;16651:13;;16682:5;;16534:167;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;16534:167:55;;;;;;;;-1:-1:-1;;16534:167:55;;;;;;;;;;;;:::i;:::-;;;16518:273;;;16751:7;16747:24;;;16767:4;16760:11;;;;;;16747:24;16710:72;16518:273;-1:-1:-1;16808:5:55;;15988:832;-1:-1:-1;;;;;15988:832:55:o;6630:96:50:-;1979:35;4670:20:55;4676:13;4670:5;:20::i;2820:944:21:-;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;3232:526::-;3412:17;-1:-1:-1;;;;;3383:61:21;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:21;;;;;;;;-1:-1:-1;;3383:63:21;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;-1:-1:-1;;;3610:56:21;;27459:2:72;3610:56:21;;;27441:21:72;27498:2;27478:18;;;27471:30;27537:34;27517:18;;;27510:62;-1:-1:-1;;;27588:18:72;;;27581:44;27642:19;;3610:56:21;27257:410:72;3379:302:21;-1:-1:-1;;;;;;;;;;;3496:28:21;;3488:82;;;;-1:-1:-1;;;3488:82:21;;27874:2:72;3488:82:21;;;27856:21:72;27913:2;27893:18;;;27886:30;27952:34;27932:18;;;27925:62;-1:-1:-1;;;28003:18:72;;;27996:39;28052:19;;3488:82:21;27672:405:72;3488:82:21;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;1421:214:29:-;1559:68;;;-1:-1:-1;;;;;23860:15:72;;;1559:68:29;;;23842:34:72;23912:15;;23892:18;;;23885:43;23944:18;;;;23937:34;;;1559:68:29;;;;;;;;;;23777:18:72;;;;1559:68:29;;;;;;;;-1:-1:-1;;;;;1559:68:29;-1:-1:-1;;;1559:68:29;;;1532:96;;1552:5;;1532:19;:96::i;1423:198:34:-;-1:-1:-1;;;;;;1506:25:34;;;;;1498:66;;;;-1:-1:-1;;;1498:66:34;;28664:2:72;1498:66:34;;;28646:21:72;28703:2;28683:18;;;28676:30;28742;28722:18;;;28715:58;28790:18;;1498:66:34;28462:352:72;1498:66:34;-1:-1:-1;;;;;;1574:33:34;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1574:40:34;1610:4;1574:40;;;1423:198::o;2966:162:61:-;-1:-1:-1;;;;;;3067:39:61;;;;;;;;:20;:39;;;;;:54;;-1:-1:-1;;3067:54:61;;;;;;;;;;;;2966:162::o;12590:1879:55:-;-1:-1:-1;;;;;12774:18:55;;;;:38;;;;-1:-1:-1;;;;;;12796:16:55;;;;12774:38;12770:112;;;12835:36;;-1:-1:-1;;;12835:36:55;;;;;;;;;;;12770:112;-1:-1:-1;;;;;12896:18:55;;;;;:38;;-1:-1:-1;;;;;;12918:16:55;;;;12896:38;12892:409;;;12950:17;12970:47;13003:13;12970:32;:47::i;:::-;12950:67;;-1:-1:-1;;;;;;;;;;;13035:13:55;:35;:51;;;;13074:12;13035:51;13031:133;;;13113:36;;-1:-1:-1;;;13113:36:55;;;;;;;;;;;13031:133;-1:-1:-1;;;;;;;13182:33:55;;;13178:113;;13242:34;;-1:-1:-1;;;13242:34:55;;;;;;;;;;;13178:113;12936:365;12892:409;13311:16;13330:43;13345:6;13353:4;13359:13;13330:14;:43::i;:::-;13384:24;13411:27;;;:17;:27;;;;;;13311:62;;-1:-1:-1;;;;;;13411:27:55;13479:10;13411:27;13549:914;;13599:27;;;;:17;:27;;;;;;;;;:42;;-1:-1:-1;;;;;;13599:42:55;-1:-1:-1;;;;;13599:42:55;;;;;;;;;;13661:60;;29079:15:72;;;29061:34;;29131:15;;;29111:18;;;29104:43;;;;13661:60:55;;;13684:10;;13669:13;;13661:60;;28996:18:72;13661:60:55;;;;;;;13549:914;;;13762:12;-1:-1:-1;;;;;13742:32:55;:16;-1:-1:-1;;;;;13742:32:55;;13738:725;;14192:260;;-1:-1:-1;;;14192:260:55;;-1:-1:-1;;;;;29473:15:72;;;14192:260:55;;;29455:34:72;29525:15;;;29505:18;;;29498:43;29557:18;;;29550:34;;;29620:15;;;29600:18;;;29593:43;29673:15;;29652:19;;;29645:44;29389:19;;14192:260:55;29158:537:72;12842:173:50;12918:16;:36;;-1:-1:-1;;;;;;12918:36:50;-1:-1:-1;;;;;12918:36:50;;;;;;;;12970:38;;5300:51:72;;;12970:38:50;;5288:2:72;5273:18;12970:38:50;;;;;;;12842:173;:::o;13092:726::-;13146:64;-1:-1:-1;;;13146:18:50;:64::i;:::-;13220:65;-1:-1:-1;;;13220:18:50;:65::i;:::-;13296:159;-1:-1:-1;;;13327:52:50;13296:17;:159::i;:::-;13465:163;-1:-1:-1;;;13496:54:50;13465:17;:163::i;:::-;13638:173;-1:-1:-1;;;13669:59:50;13638:17;:173::i;:::-;13092:726::o;12585:101::-;12657:22;12669:9;;12657:22;;;;;;;:::i;4957:143:55:-;5374:13:23;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:23;;30152:2:72;5366:69:23;;;30134:21:72;30191:2;30171:18;;;30164:30;30230:34;30210:18;;;30203:62;-1:-1:-1;;;30281:18:72;;;30274:41;30332:19;;5366:69:23;29950:407:72;5366:69:23;5050:43:55::1;5079:13;5050:28;:43::i;17849:241::-:0;18023:59;;-1:-1:-1;;;18023:59:55;;;30648:25:72;-1:-1:-1;;30761:2:72;30757:15;;;30753:24;;30739:12;;;30732:46;30812:15;;;30808:24;30794:12;;;30787:46;30849:12;;;30842:28;;;17987:7:55;;30886:12:72;;18023:59:55;;;;;;;;;;;;18013:70;;;;;;18006:77;;17849:241;;;;;:::o;1699:281:21:-;-1:-1:-1;;;;;1713:19:31;;;1772:106:21;;;;-1:-1:-1;;;1772:106:21;;31111:2:72;1772:106:21;;;31093:21:72;31150:2;31130:18;;;31123:30;31189:34;31169:18;;;31162:62;-1:-1:-1;;;31240:18:72;;;31233:43;31293:19;;1772:106:21;30909:409:72;1772:106:21;-1:-1:-1;;;;;;;;;;;1888:85:21;;-1:-1:-1;;;;;;1888:85:21;-1:-1:-1;;;;;1888:85:21;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;5305:653:29:-;5735:23;5761:69;5789:4;5761:69;;;;;;;;;;;;;;;;;5769:5;-1:-1:-1;;;;;5761:27:29;;;:69;;;;;:::i;:::-;5735:95;;5848:10;:17;5869:1;5848:22;:56;;;;5885:10;5874:30;;;;;;;;;;;;:::i;:::-;5840:111;;;;-1:-1:-1;;;5840:111:29;;31525:2:72;5840:111:29;;;31507:21:72;31564:2;31544:18;;;31537:30;31603:34;31583:18;;;31576:62;-1:-1:-1;;;31654:18:72;;;31647:40;31704:19;;5840:111:29;31323:406:72;5774:519:50;5885:4;1797:31;5920:13;:38;:96;;;;1979:35;5974:13;:42;5920:96;:155;;;;-1:-1:-1;;;;;;;;;;;6032:13:50;:43;5920:155;:223;;;;2367:45;6091:13;:52;5920:223;:293;;;;2587:47;6159:13;:54;5920:293;:366;;;-1:-1:-1;;2815:50:50;6229:57;;5774:519::o;11275:143:55:-;11355:56;11370:4;11377:13;-1:-1:-1;;;;;;;;;;;11355:6:55;:56::i;2086:152:21:-;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;-1:-1:-1;;;;;2204:27:21;;;;;;;;2086:152;:::o;6685:198:31:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;4119:223::-;4252:12;4283:52;4305:6;4313:4;4319:1;4322:12;4283:21;:52::i;7069:325::-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:31;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:31:o;5176:446::-;5341:12;5398:5;5373:21;:30;;5365:81;;;;-1:-1:-1;;;5365:81:31;;32228:2:72;5365:81:31;;;32210:21:72;32267:2;32247:18;;;32240:30;32306:34;32286:18;;;32279:62;-1:-1:-1;;;32357:18:72;;;32350:36;32403:19;;5365:81:31;32026:402:72;5365:81:31;5457:12;5471:23;5498:6;-1:-1:-1;;;;;5498:11:31;5517:5;5524:4;5498:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5456:73;;;;5546:69;5573:6;5581:7;5590:10;5602:12;5546:26;:69::i;:::-;5539:76;5176:446;-1:-1:-1;;;;;;;5176:446:31:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:31;;;8124:60;;;;-1:-1:-1;;;8124:60:31;;32635:2:72;8124:60:31;;;32617:21:72;32674:2;32654:18;;;32647:30;32713:31;32693:18;;;32686:59;32762:18;;8124:60:31;32433:353:72;8124:60:31;-1:-1:-1;8219:10:31;8212:17;;7886:418;8260:33;8268:10;8280:12;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:31;;;;;;;;:::i;500:131:72:-;-1:-1:-1;;;;;;574:32:72;;564:43;;554:71;;621:1;618;611:12;636:245;694:6;747:2;735:9;726:7;722:23;718:32;715:52;;;763:1;760;753:12;715:52;802:9;789:23;821:30;845:5;821:30;:::i;1260:348::-;1312:8;1322:6;1376:3;1369:4;1361:6;1357:17;1353:27;1343:55;;1394:1;1391;1384:12;1343:55;-1:-1:-1;1417:20:72;;-1:-1:-1;;;;;1449:30:72;;1446:50;;;1492:1;1489;1482:12;1446:50;1529:4;1521:6;1517:17;1505:29;;1581:3;1574:4;1565:6;1557;1553:19;1549:30;1546:39;1543:59;;;1598:1;1595;1588:12;1543:59;1260:348;;;;;:::o;1613:411::-;1684:6;1692;1745:2;1733:9;1724:7;1720:23;1716:32;1713:52;;;1761:1;1758;1751:12;1713:52;1801:9;1788:23;-1:-1:-1;;;;;1826:6:72;1823:30;1820:50;;;1866:1;1863;1856:12;1820:50;1905:59;1956:7;1947:6;1936:9;1932:22;1905:59;:::i;:::-;1983:8;;1879:85;;-1:-1:-1;1613:411:72;-1:-1:-1;;;;1613:411:72:o;2029:127::-;2090:10;2085:3;2081:20;2078:1;2071:31;2121:4;2118:1;2111:15;2145:4;2142:1;2135:15;2161:718;2203:5;2256:3;2249:4;2241:6;2237:17;2233:27;2223:55;;2274:1;2271;2264:12;2223:55;2310:6;2297:20;-1:-1:-1;;;;;2373:2:72;2369;2366:10;2363:36;;;2379:18;;:::i;:::-;2454:2;2448:9;2422:2;2508:13;;-1:-1:-1;;2504:22:72;;;2528:2;2500:31;2496:40;2484:53;;;2552:18;;;2572:22;;;2549:46;2546:72;;;2598:18;;:::i;:::-;2638:10;2634:2;2627:22;2673:2;2665:6;2658:18;2719:3;2712:4;2707:2;2699:6;2695:15;2691:26;2688:35;2685:55;;;2736:1;2733;2726:12;2685:55;2800:2;2793:4;2785:6;2781:17;2774:4;2766:6;2762:17;2749:54;2847:1;2840:4;2835:2;2827:6;2823:15;2819:26;2812:37;2867:6;2858:15;;;;;;2161:718;;;;:::o;2884:388::-;2961:6;2969;3022:2;3010:9;3001:7;2997:23;2993:32;2990:52;;;3038:1;3035;3028:12;2990:52;3074:9;3061:23;3051:33;;3135:2;3124:9;3120:18;3107:32;-1:-1:-1;;;;;3154:6:72;3151:30;3148:50;;;3194:1;3191;3184:12;3148:50;3217:49;3258:7;3249:6;3238:9;3234:22;3217:49;:::i;:::-;3207:59;;;2884:388;;;;;:::o;3277:131::-;-1:-1:-1;;;;;3352:31:72;;3342:42;;3332:70;;3398:1;3395;3388:12;3413:796;3551:6;3559;3567;3620:2;3608:9;3599:7;3595:23;3591:32;3588:52;;;3636:1;3633;3626:12;3588:52;3675:9;3662:23;3694:31;3719:5;3694:31;:::i;:::-;3744:5;-1:-1:-1;3800:2:72;3785:18;;3772:32;-1:-1:-1;;;;;3853:14:72;;;3850:34;;;3880:1;3877;3870:12;3850:34;3918:6;3907:9;3903:22;3893:32;;3963:7;3956:4;3952:2;3948:13;3944:27;3934:55;;3985:1;3982;3975:12;3934:55;4025:2;4012:16;4051:2;4043:6;4040:14;4037:34;;;4067:1;4064;4057:12;4037:34;4123:7;4118:2;4110:4;4102:6;4098:17;4094:2;4090:26;4086:35;4083:48;4080:68;;;4144:1;4141;4134:12;4080:68;4175:2;4171;4167:11;4157:21;;4197:6;4187:16;;;;;3413:796;;;;;:::o;4214:665::-;4309:6;4317;4325;4333;4386:3;4374:9;4365:7;4361:23;4357:33;4354:53;;;4403:1;4400;4393:12;4354:53;4442:9;4429:23;4461:31;4486:5;4461:31;:::i;:::-;4511:5;-1:-1:-1;4568:2:72;4553:18;;4540:32;4581:33;4540:32;4581:33;:::i;:::-;4633:7;-1:-1:-1;4687:2:72;4672:18;;4659:32;;-1:-1:-1;4742:2:72;4727:18;;4714:32;-1:-1:-1;;;;;4758:30:72;;4755:50;;;4801:1;4798;4791:12;4755:50;4824:49;4865:7;4856:6;4845:9;4841:22;4824:49;:::i;:::-;4814:59;;;4214:665;;;;;;;:::o;4884:247::-;4943:6;4996:2;4984:9;4975:7;4971:23;4967:32;4964:52;;;5012:1;5009;5002:12;4964:52;5051:9;5038:23;5070:31;5095:5;5070:31;:::i;5362:455::-;5439:6;5447;5500:2;5488:9;5479:7;5475:23;5471:32;5468:52;;;5516:1;5513;5506:12;5468:52;5555:9;5542:23;5574:31;5599:5;5574:31;:::i;:::-;5624:5;-1:-1:-1;5680:2:72;5665:18;;5652:32;-1:-1:-1;;;;;5696:30:72;;5693:50;;;5739:1;5736;5729:12;5822:250;5907:1;5917:113;5931:6;5928:1;5925:13;5917:113;;;6007:11;;;6001:18;5988:11;;;5981:39;5953:2;5946:10;5917:113;;;-1:-1:-1;;6064:1:72;6046:16;;6039:27;5822:250::o;6077:271::-;6119:3;6157:5;6151:12;6184:6;6179:3;6172:19;6200:76;6269:6;6262:4;6257:3;6253:14;6246:4;6239:5;6235:16;6200:76;:::i;:::-;6330:2;6309:15;-1:-1:-1;;6305:29:72;6296:39;;;;6337:4;6292:50;;6077:271;-1:-1:-1;;6077:271:72:o;6353:220::-;6502:2;6491:9;6484:21;6465:4;6522:45;6563:2;6552:9;6548:18;6540:6;6522:45;:::i;6578:614::-;6667:6;6675;6683;6691;6744:2;6732:9;6723:7;6719:23;6715:32;6712:52;;;6760:1;6757;6750:12;6712:52;6799:9;6786:23;6818:31;6843:5;6818:31;:::i;:::-;6868:5;-1:-1:-1;6920:2:72;6905:18;;6892:32;;-1:-1:-1;6975:2:72;6960:18;;6947:32;-1:-1:-1;;;;;6991:30:72;;6988:50;;;7034:1;7031;7024:12;6988:50;7073:59;7124:7;7115:6;7104:9;7100:22;7073:59;:::i;:::-;6578:614;;;;-1:-1:-1;7151:8:72;-1:-1:-1;;;;6578:614:72:o;7197:523::-;7271:6;7279;7287;7340:2;7328:9;7319:7;7315:23;7311:32;7308:52;;;7356:1;7353;7346:12;7308:52;7395:9;7382:23;7414:30;7438:5;7414:30;:::i;:::-;7463:5;-1:-1:-1;7520:2:72;7505:18;;7492:32;7533;7492;7533;:::i;:::-;7584:7;-1:-1:-1;7643:2:72;7628:18;;7615:32;7656;7615;7656;:::i;:::-;7707:7;7697:17;;;7197:523;;;;;:::o;7725:778::-;7856:6;7864;7872;7880;7933:2;7921:9;7912:7;7908:23;7904:32;7901:52;;;7949:1;7946;7939:12;7901:52;7985:9;7972:23;7962:33;;8046:2;8035:9;8031:18;8018:32;-1:-1:-1;;;;;8110:2:72;8102:6;8099:14;8096:34;;;8126:1;8123;8116:12;8096:34;8164:6;8153:9;8149:22;8139:32;;8209:7;8202:4;8198:2;8194:13;8190:27;8180:55;;8231:1;8228;8221:12;8180:55;8271:2;8258:16;8297:2;8289:6;8286:14;8283:34;;;8313:1;8310;8303:12;8283:34;8366:7;8361:2;8351:6;8348:1;8344:14;8340:2;8336:23;8332:32;8329:45;8326:65;;;8387:1;8384;8377:12;8326:65;7725:778;;8418:2;8410:11;;;;;-1:-1:-1;8440:6:72;;8493:2;8478:18;8465:32;;-1:-1:-1;7725:778:72;-1:-1:-1;;;7725:778:72:o;8508:615::-;8559:3;8597:5;8591:12;8624:6;8619:3;8612:19;8650:4;8691:2;8686:3;8682:12;8716:11;8743;8736:18;;8793:6;8790:1;8786:14;8779:5;8775:26;8763:38;;8835:2;8828:5;8824:14;8856:1;8866:231;8880:6;8877:1;8874:13;8866:231;;;8951:5;8945:4;8941:16;8936:3;8929:29;8979:38;9012:4;9003:6;8997:13;8979:38;:::i;:::-;9075:12;;;;8971:46;-1:-1:-1;9040:15:72;;;;8902:1;8895:9;8866:231;;;-1:-1:-1;9113:4:72;;8508:615;-1:-1:-1;;;;;;;8508:615:72:o;9128:348::-;9353:2;9342:9;9335:21;9316:4;9373:54;9423:2;9412:9;9408:18;9400:6;9373:54;:::i;:::-;9365:62;;9463:6;9458:2;9447:9;9443:18;9436:34;9128:348;;;;;:::o;9481:628::-;9597:6;9605;9613;9621;9674:3;9662:9;9653:7;9649:23;9645:33;9642:53;;;9691:1;9688;9681:12;9642:53;9730:9;9717:23;9749:31;9774:5;9749:31;:::i;:::-;9799:5;-1:-1:-1;9856:2:72;9841:18;;9828:32;9869:33;9828:32;9869:33;:::i;:::-;9921:7;-1:-1:-1;9975:2:72;9960:18;;9947:32;;-1:-1:-1;10031:2:72;10016:18;;10003:32;10044:33;10003:32;10044:33;:::i;:::-;9481:628;;;;-1:-1:-1;9481:628:72;;-1:-1:-1;;9481:628:72:o;10322:456::-;10399:6;10407;10415;10468:2;10456:9;10447:7;10443:23;10439:32;10436:52;;;10484:1;10481;10474:12;10436:52;10523:9;10510:23;10542:31;10567:5;10542:31;:::i;:::-;10592:5;-1:-1:-1;10649:2:72;10634:18;;10621:32;10662:33;10621:32;10662:33;:::i;:::-;10322:456;;10714:7;;-1:-1:-1;;;10768:2:72;10753:18;;;;10740:32;;10322:456::o;10783:660::-;10911:6;10919;10972:2;10960:9;10951:7;10947:23;10943:32;10940:52;;;10988:1;10985;10978:12;10940:52;11028:9;11015:23;-1:-1:-1;;;;;11098:2:72;11090:6;11087:14;11084:34;;;11114:1;11111;11104:12;11084:34;11152:6;11141:9;11137:22;11127:32;;11197:7;11190:4;11186:2;11182:13;11178:27;11168:55;;11219:1;11216;11209:12;11168:55;11259:2;11246:16;11285:2;11277:6;11274:14;11271:34;;;11301:1;11298;11291:12;11271:34;11357:7;11352:2;11344:4;11336:6;11332:17;11328:2;11324:26;11320:35;11317:48;11314:68;;;11378:1;11375;11368:12;11314:68;11409:2;11401:11;;;;;11431:6;;-1:-1:-1;10783:660:72;;-1:-1:-1;;;;10783:660:72:o;11448:997::-;11557:6;11565;11573;11581;11589;11597;11650:3;11638:9;11629:7;11625:23;11621:33;11618:53;;;11667:1;11664;11657:12;11618:53;11707:9;11694:23;-1:-1:-1;;;;;11777:2:72;11769:6;11766:14;11763:34;;;11793:1;11790;11783:12;11763:34;11832:59;11883:7;11874:6;11863:9;11859:22;11832:59;:::i;:::-;11910:8;;-1:-1:-1;11806:85:72;-1:-1:-1;11995:2:72;11980:18;;11967:32;;-1:-1:-1;12008:31:72;11967:32;12008:31;:::i;:::-;12058:5;;-1:-1:-1;12115:2:72;12100:18;;12087:32;;12128:33;12087:32;12128:33;:::i;:::-;12180:7;;-1:-1:-1;12240:2:72;12225:18;;12212:32;;12256:16;;;12253:36;;;12285:1;12282;12275:12;12253:36;;12324:61;12377:7;12366:8;12355:9;12351:24;12324:61;:::i;:::-;11448:997;;;;-1:-1:-1;11448:997:72;;-1:-1:-1;11448:997:72;;12404:8;;11448:997;-1:-1:-1;;;11448:997:72:o;13171:315::-;-1:-1:-1;;;;;13346:32:72;;13328:51;;13415:2;13410;13395:18;;13388:30;;;-1:-1:-1;;13435:45:72;;13461:18;;13453:6;13435:45;:::i;13491:289::-;13666:6;13655:9;13648:25;13709:2;13704;13693:9;13689:18;13682:30;13629:4;13729:45;13770:2;13759:9;13755:18;13747:6;13729:45;:::i;13785:249::-;13854:6;13907:2;13895:9;13886:7;13882:23;13878:32;13875:52;;;13923:1;13920;13913:12;13875:52;13955:9;13949:16;13974:30;13998:5;13974:30;:::i;14039:127::-;14100:10;14095:3;14091:20;14088:1;14081:31;14131:4;14128:1;14121:15;14155:4;14152:1;14145:15;14171:150;14246:20;;14295:1;14285:12;;14275:40;;14311:1;14308;14301:12;14275:40;14171:150;;;:::o;14326:666::-;14426:6;14479:2;14467:9;14458:7;14454:23;14450:32;14447:52;;;14495:1;14492;14485:12;14447:52;14528:2;14522:9;14570:2;14562:6;14558:15;14639:6;14627:10;14624:22;-1:-1:-1;;;;;14591:10:72;14588:34;14585:62;14582:88;;;14650:18;;:::i;:::-;14686:2;14679:22;14725:36;14751:9;14725:36;:::i;:::-;14717:6;14710:52;14812:2;14801:9;14797:18;14784:32;14825:31;14850:5;14825:31;:::i;:::-;14884:2;14872:15;;14865:30;14956:2;14941:18;;;14928:32;14911:15;;;14904:57;;;;-1:-1:-1;14876:6:72;14326:666;-1:-1:-1;14326:666:72:o;14997:127::-;15058:10;15053:3;15049:20;15046:1;15039:31;15089:4;15086:1;15079:15;15113:4;15110:1;15103:15;15129:408;15331:2;15313:21;;;15370:2;15350:18;;;15343:30;15409:34;15404:2;15389:18;;15382:62;-1:-1:-1;;;15475:2:72;15460:18;;15453:42;15527:3;15512:19;;15129:408::o;15542:::-;15744:2;15726:21;;;15783:2;15763:18;;;15756:30;15822:34;15817:2;15802:18;;15795:62;-1:-1:-1;;;15888:2:72;15873:18;;15866:42;15940:3;15925:19;;15542:408::o;16380:380::-;16459:1;16455:12;;;;16502;;;16523:61;;16577:4;16569:6;16565:17;16555:27;;16523:61;16630:2;16622:6;16619:14;16599:18;16596:38;16593:161;;16676:10;16671:3;16667:20;16664:1;16657:31;16711:4;16708:1;16701:15;16739:4;16736:1;16729:15;16593:161;;16380:380;;;:::o;17279:267::-;17368:6;17363:3;17356:19;17420:6;17413:5;17406:4;17401:3;17397:14;17384:43;-1:-1:-1;17472:1:72;17447:16;;;17465:4;17443:27;;;17436:38;;;;17528:2;17507:15;;;-1:-1:-1;;17503:29:72;17494:39;;;17490:50;;17279:267::o;17551:318::-;17738:6;17727:9;17720:25;17781:2;17776;17765:9;17761:18;17754:30;17701:4;17801:62;17859:2;17848:9;17844:18;17836:6;17828;17801:62;:::i;18258:324::-;18351:4;18409:11;18396:25;18503:2;18499:7;18488:8;18472:14;18468:29;18464:43;18444:18;18440:68;18430:96;;18522:1;18519;18512:12;18430:96;18543:33;;;;;18258:324;-1:-1:-1;;18258:324:72:o;18587:521::-;18664:4;18670:6;18730:11;18717:25;18824:2;18820:7;18809:8;18793:14;18789:29;18785:43;18765:18;18761:68;18751:96;;18843:1;18840;18833:12;18751:96;18870:33;;18922:20;;;-1:-1:-1;;;;;;18954:30:72;;18951:50;;;18997:1;18994;18987:12;18951:50;19030:4;19018:17;;-1:-1:-1;19061:14:72;19057:27;;;19047:38;;19044:58;;;19098:1;19095;19088:12;19113:271;19296:6;19288;19283:3;19270:33;19252:3;19322:16;;19347:13;;;19322:16;19113:271;-1:-1:-1;19113:271:72:o;19571:217::-;19611:1;19637;19627:132;;19681:10;19676:3;19672:20;19669:1;19662:31;19716:4;19713:1;19706:15;19744:4;19741:1;19734:15;19627:132;-1:-1:-1;19773:9:72;;19571:217::o;19793:2238::-;20177:4;20225:3;20214:9;20210:19;20256:6;20245:9;20238:25;20282:2;20320:3;20315:2;20304:9;20300:18;20293:31;20344:6;20374;20366;20359:22;20412:3;20401:9;20397:19;20390:26;;20475:3;20465:6;20462:1;20458:14;20447:9;20443:30;20439:40;20425:54;;20502:6;20526:1;20536:1280;20550:6;20547:1;20544:13;20536:1280;;;20615:22;;;-1:-1:-1;;20611:37:72;20599:50;;20688:20;;20763:14;20759:27;;;-1:-1:-1;;20755:41:72;20731:66;;20721:94;;20811:1;20808;20801:12;20721:94;20841:31;;20895:4;20927:19;;20959:33;20927:19;20959:33;:::i;:::-;-1:-1:-1;;;;;21020:33:72;21005:49;;21104:14;;;21091:28;21074:15;;;21067:53;21143:4;21201:14;;;21188:28;21273:14;21269:26;;;-1:-1:-1;;21265:40:72;21239:67;;21229:95;;21320:1;21317;21310:12;21229:95;21352:32;;;21460:16;;;;-1:-1:-1;21411:21:72;-1:-1:-1;;;;;21492:30:72;;21489:50;;;21535:1;21532;21525:12;21489:50;21588:6;21572:14;21568:27;21559:7;21555:41;21552:61;;;21609:1;21606;21599:12;21552:61;21650:2;21645;21637:6;21633:15;21626:27;21676:60;21732:2;21724:6;21720:15;21712:6;21703:7;21676:60;:::i;:::-;21666:70;-1:-1:-1;;;21794:12:72;;;;-1:-1:-1;;21759:15:72;;;;20572:1;20565:9;20536:1280;;;20540:3;;;;21854:6;21847:4;21836:9;21832:20;21825:36;21899:6;21892:4;21881:9;21877:20;21870:36;21955:9;21947:6;21943:22;21937:3;21926:9;21922:19;21915:51;21983:42;22018:6;22010;21983:42;:::i;:::-;21975:50;19793:2238;-1:-1:-1;;;;;;;;;19793:2238:72:o;22036:947::-;22135:6;22188:3;22176:9;22167:7;22163:23;22159:33;22156:53;;;22205:1;22202;22195:12;22156:53;22238:2;22232:9;22280:3;22272:6;22268:16;22350:6;22338:10;22335:22;-1:-1:-1;;;;;22302:10:72;22299:34;22296:62;22293:88;;;22361:18;;:::i;:::-;22397:2;22390:22;22436:36;22462:9;22436:36;:::i;:::-;22428:6;22421:52;22523:2;22512:9;22508:18;22495:32;22536:31;22561:5;22536:31;:::i;:::-;22595:2;22583:15;;22576:30;22658:2;22643:18;;22630:32;22671:33;22630:32;22671:33;:::i;:::-;22732:2;22720:15;;22713:32;22797:2;22782:18;;22769:32;22810:33;22769:32;22810:33;:::i;:::-;22871:2;22859:15;;22852:32;22946:3;22931:19;;;22918:33;22900:16;;;22893:59;;;;-1:-1:-1;22863:6:72;22036:947;-1:-1:-1;22036:947:72:o;24108:545::-;24210:2;24205:3;24202:11;24199:448;;;24246:1;24271:5;24267:2;24260:17;24316:4;24312:2;24302:19;24386:2;24374:10;24370:19;24367:1;24363:27;24357:4;24353:38;24422:4;24410:10;24407:20;24404:47;;;-1:-1:-1;24445:4:72;24404:47;24500:2;24495:3;24491:12;24488:1;24484:20;24478:4;24474:31;24464:41;;24555:82;24573:2;24566:5;24563:13;24555:82;;;24618:17;;;24599:1;24588:13;24555:82;;;24559:3;;;24108:545;;;:::o;24829:1206::-;-1:-1:-1;;;;;24948:3:72;24945:27;24942:53;;;24975:18;;:::i;:::-;25004:94;25094:3;25054:38;25086:4;25080:11;25054:38;:::i;:::-;25048:4;25004:94;:::i;:::-;25124:1;25149:2;25144:3;25141:11;25166:1;25161:616;;;;25821:1;25838:3;25835:93;;;-1:-1:-1;25894:19:72;;;25881:33;25835:93;-1:-1:-1;;24786:1:72;24782:11;;;24778:24;24774:29;24764:40;24810:1;24806:11;;;24761:57;25941:78;;25134:895;;25161:616;24055:1;24048:14;;;24092:4;24079:18;;-1:-1:-1;;25197:17:72;;;25298:9;25320:229;25334:7;25331:1;25328:14;25320:229;;;25423:19;;;25410:33;25395:49;;25530:4;25515:20;;;;25483:1;25471:14;;;;25350:12;25320:229;;;25324:3;25577;25568:7;25565:16;25562:159;;;25701:1;25697:6;25691:3;25685;25682:1;25678:11;25674:21;25670:34;25666:39;25653:9;25648:3;25644:19;25631:33;25627:79;25619:6;25612:95;25562:159;;;25764:1;25758:3;25755:1;25751:11;25747:19;25741:4;25734:33;25134:895;;24829:1206;;;:::o;26040:247::-;26199:2;26188:9;26181:21;26162:4;26219:62;26277:2;26266:9;26262:18;26254:6;26246;26219:62;:::i;26292:489::-;-1:-1:-1;;;;;26561:15:72;;;26543:34;;26613:15;;26608:2;26593:18;;26586:43;26660:2;26645:18;;26638:34;;;26708:3;26703:2;26688:18;;26681:31;;;26486:4;;26729:46;;26755:19;;26747:6;26729:46;:::i;26786:277::-;26853:6;26906:2;26894:9;26885:7;26881:23;26877:32;26874:52;;;26922:1;26919;26912:12;26874:52;26954:9;26948:16;27007:5;27000:13;26993:21;26986:5;26983:32;26973:60;;27029:1;27026;27019:12;27068:184;27138:6;27191:2;27179:9;27170:7;27166:23;27162:32;27159:52;;;27207:1;27204;27197:12;27159:52;-1:-1:-1;27230:16:72;;27068:184;-1:-1:-1;27068:184:72:o;31734:287::-;31863:3;31901:6;31895:13;31917:66;31976:6;31971:3;31964:4;31956:6;31952:17;31917:66;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "43456": [
        {
          "start": 2500,
          "length": 32
        },
        {
          "start": 2564,
          "length": 32
        },
        {
          "start": 2852,
          "length": 32
        },
        {
          "start": 2916,
          "length": 32
        },
        {
          "start": 3063,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "EXECUTE_PERMISSION_ID()": "0729d054",
    "REGISTER_STANDARD_CALLBACK_PERMISSION_ID()": "26875b1f",
    "ROOT_PERMISSION_ID()": "09e56b14",
    "SET_METADATA_PERMISSION_ID()": "e306bee7",
    "SET_SIGNATURE_VALIDATOR_PERMISSION_ID()": "e2e35563",
    "SET_TRUSTED_FORWARDER_PERMISSION_ID()": "829331a1",
    "UPGRADE_DAO_PERMISSION_ID()": "24b4d73f",
    "applyMultiTargetPermissions((uint8,address,address,address,bytes32)[])": "e978afe5",
    "applySingleTargetPermissions(address,(uint8,address,bytes32)[])": "22844d04",
    "daoURI()": "7034731b",
    "deposit(address,uint256,string)": "bfe07da6",
    "execute(bytes32,(address,uint256,bytes)[],uint256)": "c71bf324",
    "getTrustedForwarder()": "ce1b815f",
    "grant(address,address,bytes32)": "d68bad2c",
    "grantWithCondition(address,address,bytes32,address)": "c9dbc2a4",
    "hasPermission(address,address,bytes32,bytes)": "fdef9106",
    "initialize(bytes,address,address,string)": "eafb8b06",
    "isGranted(address,address,bytes32,bytes)": "2675fdd0",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "proxiableUUID()": "52d1902d",
    "registerStandardCallback(bytes4,bytes4,bytes4)": "c4a50145",
    "revoke(address,address,bytes32)": "d96054c4",
    "setDaoURI(string)": "1080f99b",
    "setMetadata(bytes)": "ee57e36f",
    "setSignatureValidator(address)": "3e2ab0d9",
    "setTrustedForwarder(address)": "da742228",
    "signatureValidator()": "388da934",
    "supportsInterface(bytes4)": "01ffc9a7",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ActionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AnyAddressDisallowedForWhoAndWhere\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ConditionNotPresentForAnyAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientGas\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"NativeTokenDepositAmountMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"currentCondition\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newCondition\",\"type\":\"address\"}],\"name\":\"PermissionAlreadyGrantedForDifferentCondition\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermissionsForAnyAddressDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyActions\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"callbackSelector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"magicNumber\",\"type\":\"bytes4\"}],\"name\":\"UnkownCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"CallbackReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_reference\",\"type\":\"string\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"callId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct IDAO.Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowFailureMap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"failureMap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"execResults\",\"type\":\"bytes[]\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"here\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPermissionCondition\",\"name\":\"condition\",\"type\":\"address\"}],\"name\":\"Granted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeTokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"daoURI\",\"type\":\"string\"}],\"name\":\"NewURI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"here\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signatureValidator\",\"type\":\"address\"}],\"name\":\"SignatureValidatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"callbackSelector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"magicNumber\",\"type\":\"bytes4\"}],\"name\":\"StandardCallbackRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"TrustedForwarderSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"EXECUTE_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGISTER_STANDARD_CALLBACK_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SET_METADATA_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SET_SIGNATURE_VALIDATOR_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SET_TRUSTED_FORWARDER_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_DAO_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum PermissionLib.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"condition\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermissionLib.MultiTargetPermission[]\",\"name\":\"_items\",\"type\":\"tuple[]\"}],\"name\":\"applyMultiTargetPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_where\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum PermissionLib.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermissionLib.SingleTargetPermission[]\",\"name\":\"items\",\"type\":\"tuple[]\"}],\"name\":\"applySingleTargetPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reference\",\"type\":\"string\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_callId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IDAO.Action[]\",\"name\":\"_actions\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_allowFailureMap\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"execResults\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"failureMap\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_permissionId\",\"type\":\"bytes32\"}],\"name\":\"grant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_permissionId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IPermissionCondition\",\"name\":\"_condition\",\"type\":\"address\"}],\"name\":\"grantWithCondition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_permissionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"daoURI_\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_permissionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"isGranted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"_callbackSelector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"_magicNumber\",\"type\":\"bytes4\"}],\"name\":\"registerStandardCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_permissionId\",\"type\":\"bytes32\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newDaoURI\",\"type\":\"string\"}],\"name\":\"setDaoURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"setMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signatureValidator\",\"type\":\"address\"}],\"name\":\"setSignatureValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTrustedForwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signatureValidator\",\"outputs\":[{\"internalType\":\"contract IERC1271\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Aragon Association - 2021-2023\",\"details\":\"Public API of the Aragon DAO framework.\",\"errors\":{\"ActionFailed(uint256)\":[{\"params\":{\"index\":\"The index of the action in the action array that failed.\"}}],\"NativeTokenDepositAmountMismatch(uint256,uint256)\":[{\"params\":{\"actual\":\"The actual native token amount deposited.\",\"expected\":\"The expected native token amount.\"}}],\"PermissionAlreadyGrantedForDifferentCondition(address,address,bytes32,address,address)\":[{\"details\":\"This makes sure that condition on the same permission can not be overwriten by a different condition.\",\"params\":{\"currentCondition\":\"The current condition set for permissionId.\",\"newCondition\":\"The new condition it tries to set for permissionId.\",\"permissionId\":\"The permission identifier.\",\"where\":\"The address of the target contract to grant `_who` permission to.\",\"who\":\"The address (EOA or contract) to which the permission has already been granted.\"}}],\"Unauthorized(address,address,bytes32)\":[{\"params\":{\"permissionId\":\"The permission identifier.\",\"where\":\"The context in which the authorization reverted.\",\"who\":\"The address (EOA or contract) missing the permission.\"}}],\"UnkownCallback(bytes4,bytes4)\":[{\"params\":{\"callbackSelector\":\"The selector of the callback function.\",\"magicNumber\":\"The magic number to be registered for the callback function selector.\"}}]},\"events\":{\"NewURI(string)\":{\"params\":{\"daoURI\":\"The new uri.\"}}},\"kind\":\"dev\",\"methods\":{\"applyMultiTargetPermissions((uint8,address,address,address,bytes32)[])\":{\"params\":{\"_items\":\"The array of multi-targeted permission operations to apply.\"}},\"applySingleTargetPermissions(address,(uint8,address,bytes32)[])\":{\"params\":{\"_where\":\"The address of the single target contract.\",\"items\":\"The array of single-targeted permission operations to apply.\"}},\"deposit(address,uint256,string)\":{\"params\":{\"_amount\":\"The amount of tokens to deposit.\",\"_reference\":\"The reference describing the deposit reason.\",\"_token\":\"The address of the token or address(0) in case of the native token.\"}},\"execute(bytes32,(address,uint256,bytes)[],uint256)\":{\"params\":{\"_actions\":\"The array of actions.\",\"_allowFailureMap\":\"A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.\",\"_callId\":\"The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce.\"},\"returns\":{\"execResults\":\"The array of results obtained from the executed actions in `bytes`.\",\"failureMap\":\"The resulting failure map containing the actions have actually failed.\"}},\"getTrustedForwarder()\":{\"returns\":{\"_0\":\"The trusted forwarder address.\"}},\"grant(address,address,bytes32)\":{\"details\":\"Requires the `ROOT_PERMISSION_ID` permission.Note, that granting permissions with `_who` or `_where` equal to `ANY_ADDR` does not replace other permissions with specific `_who` and `_where` addresses that exist in parallel.\",\"params\":{\"_permissionId\":\"The permission identifier.\",\"_where\":\"The address of the target contract for which `_who` recieves permission.\",\"_who\":\"The address (EOA or contract) receiving the permission.\"}},\"grantWithCondition(address,address,bytes32,address)\":{\"details\":\"Requires the `ROOT_PERMISSION_ID` permissionNote, that granting permissions with `_who` or `_where` equal to `ANY_ADDR` does not replace other permissions with specific `_who` and `_where` addresses that exist in parallel.\",\"params\":{\"_condition\":\"The `PermissionCondition` that will be asked for authorization on calls connected to the specified permission identifier.\",\"_permissionId\":\"The permission identifier.\",\"_where\":\"The address of the target contract for which `_who` recieves permission.\",\"_who\":\"The address (EOA or contract) receiving the permission.\"}},\"hasPermission(address,address,bytes32,bytes)\":{\"params\":{\"_data\":\"The optional data passed to the `PermissionCondition` registered.\",\"_permissionId\":\"The permission identifier.\",\"_where\":\"The address of the contract.\",\"_who\":\"The address of a EOA or contract to give the permissions.\"},\"returns\":{\"_0\":\"Returns true if the address has permission, false if not.\"}},\"initialize(bytes,address,address,string)\":{\"details\":\"This method is required to support [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822).\",\"params\":{\"_initialOwner\":\"The initial owner of the DAO having the `ROOT_PERMISSION_ID` permission.\",\"_metadata\":\"IPFS hash that points to all the metadata (logo, description, tags, etc.) of a DAO.\",\"_trustedForwarder\":\"The trusted forwarder responsible for verifying meta transactions.\"}},\"isGranted(address,address,bytes32,bytes)\":{\"params\":{\"_data\":\"The optional data passed to the `PermissionCondition` registered.\",\"_permissionId\":\"The permission identifier.\",\"_where\":\"The address of the target contract for which `_who` recieves permission.\",\"_who\":\"The address (EOA or contract) for which the permission is checked.\"},\"returns\":{\"_0\":\"Returns true if `_who` has the permissions on the target contract via the specified permission identifier.\"}},\"isValidSignature(bytes32,bytes)\":{\"params\":{\"_hash\":\"The hash of the data to be signed.\",\"_signature\":\"The signature byte array associated with `_hash`.\"},\"returns\":{\"_0\":\"Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"registerStandardCallback(bytes4,bytes4,bytes4)\":{\"params\":{\"_callbackSelector\":\"The selector of the callback function.\",\"_interfaceId\":\"The ID of the interface.\",\"_magicNumber\":\"The magic number to be registered for the function signature.\"}},\"revoke(address,address,bytes32)\":{\"details\":\"Requires the `ROOT_PERMISSION_ID` permission.Note, that revoking permissions with `_who` or `_where` equal to `ANY_ADDR` does not revoke other permissions with specific `_who` and `_where` addresses that exist in parallel.\",\"params\":{\"_permissionId\":\"The permission identifier.\",\"_where\":\"The address of the target contract for which `_who` loses permission.\",\"_who\":\"The address (EOA or contract) losing the permission.\"}},\"setDaoURI(string)\":{\"params\":{\"newDaoURI\":\"The new DAO uri to be set.\"}},\"setMetadata(bytes)\":{\"params\":{\"_metadata\":\"The IPFS hash of the new metadata object.\"}},\"setSignatureValidator(address)\":{\"params\":{\"_signatureValidator\":\"The address of the signature validator.\"}},\"setTrustedForwarder(address)\":{\"params\":{\"_trustedForwarder\":\"The trusted forwarder address.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"DAO\",\"version\":1},\"userdoc\":{\"errors\":{\"ActionFailed(uint256)\":[{\"notice\":\"Thrown if action execution has failed.\"}],\"AnyAddressDisallowedForWhoAndWhere()\":[{\"notice\":\"Thrown for permission grants where `who` and `where` are both `ANY_ADDR`.\"}],\"ConditionNotPresentForAnyAddress()\":[{\"notice\":\"Thrown for permission grants where `who` or `where` is `ANY_ADDR`, but no condition is present.\"}],\"InsufficientGas()\":[{\"notice\":\"Thrown if an action has insufficent gas left.\"}],\"NativeTokenDepositAmountMismatch(uint256,uint256)\":[{\"notice\":\"Thrown if there is a mismatch between the expected and actually deposited amount of native tokens.\"}],\"PermissionAlreadyGrantedForDifferentCondition(address,address,bytes32,address,address)\":[{\"notice\":\"Thrown if a permission has been already granted with a different condition.\"}],\"PermissionsForAnyAddressDisallowed()\":[{\"notice\":\"Thrown for `ROOT_PERMISSION_ID` or `EXECUTE_PERMISSION_ID` permission grants where `who` or `where` is `ANY_ADDR`.\"}],\"TooManyActions()\":[{\"notice\":\"Thrown if the action array length is larger than `MAX_ACTIONS`.\"}],\"Unauthorized(address,address,bytes32)\":[{\"notice\":\"Thrown if a call is unauthorized.\"}],\"UnkownCallback(bytes4,bytes4)\":[{\"notice\":\"Thrown if the callback function is not registered.\"}],\"ZeroAmount()\":[{\"notice\":\"Thrown if the deposit amount is zero.\"}]},\"events\":{\"CallbackReceived(address,bytes4,bytes)\":{\"notice\":\"Emitted when `_handleCallback` is called.\"},\"Deposited(address,address,uint256,string)\":{\"notice\":\"Emitted when a token deposit has been made to the DAO.\"},\"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])\":{\"notice\":\"Emitted when a proposal is executed.\"},\"Granted(bytes32,address,address,address,address)\":{\"notice\":\"Emitted when a permission `permission` is granted in the context `here` to the address `_who` for the contract `_where`.\"},\"MetadataSet(bytes)\":{\"notice\":\"Emitted when the DAO metadata is updated.\"},\"NativeTokenDeposited(address,uint256)\":{\"notice\":\"Emitted when a native token deposit has been made to the DAO.\"},\"NewURI(string)\":{\"notice\":\"Emitted when a new DAO uri is set.\"},\"Revoked(bytes32,address,address,address)\":{\"notice\":\"Emitted when a permission `permission` is revoked in the context `here` from the address `_who` for the contract `_where`.\"},\"SignatureValidatorSet(address)\":{\"notice\":\"Emitted when the signature validator address is updated.\"},\"StandardCallbackRegistered(bytes4,bytes4,bytes4)\":{\"notice\":\"Emitted when a standard callback is registered.\"},\"TrustedForwarderSet(address)\":{\"notice\":\"Emitted when a new TrustedForwarder is set on the DAO.\"}},\"kind\":\"user\",\"methods\":{\"EXECUTE_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `execute` function.\"},\"REGISTER_STANDARD_CALLBACK_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `registerStandardCallback` function.\"},\"ROOT_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `grant`, `grantWithCondition`, `revoke`, and `bulk` function.\"},\"SET_METADATA_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `setMetadata` function.\"},\"SET_SIGNATURE_VALIDATOR_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `setSignatureValidator` function.\"},\"SET_TRUSTED_FORWARDER_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `setTrustedForwarder` function.\"},\"UPGRADE_DAO_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `_authorizeUpgrade` function.\"},\"applyMultiTargetPermissions((uint8,address,address,address,bytes32)[])\":{\"notice\":\"Applies an array of permission operations on multiple target contracts `items[i].where`.\"},\"applySingleTargetPermissions(address,(uint8,address,bytes32)[])\":{\"notice\":\"Applies an array of permission operations on a single target contracts `_where`.\"},\"constructor\":{\"notice\":\"Disables the initializers on the implementation contract to prevent it from being left uninitialized.\"},\"daoURI()\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) pointing to a JSON object following the \\\"EIP-4824 DAO JSON-LD Schema\\\". This JSON file splits into four URIs: membersURI, proposalsURI, activityLogURI, and governanceURI. The membersURI should point to a JSON file that conforms to the \\\"EIP-4824 Members JSON-LD Schema\\\". The proposalsURI should point to a JSON file that conforms to the \\\"EIP-4824 Proposals JSON-LD Schema\\\". The activityLogURI should point to a JSON file that conforms to the \\\"EIP-4824 Activity Log JSON-LD Schema\\\". The governanceURI should point to a flatfile, normatively a .md file. Each of the JSON files named above can be statically-hosted or dynamically-generated.\"},\"deposit(address,uint256,string)\":{\"notice\":\"Deposits (native) tokens to the DAO contract with a reference string.\"},\"execute(bytes32,(address,uint256,bytes)[],uint256)\":{\"notice\":\"Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire excution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted.\"},\"getTrustedForwarder()\":{\"notice\":\"Getter for the trusted forwarder verifying the meta transaction.\"},\"grant(address,address,bytes32)\":{\"notice\":\"Grants permission to an address to call methods in a contract guarded by an auth modifier with the specified permission identifier.\"},\"grantWithCondition(address,address,bytes32,address)\":{\"notice\":\"Grants permission to an address to call methods in a target contract guarded by an auth modifier with the specified permission identifier if the referenced condition permits it.\"},\"hasPermission(address,address,bytes32,bytes)\":{\"notice\":\"Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process.\"},\"initialize(bytes,address,address,string)\":{\"notice\":\"Initializes the DAO by - registering the [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID - setting the trusted forwarder for meta transactions - giving the `ROOT_PERMISSION_ID` permission to the initial owner (that should be revoked and transferred to the DAO after setup).\"},\"isGranted(address,address,bytes32,bytes)\":{\"notice\":\"Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Checks whether a signature is valid for the provided hash by forwarding the call to the set [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271) signature validator contract.\"},\"registerStandardCallback(bytes4,bytes4,bytes4)\":{\"notice\":\"Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature.\"},\"revoke(address,address,bytes32)\":{\"notice\":\"Revokes permission from an address to call methods in a target contract guarded by an auth modifier with the specified permission identifier.\"},\"setDaoURI(string)\":{\"notice\":\"Updates the set DAO uri to a new value.\"},\"setMetadata(bytes)\":{\"notice\":\"Updates the DAO metadata (e.g., an IPFS hash).\"},\"setSignatureValidator(address)\":{\"notice\":\"Setter for the [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271) signature validator contract.\"},\"setTrustedForwarder(address)\":{\"notice\":\"Setter for the trusted forwarder verifying the meta transaction.\"},\"signatureValidator()\":{\"notice\":\"The [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271) signature validator contract.\"}},\"notice\":\"This contract is the entry point to the Aragon DAO framework and provides our users a simple and easy to use public interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/osx/packages/contracts/src/core/dao/DAO.sol\":\"DAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aragon/osx/=lib/osx/packages/contracts/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":osx/=lib/osx/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce\",\"dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x4dae161227d332808312ee2caf6384929321b83c16cc89b5642985fbec6b814c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42e226467674f856e38311d37c03598e19a0dbae3f4e970ec1eb853c7b9a87d8\",\"dweb:/ipfs/QmZ4FWqZYKMjgnxBEjVJ5Qszuh7mZoE6GYqkimEzj8qtVe\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165StorageUpgradeable.sol\":{\"keccak256\":\"0x8abf30b22b9f34c48c1101400a3172483cfa4fdc5e4de6d040309463e6faee4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b8ea6bb70c57d00605104de256ca41f224243d6d3e15857955540c1ae5603f4\",\"dweb:/ipfs/Qmd2ho9bNaXeJSXQeN5xABYdHz83noBnejHWesbwjA4Bfb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/osx/packages/contracts/src/core/dao/DAO.sol\":{\"keccak256\":\"0x5a589c3232272804981ca5fbef70f56bec2bc0a4c953bd85ba0a319d318e44cf\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e94efd151efdd0b52eb22252d3f685942fa70581066f32e28259cf0ade19ada\",\"dweb:/ipfs/QmYkEcTaMGfysws3U1cjDjpw2RzFg7Mr1mttq42xALioZo\"]},\"lib/osx/packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x5da4fcc2ac043eebb78c8c278da86f0fa7ad71ec9ce35a398bcc60c25ba6c7c3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://22dfd57672c31d73f65db47e55b19bfbfba15e4d8e570b5a4fb17288eba0f245\",\"dweb:/ipfs/QmPcBckvXy3TXZzSLF7cc1dnfF77V1Y5Zh1JweZ3uZUKND\"]},\"lib/osx/packages/contracts/src/core/dao/IEIP4824.sol\":{\"keccak256\":\"0x98086083fd347aa128d8fcf85fc259f1bc7be7a4ab028183fe6ae6f4b7ba4159\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://026c86b6e119f2df305db01cc3f40d54ac6f23b0a75a48273bc9131c9a6b1262\",\"dweb:/ipfs/Qmf8EYwPmPYgQxtChUYKd1NT957iraJUVBsrFFFFzM22FZ\"]},\"lib/osx/packages/contracts/src/core/permission/IPermissionCondition.sol\":{\"keccak256\":\"0x38e4f91e06bb2255dae9c2305c05e511fddf773cf231be42aedee5e883255bb9\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://efa89b045dc87ff9c14ccf32de35a9d64d97cf3fb05c997ca31d672f56e74354\",\"dweb:/ipfs/QmRpD4XneUUfZzRPW6sgT66614cCV9rLU5aDa3AiDiyEnd\"]},\"lib/osx/packages/contracts/src/core/permission/PermissionLib.sol\":{\"keccak256\":\"0xd1a00691deee7a95f44a7ea8bda5494a71ae2662d056315dbe260aadc4025cb6\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://fcb8b541e35540383fb0362aedc7ebe7297d64133f3b72a15100464ad29b8f41\",\"dweb:/ipfs/QmT4gj4Hf1apwCpfaHCxByRnNMYhc6gsGqNaETEHyAXfer\"]},\"lib/osx/packages/contracts/src/core/permission/PermissionManager.sol\":{\"keccak256\":\"0xc695525c206e8b54d0314a1a707f94655d4684ba0f0f4ae04ffdb9a9f641f643\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5117959bd4c832fcd2f6b7d3697a2802f2dce3caef2250fe7433d270f99f2c2d\",\"dweb:/ipfs/QmZsNkBSsGBY1Xrpck13QpLZ7JVYaa8Q6rSXnt1PPE11gL\"]},\"lib/osx/packages/contracts/src/core/utils/BitMap.sol\":{\"keccak256\":\"0x3c7ba0b2d818fe0cce90199f1e9b6ebb8c7f7cd836c68b882d9465fb57c06e2d\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://48aa9200b99fa4876fb12f9fdb8dc6a133be4e32b6c17cdc795c5951bb4b5fb0\",\"dweb:/ipfs/QmTa4Arnf5P8Hs2bXD5avwARV94e2ww2UAF9xoLW2Ue24N\"]},\"lib/osx/packages/contracts/src/core/utils/CallbackHandler.sol\":{\"keccak256\":\"0x1322af2c404353ca0e02384a3e28d272013da4e57d3ff34ce510d47207a33ab8\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://d4c2e966f8ad50f11bb045df443ba8eff46076d9c79b37c1490c4849da5a0c85\",\"dweb:/ipfs/QmVU1VMXBTNVz99nmAL11A5i9DEKcVcMrHGVw5BeZkSeTG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ActionFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AnyAddressDisallowedForWhoAndWhere"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ConditionNotPresentForAnyAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientGas"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NativeTokenDepositAmountMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "permissionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "currentCondition",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newCondition",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "PermissionAlreadyGrantedForDifferentCondition"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PermissionsForAnyAddressDisallowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TooManyActions"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "permissionId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "callbackSelector",
              "type": "bytes4"
            },
            {
              "internalType": "bytes4",
              "name": "magicNumber",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "UnkownCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAmount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "sig",
              "type": "bytes4",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CallbackReceived",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "_reference",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "actor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "callId",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "struct IDAO.Action[]",
              "name": "actions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "allowFailureMap",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "failureMap",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes[]",
              "name": "execResults",
              "type": "bytes[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Executed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "permissionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "here",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IPermissionCondition",
              "name": "condition",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Granted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "metadata",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NativeTokenDeposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "daoURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewURI",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "permissionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "here",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Revoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signatureValidator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SignatureValidatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "callbackSelector",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "magicNumber",
              "type": "bytes4",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StandardCallbackRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TrustedForwarderSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EXECUTE_PERMISSION_ID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REGISTER_STANDARD_CALLBACK_PERMISSION_ID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ROOT_PERMISSION_ID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SET_METADATA_PERMISSION_ID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SET_SIGNATURE_VALIDATOR_PERMISSION_ID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SET_TRUSTED_FORWARDER_PERMISSION_ID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_DAO_PERMISSION_ID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PermissionLib.MultiTargetPermission[]",
              "name": "_items",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum PermissionLib.Operation",
                  "name": "operation",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "where",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "condition",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "permissionId",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "applyMultiTargetPermissions"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_where",
              "type": "address"
            },
            {
              "internalType": "struct PermissionLib.SingleTargetPermission[]",
              "name": "items",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum PermissionLib.Operation",
                  "name": "operation",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "permissionId",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "applySingleTargetPermissions"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "daoURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_reference",
              "type": "string"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_callId",
              "type": "bytes32"
            },
            {
              "internalType": "struct IDAO.Action[]",
              "name": "_actions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "_allowFailureMap",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "execResults",
              "type": "bytes[]"
            },
            {
              "internalType": "uint256",
              "name": "failureMap",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTrustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_where",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_who",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_permissionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grant"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_where",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_who",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_permissionId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IPermissionCondition",
              "name": "_condition",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantWithCondition"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_where",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_who",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_permissionId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasPermission",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_metadata",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_initialOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_trustedForwarder",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "daoURI_",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_where",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_who",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_permissionId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isGranted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            },
            {
              "internalType": "bytes4",
              "name": "_callbackSelector",
              "type": "bytes4"
            },
            {
              "internalType": "bytes4",
              "name": "_magicNumber",
              "type": "bytes4"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerStandardCallback"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_where",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_who",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_permissionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newDaoURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDaoURI"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_metadata",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMetadata"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_signatureValidator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSignatureValidator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newTrustedForwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTrustedForwarder"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "signatureValidator",
          "outputs": [
            {
              "internalType": "contract IERC1271",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "applyMultiTargetPermissions((uint8,address,address,address,bytes32)[])": {
            "params": {
              "_items": "The array of multi-targeted permission operations to apply."
            }
          },
          "applySingleTargetPermissions(address,(uint8,address,bytes32)[])": {
            "params": {
              "_where": "The address of the single target contract.",
              "items": "The array of single-targeted permission operations to apply."
            }
          },
          "deposit(address,uint256,string)": {
            "params": {
              "_amount": "The amount of tokens to deposit.",
              "_reference": "The reference describing the deposit reason.",
              "_token": "The address of the token or address(0) in case of the native token."
            }
          },
          "execute(bytes32,(address,uint256,bytes)[],uint256)": {
            "params": {
              "_actions": "The array of actions.",
              "_allowFailureMap": "A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.",
              "_callId": "The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce."
            },
            "returns": {
              "execResults": "The array of results obtained from the executed actions in `bytes`.",
              "failureMap": "The resulting failure map containing the actions have actually failed."
            }
          },
          "getTrustedForwarder()": {
            "returns": {
              "_0": "The trusted forwarder address."
            }
          },
          "grant(address,address,bytes32)": {
            "details": "Requires the `ROOT_PERMISSION_ID` permission.Note, that granting permissions with `_who` or `_where` equal to `ANY_ADDR` does not replace other permissions with specific `_who` and `_where` addresses that exist in parallel.",
            "params": {
              "_permissionId": "The permission identifier.",
              "_where": "The address of the target contract for which `_who` recieves permission.",
              "_who": "The address (EOA or contract) receiving the permission."
            }
          },
          "grantWithCondition(address,address,bytes32,address)": {
            "details": "Requires the `ROOT_PERMISSION_ID` permissionNote, that granting permissions with `_who` or `_where` equal to `ANY_ADDR` does not replace other permissions with specific `_who` and `_where` addresses that exist in parallel.",
            "params": {
              "_condition": "The `PermissionCondition` that will be asked for authorization on calls connected to the specified permission identifier.",
              "_permissionId": "The permission identifier.",
              "_where": "The address of the target contract for which `_who` recieves permission.",
              "_who": "The address (EOA or contract) receiving the permission."
            }
          },
          "hasPermission(address,address,bytes32,bytes)": {
            "params": {
              "_data": "The optional data passed to the `PermissionCondition` registered.",
              "_permissionId": "The permission identifier.",
              "_where": "The address of the contract.",
              "_who": "The address of a EOA or contract to give the permissions."
            },
            "returns": {
              "_0": "Returns true if the address has permission, false if not."
            }
          },
          "initialize(bytes,address,address,string)": {
            "details": "This method is required to support [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822).",
            "params": {
              "_initialOwner": "The initial owner of the DAO having the `ROOT_PERMISSION_ID` permission.",
              "_metadata": "IPFS hash that points to all the metadata (logo, description, tags, etc.) of a DAO.",
              "_trustedForwarder": "The trusted forwarder responsible for verifying meta transactions."
            }
          },
          "isGranted(address,address,bytes32,bytes)": {
            "params": {
              "_data": "The optional data passed to the `PermissionCondition` registered.",
              "_permissionId": "The permission identifier.",
              "_where": "The address of the target contract for which `_who` recieves permission.",
              "_who": "The address (EOA or contract) for which the permission is checked."
            },
            "returns": {
              "_0": "Returns true if `_who` has the permissions on the target contract via the specified permission identifier."
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "params": {
              "_hash": "The hash of the data to be signed.",
              "_signature": "The signature byte array associated with `_hash`."
            },
            "returns": {
              "_0": "Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid."
            }
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "registerStandardCallback(bytes4,bytes4,bytes4)": {
            "params": {
              "_callbackSelector": "The selector of the callback function.",
              "_interfaceId": "The ID of the interface.",
              "_magicNumber": "The magic number to be registered for the function signature."
            }
          },
          "revoke(address,address,bytes32)": {
            "details": "Requires the `ROOT_PERMISSION_ID` permission.Note, that revoking permissions with `_who` or `_where` equal to `ANY_ADDR` does not revoke other permissions with specific `_who` and `_where` addresses that exist in parallel.",
            "params": {
              "_permissionId": "The permission identifier.",
              "_where": "The address of the target contract for which `_who` loses permission.",
              "_who": "The address (EOA or contract) losing the permission."
            }
          },
          "setDaoURI(string)": {
            "params": {
              "newDaoURI": "The new DAO uri to be set."
            }
          },
          "setMetadata(bytes)": {
            "params": {
              "_metadata": "The IPFS hash of the new metadata object."
            }
          },
          "setSignatureValidator(address)": {
            "params": {
              "_signatureValidator": "The address of the signature validator."
            }
          },
          "setTrustedForwarder(address)": {
            "params": {
              "_trustedForwarder": "The trusted forwarder address."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "EXECUTE_PERMISSION_ID()": {
            "notice": "The ID of the permission required to call the `execute` function."
          },
          "REGISTER_STANDARD_CALLBACK_PERMISSION_ID()": {
            "notice": "The ID of the permission required to call the `registerStandardCallback` function."
          },
          "ROOT_PERMISSION_ID()": {
            "notice": "The ID of the permission required to call the `grant`, `grantWithCondition`, `revoke`, and `bulk` function."
          },
          "SET_METADATA_PERMISSION_ID()": {
            "notice": "The ID of the permission required to call the `setMetadata` function."
          },
          "SET_SIGNATURE_VALIDATOR_PERMISSION_ID()": {
            "notice": "The ID of the permission required to call the `setSignatureValidator` function."
          },
          "SET_TRUSTED_FORWARDER_PERMISSION_ID()": {
            "notice": "The ID of the permission required to call the `setTrustedForwarder` function."
          },
          "UPGRADE_DAO_PERMISSION_ID()": {
            "notice": "The ID of the permission required to call the `_authorizeUpgrade` function."
          },
          "applyMultiTargetPermissions((uint8,address,address,address,bytes32)[])": {
            "notice": "Applies an array of permission operations on multiple target contracts `items[i].where`."
          },
          "applySingleTargetPermissions(address,(uint8,address,bytes32)[])": {
            "notice": "Applies an array of permission operations on a single target contracts `_where`."
          },
          "constructor": {
            "notice": "Disables the initializers on the implementation contract to prevent it from being left uninitialized."
          },
          "daoURI()": {
            "notice": "A distinct Uniform Resource Identifier (URI) pointing to a JSON object following the \"EIP-4824 DAO JSON-LD Schema\". This JSON file splits into four URIs: membersURI, proposalsURI, activityLogURI, and governanceURI. The membersURI should point to a JSON file that conforms to the \"EIP-4824 Members JSON-LD Schema\". The proposalsURI should point to a JSON file that conforms to the \"EIP-4824 Proposals JSON-LD Schema\". The activityLogURI should point to a JSON file that conforms to the \"EIP-4824 Activity Log JSON-LD Schema\". The governanceURI should point to a flatfile, normatively a .md file. Each of the JSON files named above can be statically-hosted or dynamically-generated."
          },
          "deposit(address,uint256,string)": {
            "notice": "Deposits (native) tokens to the DAO contract with a reference string."
          },
          "execute(bytes32,(address,uint256,bytes)[],uint256)": {
            "notice": "Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire excution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted."
          },
          "getTrustedForwarder()": {
            "notice": "Getter for the trusted forwarder verifying the meta transaction."
          },
          "grant(address,address,bytes32)": {
            "notice": "Grants permission to an address to call methods in a contract guarded by an auth modifier with the specified permission identifier."
          },
          "grantWithCondition(address,address,bytes32,address)": {
            "notice": "Grants permission to an address to call methods in a target contract guarded by an auth modifier with the specified permission identifier if the referenced condition permits it."
          },
          "hasPermission(address,address,bytes32,bytes)": {
            "notice": "Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process."
          },
          "initialize(bytes,address,address,string)": {
            "notice": "Initializes the DAO by - registering the [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID - setting the trusted forwarder for meta transactions - giving the `ROOT_PERMISSION_ID` permission to the initial owner (that should be revoked and transferred to the DAO after setup)."
          },
          "isGranted(address,address,bytes32,bytes)": {
            "notice": "Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process."
          },
          "isValidSignature(bytes32,bytes)": {
            "notice": "Checks whether a signature is valid for the provided hash by forwarding the call to the set [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271) signature validator contract."
          },
          "registerStandardCallback(bytes4,bytes4,bytes4)": {
            "notice": "Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature."
          },
          "revoke(address,address,bytes32)": {
            "notice": "Revokes permission from an address to call methods in a target contract guarded by an auth modifier with the specified permission identifier."
          },
          "setDaoURI(string)": {
            "notice": "Updates the set DAO uri to a new value."
          },
          "setMetadata(bytes)": {
            "notice": "Updates the DAO metadata (e.g., an IPFS hash)."
          },
          "setSignatureValidator(address)": {
            "notice": "Setter for the [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271) signature validator contract."
          },
          "setTrustedForwarder(address)": {
            "notice": "Setter for the trusted forwarder verifying the meta transaction."
          },
          "signatureValidator()": {
            "notice": "The [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271) signature validator contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aragon/osx/=lib/osx/packages/contracts/src/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":osx/=lib/osx/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/osx/packages/contracts/src/core/dao/DAO.sol": "DAO"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol": {
        "keccak256": "0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b",
        "urls": [
          "bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce",
          "dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol": {
        "keccak256": "0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8",
        "urls": [
          "bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83",
          "dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
        "keccak256": "0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3",
        "urls": [
          "bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622",
          "dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0x4dae161227d332808312ee2caf6384929321b83c16cc89b5642985fbec6b814c",
        "urls": [
          "bzz-raw://42e226467674f856e38311d37c03598e19a0dbae3f4e970ec1eb853c7b9a87d8",
          "dweb:/ipfs/QmZ4FWqZYKMjgnxBEjVJ5Qszuh7mZoE6GYqkimEzj8qtVe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165StorageUpgradeable.sol": {
        "keccak256": "0x8abf30b22b9f34c48c1101400a3172483cfa4fdc5e4de6d040309463e6faee4a",
        "urls": [
          "bzz-raw://5b8ea6bb70c57d00605104de256ca41f224243d6d3e15857955540c1ae5603f4",
          "dweb:/ipfs/Qmd2ho9bNaXeJSXQeN5xABYdHz83noBnejHWesbwjA4Bfb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/osx/packages/contracts/src/core/dao/DAO.sol": {
        "keccak256": "0x5a589c3232272804981ca5fbef70f56bec2bc0a4c953bd85ba0a319d318e44cf",
        "urls": [
          "bzz-raw://8e94efd151efdd0b52eb22252d3f685942fa70581066f32e28259cf0ade19ada",
          "dweb:/ipfs/QmYkEcTaMGfysws3U1cjDjpw2RzFg7Mr1mttq42xALioZo"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/dao/IDAO.sol": {
        "keccak256": "0x5da4fcc2ac043eebb78c8c278da86f0fa7ad71ec9ce35a398bcc60c25ba6c7c3",
        "urls": [
          "bzz-raw://22dfd57672c31d73f65db47e55b19bfbfba15e4d8e570b5a4fb17288eba0f245",
          "dweb:/ipfs/QmPcBckvXy3TXZzSLF7cc1dnfF77V1Y5Zh1JweZ3uZUKND"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/dao/IEIP4824.sol": {
        "keccak256": "0x98086083fd347aa128d8fcf85fc259f1bc7be7a4ab028183fe6ae6f4b7ba4159",
        "urls": [
          "bzz-raw://026c86b6e119f2df305db01cc3f40d54ac6f23b0a75a48273bc9131c9a6b1262",
          "dweb:/ipfs/Qmf8EYwPmPYgQxtChUYKd1NT957iraJUVBsrFFFFzM22FZ"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/permission/IPermissionCondition.sol": {
        "keccak256": "0x38e4f91e06bb2255dae9c2305c05e511fddf773cf231be42aedee5e883255bb9",
        "urls": [
          "bzz-raw://efa89b045dc87ff9c14ccf32de35a9d64d97cf3fb05c997ca31d672f56e74354",
          "dweb:/ipfs/QmRpD4XneUUfZzRPW6sgT66614cCV9rLU5aDa3AiDiyEnd"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/permission/PermissionLib.sol": {
        "keccak256": "0xd1a00691deee7a95f44a7ea8bda5494a71ae2662d056315dbe260aadc4025cb6",
        "urls": [
          "bzz-raw://fcb8b541e35540383fb0362aedc7ebe7297d64133f3b72a15100464ad29b8f41",
          "dweb:/ipfs/QmT4gj4Hf1apwCpfaHCxByRnNMYhc6gsGqNaETEHyAXfer"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/permission/PermissionManager.sol": {
        "keccak256": "0xc695525c206e8b54d0314a1a707f94655d4684ba0f0f4ae04ffdb9a9f641f643",
        "urls": [
          "bzz-raw://5117959bd4c832fcd2f6b7d3697a2802f2dce3caef2250fe7433d270f99f2c2d",
          "dweb:/ipfs/QmZsNkBSsGBY1Xrpck13QpLZ7JVYaa8Q6rSXnt1PPE11gL"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/utils/BitMap.sol": {
        "keccak256": "0x3c7ba0b2d818fe0cce90199f1e9b6ebb8c7f7cd836c68b882d9465fb57c06e2d",
        "urls": [
          "bzz-raw://48aa9200b99fa4876fb12f9fdb8dc6a133be4e32b6c17cdc795c5951bb4b5fb0",
          "dweb:/ipfs/QmTa4Arnf5P8Hs2bXD5avwARV94e2ww2UAF9xoLW2Ue24N"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/utils/CallbackHandler.sol": {
        "keccak256": "0x1322af2c404353ca0e02384a3e28d272013da4e57d3ff34ce510d47207a33ab8",
        "urls": [
          "bzz-raw://d4c2e966f8ad50f11bb045df443ba8eff46076d9c79b37c1490c4849da5a0c85",
          "dweb:/ipfs/QmVU1VMXBTNVz99nmAL11A5i9DEKcVcMrHGVw5BeZkSeTG"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/osx/packages/contracts/src/core/dao/DAO.sol",
    "id": 46791,
    "exportedSymbols": {
      "AddressUpgradeable": [
        44562
      ],
      "CallbackHandler": [
        48121
      ],
      "DAO": [
        46790
      ],
      "ERC165StorageUpgradeable": [
        44785
      ],
      "ERC165Upgradeable": [
        44829
      ],
      "ERC1967UpgradeUpgradeable": [
        43246
      ],
      "IBeaconUpgradeable": [
        43256
      ],
      "IDAO": [
        46946
      ],
      "IEIP4824": [
        46956
      ],
      "IERC1155ReceiverUpgradeable": [
        43602
      ],
      "IERC1155Upgradeable": [
        43724
      ],
      "IERC1271": [
        44855
      ],
      "IERC165Upgradeable": [
        44841
      ],
      "IERC1822ProxiableUpgradeable": [
        42922
      ],
      "IERC1967Upgradeable": [
        42912
      ],
      "IERC20PermitUpgradeable": [
        43838
      ],
      "IERC20Upgradeable": [
        43802
      ],
      "IERC721ReceiverUpgradeable": [
        44232
      ],
      "Initializable": [
        43425
      ],
      "PermissionManager": [
        47716
      ],
      "SafeERC20Upgradeable": [
        44214
      ],
      "StorageSlotUpgradeable": [
        44714
      ],
      "UUPSUpgradeable": [
        43561
      ],
      "flipBit": [
        48033
      ],
      "hasBit": [
        48015
      ]
    },
    "nodeType": "SourceUnit",
    "src": "47:15103:50",
    "nodes": [
      {
        "id": 46041,
        "nodeType": "PragmaDirective",
        "src": "47:23:50",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 46042,
        "nodeType": "ImportDirective",
        "src": "72:94:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165StorageUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165StorageUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 44786,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46043,
        "nodeType": "ImportDirective",
        "src": "167:75:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 43426,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46044,
        "nodeType": "ImportDirective",
        "src": "243:77:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 43562,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46045,
        "nodeType": "ImportDirective",
        "src": "321:88:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 44215,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46046,
        "nodeType": "ImportDirective",
        "src": "410:79:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 43803,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46047,
        "nodeType": "ImportDirective",
        "src": "490:89:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 44233,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46048,
        "nodeType": "ImportDirective",
        "src": "580:83:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 43725,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46049,
        "nodeType": "ImportDirective",
        "src": "664:91:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 43603,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46050,
        "nodeType": "ImportDirective",
        "src": "756:74:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 44563,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46051,
        "nodeType": "ImportDirective",
        "src": "831:57:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC1271.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 44856,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46053,
        "nodeType": "ImportDirective",
        "src": "890:70:50",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/core/permission/PermissionManager.sol",
        "file": "../permission/PermissionManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 47717,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46052,
              "name": "PermissionManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47716,
              "src": "898:17:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46055,
        "nodeType": "ImportDirective",
        "src": "961:61:50",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/core/utils/CallbackHandler.sol",
        "file": "../utils/CallbackHandler.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 48122,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46054,
              "name": "CallbackHandler",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48121,
              "src": "969:15:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46058,
        "nodeType": "ImportDirective",
        "src": "1023:52:50",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/core/utils/BitMap.sol",
        "file": "../utils/BitMap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 48034,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46056,
              "name": "hasBit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48015,
              "src": "1031:6:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 46057,
              "name": "flipBit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48033,
              "src": "1039:7:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46060,
        "nodeType": "ImportDirective",
        "src": "1076:40:50",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/core/dao/IEIP4824.sol",
        "file": "./IEIP4824.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 46957,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46059,
              "name": "IEIP4824",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46956,
              "src": "1084:8:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46062,
        "nodeType": "ImportDirective",
        "src": "1117:32:50",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/core/dao/IDAO.sol",
        "file": "./IDAO.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46791,
        "sourceUnit": 46947,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46061,
              "name": "IDAO",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46946,
              "src": "1125:4:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46790,
        "nodeType": "ContractDefinition",
        "src": "1397:13752:50",
        "nodes": [
          {
            "id": 46083,
            "nodeType": "UsingForDirective",
            "src": "1570:49:50",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 46080,
              "name": "SafeERC20Upgradeable",
              "nameLocations": [
                "1576:20:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44214,
              "src": "1576:20:50"
            },
            "typeName": {
              "id": 46082,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46081,
                "name": "IERC20Upgradeable",
                "nameLocations": [
                  "1601:17:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43802,
                "src": "1601:17:50"
              },
              "referencedDeclaration": 43802,
              "src": "1601:17:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$43802",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "id": 46086,
            "nodeType": "UsingForDirective",
            "src": "1624:37:50",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 46084,
              "name": "AddressUpgradeable",
              "nameLocations": [
                "1630:18:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44562,
              "src": "1630:18:50"
            },
            "typeName": {
              "id": 46085,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1653:7:50",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 46092,
            "nodeType": "VariableDeclaration",
            "src": "1749:79:50",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 46087,
              "nodeType": "StructuredDocumentation",
              "src": "1667:77:50",
              "text": "@notice The ID of the permission required to call the `execute` function."
            },
            "functionSelector": "0729d054",
            "mutability": "constant",
            "name": "EXECUTE_PERMISSION_ID",
            "nameLocation": "1773:21:50",
            "scope": 46790,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 46088,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1749:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455845435554455f5045524d495353494f4e",
                  "id": 46090,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1807:20:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_bf04b4486c9663d805744005c3da000eda93de6e3308a4a7a812eb565327b78d",
                    "typeString": "literal_string \"EXECUTE_PERMISSION\""
                  },
                  "value": "EXECUTE_PERMISSION"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_bf04b4486c9663d805744005c3da000eda93de6e3308a4a7a812eb565327b78d",
                    "typeString": "literal_string \"EXECUTE_PERMISSION\""
                  }
                ],
                "id": 46089,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1797:9:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 46091,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1797:31:50",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46098,
            "nodeType": "VariableDeclaration",
            "src": "1927:87:50",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 46093,
              "nodeType": "StructuredDocumentation",
              "src": "1835:87:50",
              "text": "@notice The ID of the permission required to call the `_authorizeUpgrade` function."
            },
            "functionSelector": "24b4d73f",
            "mutability": "constant",
            "name": "UPGRADE_DAO_PERMISSION_ID",
            "nameLocation": "1951:25:50",
            "scope": 46790,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 46094,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1927:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "555047524144455f44414f5f5045524d495353494f4e",
                  "id": 46096,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1989:24:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_1f53edd44352e5d15bad2b29233baa93bcd595e09457780bc7c5445bbbe751cc",
                    "typeString": "literal_string \"UPGRADE_DAO_PERMISSION\""
                  },
                  "value": "UPGRADE_DAO_PERMISSION"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_1f53edd44352e5d15bad2b29233baa93bcd595e09457780bc7c5445bbbe751cc",
                    "typeString": "literal_string \"UPGRADE_DAO_PERMISSION\""
                  }
                ],
                "id": 46095,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1979:9:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 46097,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1979:35:50",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46104,
            "nodeType": "VariableDeclaration",
            "src": "2107:89:50",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 46099,
              "nodeType": "StructuredDocumentation",
              "src": "2021:81:50",
              "text": "@notice The ID of the permission required to call the `setMetadata` function."
            },
            "functionSelector": "e306bee7",
            "mutability": "constant",
            "name": "SET_METADATA_PERMISSION_ID",
            "nameLocation": "2131:26:50",
            "scope": 46790,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 46100,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2107:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5345545f4d455441444154415f5045524d495353494f4e",
                  "id": 46102,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2170:25:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_4707e94b25cfce1a7c363508fbb838c35864388ad77284b248282b9746982b9b",
                    "typeString": "literal_string \"SET_METADATA_PERMISSION\""
                  },
                  "value": "SET_METADATA_PERMISSION"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_4707e94b25cfce1a7c363508fbb838c35864388ad77284b248282b9746982b9b",
                    "typeString": "literal_string \"SET_METADATA_PERMISSION\""
                  }
                ],
                "id": 46101,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2160:9:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 46103,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2160:36:50",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46110,
            "nodeType": "VariableDeclaration",
            "src": "2297:115:50",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 46105,
              "nodeType": "StructuredDocumentation",
              "src": "2203:89:50",
              "text": "@notice The ID of the permission required to call the `setTrustedForwarder` function."
            },
            "functionSelector": "829331a1",
            "mutability": "constant",
            "name": "SET_TRUSTED_FORWARDER_PERMISSION_ID",
            "nameLocation": "2321:35:50",
            "scope": 46790,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 46106,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2297:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5345545f545255535445445f464f525741524445525f5045524d495353494f4e",
                  "id": 46108,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2377:34:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_06d294bc8cbad2e393408b20dd019a772661f60b8d633e56761157cb1ec85f8c",
                    "typeString": "literal_string \"SET_TRUSTED_FORWARDER_PERMISSION\""
                  },
                  "value": "SET_TRUSTED_FORWARDER_PERMISSION"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_06d294bc8cbad2e393408b20dd019a772661f60b8d633e56761157cb1ec85f8c",
                    "typeString": "literal_string \"SET_TRUSTED_FORWARDER_PERMISSION\""
                  }
                ],
                "id": 46107,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2367:9:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 46109,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2367:45:50",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46116,
            "nodeType": "VariableDeclaration",
            "src": "2515:119:50",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 46111,
              "nodeType": "StructuredDocumentation",
              "src": "2419:91:50",
              "text": "@notice The ID of the permission required to call the `setSignatureValidator` function."
            },
            "functionSelector": "e2e35563",
            "mutability": "constant",
            "name": "SET_SIGNATURE_VALIDATOR_PERMISSION_ID",
            "nameLocation": "2539:37:50",
            "scope": 46790,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 46112,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2515:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5345545f5349474e41545552455f56414c494441544f525f5045524d495353494f4e",
                  "id": 46114,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2597:36:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_0dcbfb19b09fb8ff4e9af583d4b8e9c8127cc1b26529b4d96dd3b7e778088372",
                    "typeString": "literal_string \"SET_SIGNATURE_VALIDATOR_PERMISSION\""
                  },
                  "value": "SET_SIGNATURE_VALIDATOR_PERMISSION"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_0dcbfb19b09fb8ff4e9af583d4b8e9c8127cc1b26529b4d96dd3b7e778088372",
                    "typeString": "literal_string \"SET_SIGNATURE_VALIDATOR_PERMISSION\""
                  }
                ],
                "id": 46113,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2587:9:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 46115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2587:47:50",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46122,
            "nodeType": "VariableDeclaration",
            "src": "2740:125:50",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 46117,
              "nodeType": "StructuredDocumentation",
              "src": "2641:94:50",
              "text": "@notice The ID of the permission required to call the `registerStandardCallback` function."
            },
            "functionSelector": "26875b1f",
            "mutability": "constant",
            "name": "REGISTER_STANDARD_CALLBACK_PERMISSION_ID",
            "nameLocation": "2764:40:50",
            "scope": 46790,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 46118,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2740:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "52454749535445525f5354414e444152445f43414c4c4241434b5f5045524d495353494f4e",
                  "id": 46120,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2825:39:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_faf505be9907aa6951c2ebe5b0312f4980e14f21912ed355372103cc8bd683bc",
                    "typeString": "literal_string \"REGISTER_STANDARD_CALLBACK_PERMISSION\""
                  },
                  "value": "REGISTER_STANDARD_CALLBACK_PERMISSION"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_faf505be9907aa6951c2ebe5b0312f4980e14f21912ed355372103cc8bd683bc",
                    "typeString": "literal_string \"REGISTER_STANDARD_CALLBACK_PERMISSION\""
                  }
                ],
                "id": 46119,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2815:9:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 46121,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2815:50:50",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46126,
            "nodeType": "VariableDeclaration",
            "src": "2951:43:50",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 46123,
              "nodeType": "StructuredDocumentation",
              "src": "2872:74:50",
              "text": "@notice The internal constant storing the maximal action array length."
            },
            "mutability": "constant",
            "name": "MAX_ACTIONS",
            "nameLocation": "2977:11:50",
            "scope": 46790,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46124,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2951:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "323536",
              "id": 46125,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2991:3:50",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_256_by_1",
                "typeString": "int_const 256"
              },
              "value": "256"
            },
            "visibility": "internal"
          },
          {
            "id": 46130,
            "nodeType": "VariableDeclaration",
            "src": "3103:34:50",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46127,
              "nodeType": "StructuredDocumentation",
              "src": "3001:97:50",
              "text": "@notice The [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271) signature validator contract."
            },
            "functionSelector": "388da934",
            "mutability": "mutable",
            "name": "signatureValidator",
            "nameLocation": "3119:18:50",
            "scope": 46790,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1271_$44855",
              "typeString": "contract IERC1271"
            },
            "typeName": {
              "id": 46129,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46128,
                "name": "IERC1271",
                "nameLocations": [
                  "3103:8:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44855,
                "src": "3103:8:50"
              },
              "referencedDeclaration": 44855,
              "src": "3103:8:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1271_$44855",
                "typeString": "contract IERC1271"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46133,
            "nodeType": "VariableDeclaration",
            "src": "3226:32:50",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46131,
              "nodeType": "StructuredDocumentation",
              "src": "3144:77:50",
              "text": "@notice The address of the trusted forwarder verifying meta transactions."
            },
            "mutability": "mutable",
            "name": "trustedForwarder",
            "nameLocation": "3242:16:50",
            "scope": 46790,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 46132,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3226:7:50",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46136,
            "nodeType": "VariableDeclaration",
            "src": "3346:22:50",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46134,
              "nodeType": "StructuredDocumentation",
              "src": "3265:76:50",
              "text": "@notice The [EIP-4824](https://eips.ethereum.org/EIPS/eip-4824) DAO uri."
            },
            "mutability": "mutable",
            "name": "_daoURI",
            "nameLocation": "3361:7:50",
            "scope": 46790,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 46135,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3346:6:50",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46139,
            "nodeType": "ErrorDefinition",
            "src": "3455:23:50",
            "nodes": [],
            "documentation": {
              "id": 46137,
              "nodeType": "StructuredDocumentation",
              "src": "3375:75:50",
              "text": "@notice Thrown if the action array length is larger than `MAX_ACTIONS`."
            },
            "errorSelector": "11c763d6",
            "name": "TooManyActions",
            "nameLocation": "3461:14:50",
            "parameters": {
              "id": 46138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3475:2:50"
            }
          },
          {
            "id": 46144,
            "nodeType": "ErrorDefinition",
            "src": "3617:34:50",
            "nodes": [],
            "documentation": {
              "id": 46140,
              "nodeType": "StructuredDocumentation",
              "src": "3484:128:50",
              "text": "@notice Thrown if action execution has failed.\n @param index The index of the action in the action array that failed."
            },
            "errorSelector": "a6a7dbbd",
            "name": "ActionFailed",
            "nameLocation": "3623:12:50",
            "parameters": {
              "id": 46143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46142,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "3644:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46144,
                  "src": "3636:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3636:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3635:15:50"
            }
          },
          {
            "id": 46147,
            "nodeType": "ErrorDefinition",
            "src": "3719:24:50",
            "nodes": [],
            "documentation": {
              "id": 46145,
              "nodeType": "StructuredDocumentation",
              "src": "3657:57:50",
              "text": "@notice Thrown if an action has insufficent gas left."
            },
            "errorSelector": "1c26714c",
            "name": "InsufficientGas",
            "nameLocation": "3725:15:50",
            "parameters": {
              "id": 46146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3740:2:50"
            }
          },
          {
            "id": 46150,
            "nodeType": "ErrorDefinition",
            "src": "3803:19:50",
            "nodes": [],
            "documentation": {
              "id": 46148,
              "nodeType": "StructuredDocumentation",
              "src": "3749:49:50",
              "text": "@notice Thrown if the deposit amount is zero."
            },
            "errorSelector": "1f2a2005",
            "name": "ZeroAmount",
            "nameLocation": "3809:10:50",
            "parameters": {
              "id": 46149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3819:2:50"
            }
          },
          {
            "id": 46157,
            "nodeType": "ErrorDefinition",
            "src": "4065:73:50",
            "nodes": [],
            "documentation": {
              "id": 46151,
              "nodeType": "StructuredDocumentation",
              "src": "3828:232:50",
              "text": "@notice Thrown if there is a mismatch between the expected and actually deposited amount of native tokens.\n @param expected The expected native token amount.\n @param actual The actual native token amount deposited."
            },
            "errorSelector": "1abd5610",
            "name": "NativeTokenDepositAmountMismatch",
            "nameLocation": "4071:32:50",
            "parameters": {
              "id": 46156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46153,
                  "mutability": "mutable",
                  "name": "expected",
                  "nameLocation": "4112:8:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46157,
                  "src": "4104:16:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4104:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46155,
                  "mutability": "mutable",
                  "name": "actual",
                  "nameLocation": "4130:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46157,
                  "src": "4122:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4122:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4103:34:50"
            }
          },
          {
            "id": 46162,
            "nodeType": "EventDefinition",
            "src": "4230:28:50",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 46158,
              "nodeType": "StructuredDocumentation",
              "src": "4144:81:50",
              "text": "@notice Emitted when a new DAO uri is set.\n @param daoURI The new uri."
            },
            "eventSelector": "e9b617ecb5f63f6a9ccd8d4d5fa0d7b2ef9b17ce3f48e6b135808d6a40e67742",
            "name": "NewURI",
            "nameLocation": "4236:6:50",
            "parameters": {
              "id": 46161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "daoURI",
                  "nameLocation": "4250:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46162,
                  "src": "4243:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46159,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4243:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4242:15:50"
            }
          },
          {
            "id": 46170,
            "nodeType": "FunctionDefinition",
            "src": "4382:53:50",
            "nodes": [],
            "body": {
              "id": 46169,
              "nodeType": "Block",
              "src": "4396:39:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46166,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43406,
                      "src": "4406:20:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 46167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4406:22:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46168,
                  "nodeType": "ExpressionStatement",
                  "src": "4406:22:50"
                }
              ]
            },
            "documentation": {
              "id": 46163,
              "nodeType": "StructuredDocumentation",
              "src": "4264:113:50",
              "text": "@notice Disables the initializers on the implementation contract to prevent it from being left uninitialized."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4393:2:50"
            },
            "returnParameters": {
              "id": 46165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4396:0:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46225,
            "nodeType": "FunctionDefinition",
            "src": "5182:548:50",
            "nodes": [],
            "body": {
              "id": 46224,
              "nodeType": "Block",
              "src": "5362:368:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46186,
                              "name": "IDAO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46946,
                              "src": "5396:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDAO_$46946_$",
                                "typeString": "type(contract IDAO)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IDAO_$46946_$",
                                "typeString": "type(contract IDAO)"
                              }
                            ],
                            "id": 46185,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5391:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5391:10:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IDAO_$46946",
                            "typeString": "type(contract IDAO)"
                          }
                        },
                        "id": 46188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5402:11:50",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "5391:22:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 46184,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44779,
                      "src": "5372:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 46189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5372:42:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46190,
                  "nodeType": "ExpressionStatement",
                  "src": "5372:42:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46193,
                              "name": "IERC1271",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44855,
                              "src": "5448:8:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1271_$44855_$",
                                "typeString": "type(contract IERC1271)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC1271_$44855_$",
                                "typeString": "type(contract IERC1271)"
                              }
                            ],
                            "id": 46192,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5443:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5443:14:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1271_$44855",
                            "typeString": "type(contract IERC1271)"
                          }
                        },
                        "id": 46195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5458:11:50",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "5443:26:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 46191,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44779,
                      "src": "5424:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 46196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5424:46:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46197,
                  "nodeType": "ExpressionStatement",
                  "src": "5424:46:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46200,
                              "name": "IEIP4824",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46956,
                              "src": "5504:8:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IEIP4824_$46956_$",
                                "typeString": "type(contract IEIP4824)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IEIP4824_$46956_$",
                                "typeString": "type(contract IEIP4824)"
                              }
                            ],
                            "id": 46199,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5499:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5499:14:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IEIP4824_$46956",
                            "typeString": "type(contract IEIP4824)"
                          }
                        },
                        "id": 46202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5514:11:50",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "5499:26:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 46198,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44779,
                      "src": "5480:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 46203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5480:46:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46204,
                  "nodeType": "ExpressionStatement",
                  "src": "5480:46:50"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46205,
                      "name": "_registerTokenInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46716,
                      "src": "5536:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 46206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5536:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46207,
                  "nodeType": "ExpressionStatement",
                  "src": "5536:26:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46209,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46173,
                        "src": "5586:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46208,
                      "name": "_setMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46655,
                      "src": "5573:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (bytes calldata)"
                      }
                    },
                    "id": 46210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5573:23:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46211,
                  "nodeType": "ExpressionStatement",
                  "src": "5573:23:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46213,
                        "name": "_trustedForwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46177,
                        "src": "5627:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46212,
                      "name": "_setTrustedForwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46670,
                      "src": "5606:20:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5606:39:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46215,
                  "nodeType": "ExpressionStatement",
                  "src": "5606:39:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46217,
                        "name": "daoURI_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46179,
                        "src": "5666:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 46216,
                      "name": "_setDaoURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46784,
                      "src": "5655:10:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (string calldata)"
                      }
                    },
                    "id": 46218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5655:19:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46219,
                  "nodeType": "ExpressionStatement",
                  "src": "5655:19:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46221,
                        "name": "_initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46175,
                        "src": "5709:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46220,
                      "name": "__PermissionManager_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47133,
                      "src": "5684:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5684:39:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46223,
                  "nodeType": "ExpressionStatement",
                  "src": "5684:39:50"
                }
              ]
            },
            "documentation": {
              "id": 46171,
              "nodeType": "StructuredDocumentation",
              "src": "4441:736:50",
              "text": "@notice Initializes the DAO by\n - registering the [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID\n - setting the trusted forwarder for meta transactions\n - giving the `ROOT_PERMISSION_ID` permission to the initial owner (that should be revoked and transferred to the DAO after setup).\n @dev This method is required to support [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822).\n @param _metadata IPFS hash that points to all the metadata (logo, description, tags, etc.) of a DAO.\n @param _initialOwner The initial owner of the DAO having the `ROOT_PERMISSION_ID` permission.\n @param _trustedForwarder The trusted forwarder responsible for verifying meta transactions."
            },
            "functionSelector": "eafb8b06",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46181,
                  "name": "initializer",
                  "nameLocations": [
                    "5350:11:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43327,
                  "src": "5350:11:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "5350:11:50"
              }
            ],
            "name": "initialize",
            "nameLocation": "5191:10:50",
            "parameters": {
              "id": 46180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46173,
                  "mutability": "mutable",
                  "name": "_metadata",
                  "nameLocation": "5226:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46225,
                  "src": "5211:24:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46172,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5211:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46175,
                  "mutability": "mutable",
                  "name": "_initialOwner",
                  "nameLocation": "5253:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46225,
                  "src": "5245:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5245:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46177,
                  "mutability": "mutable",
                  "name": "_trustedForwarder",
                  "nameLocation": "5284:17:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46225,
                  "src": "5276:25:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5276:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46179,
                  "mutability": "mutable",
                  "name": "daoURI_",
                  "nameLocation": "5327:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46225,
                  "src": "5311:23:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46178,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5311:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5201:139:50"
            },
            "returnParameters": {
              "id": 46183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5362:0:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46259,
            "nodeType": "FunctionDefinition",
            "src": "5774:519:50",
            "nodes": [],
            "body": {
              "id": 46258,
              "nodeType": "Block",
              "src": "5891:402:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 46256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 46252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 46248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 46244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 46240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 46236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 46234,
                                "name": "_permissionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46228,
                                "src": "5920:13:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 46235,
                                "name": "EXECUTE_PERMISSION_ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46092,
                                "src": "5937:21:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "5920:38:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 46239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 46237,
                                "name": "_permissionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46228,
                                "src": "5974:13:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 46238,
                                "name": "UPGRADE_DAO_PERMISSION_ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46098,
                                "src": "5991:25:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "5974:42:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5920:96:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 46243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 46241,
                              "name": "_permissionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46228,
                              "src": "6032:13:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 46242,
                              "name": "SET_METADATA_PERMISSION_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46104,
                              "src": "6049:26:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "6032:43:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5920:155:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 46247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 46245,
                            "name": "_permissionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46228,
                            "src": "6091:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 46246,
                            "name": "SET_TRUSTED_FORWARDER_PERMISSION_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46110,
                            "src": "6108:35:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6091:52:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5920:223:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 46251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46249,
                          "name": "_permissionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46228,
                          "src": "6159:13:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 46250,
                          "name": "SET_SIGNATURE_VALIDATOR_PERMISSION_ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46116,
                          "src": "6176:37:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6159:54:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5920:293:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 46255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 46253,
                        "name": "_permissionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46228,
                        "src": "6229:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 46254,
                        "name": "REGISTER_STANDARD_CALLBACK_PERMISSION_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46122,
                        "src": "6246:40:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "6229:57:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5920:366:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 46233,
                  "id": 46257,
                  "nodeType": "Return",
                  "src": "5901:385:50"
                }
              ]
            },
            "baseFunctions": [
              47710
            ],
            "documentation": {
              "id": 46226,
              "nodeType": "StructuredDocumentation",
              "src": "5736:33:50",
              "text": "@inheritdoc PermissionManager"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPermissionRestrictedForAnyAddr",
            "nameLocation": "5783:32:50",
            "overrides": {
              "id": 46230,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5867:8:50"
            },
            "parameters": {
              "id": 46229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46228,
                  "mutability": "mutable",
                  "name": "_permissionId",
                  "nameLocation": "5833:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46259,
                  "src": "5825:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46227,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5825:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5815:37:50"
            },
            "returnParameters": {
              "id": 46233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46232,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46259,
                  "src": "5885:4:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46231,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5885:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5884:6:50"
            },
            "scope": 46790,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46270,
            "nodeType": "FunctionDefinition",
            "src": "6630:96:50",
            "nodes": [],
            "body": {
              "id": 46269,
              "nodeType": "Block",
              "src": "6724:2:50",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              43555
            ],
            "documentation": {
              "id": 46260,
              "nodeType": "StructuredDocumentation",
              "src": "6299:326:50",
              "text": "@notice Internal method authorizing the upgrade of the contract via the [upgradeabilty mechanism for UUPS proxies](https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable) (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\n @dev The caller must have the `UPGRADE_DAO_PERMISSION_ID` permission."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46266,
                    "name": "UPGRADE_DAO_PERMISSION_ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46098,
                    "src": "6697:25:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 46267,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46265,
                  "name": "auth",
                  "nameLocations": [
                    "6692:4:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47120,
                  "src": "6692:4:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "6692:31:50"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "6639:17:50",
            "overrides": {
              "id": 46264,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6683:8:50"
            },
            "parameters": {
              "id": 46263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46270,
                  "src": "6657:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6657:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6656:9:50"
            },
            "returnParameters": {
              "id": 46268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6724:0:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 46285,
            "nodeType": "FunctionDefinition",
            "src": "6757:192:50",
            "nodes": [],
            "body": {
              "id": 46284,
              "nodeType": "Block",
              "src": "6890:59:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46281,
                        "name": "_newTrustedForwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46273,
                        "src": "6921:20:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46280,
                      "name": "_setTrustedForwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46670,
                      "src": "6900:20:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6900:42:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46283,
                  "nodeType": "ExpressionStatement",
                  "src": "6900:42:50"
                }
              ]
            },
            "baseFunctions": [
              46903
            ],
            "documentation": {
              "id": 46271,
              "nodeType": "StructuredDocumentation",
              "src": "6732:20:50",
              "text": "@inheritdoc IDAO"
            },
            "functionSelector": "da742228",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46277,
                    "name": "SET_TRUSTED_FORWARDER_PERMISSION_ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46110,
                    "src": "6853:35:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 46278,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46276,
                  "name": "auth",
                  "nameLocations": [
                    "6848:4:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47120,
                  "src": "6848:4:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "6848:41:50"
              }
            ],
            "name": "setTrustedForwarder",
            "nameLocation": "6766:19:50",
            "overrides": {
              "id": 46275,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6839:8:50"
            },
            "parameters": {
              "id": 46274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46273,
                  "mutability": "mutable",
                  "name": "_newTrustedForwarder",
                  "nameLocation": "6803:20:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46285,
                  "src": "6795:28:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6795:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6785:44:50"
            },
            "returnParameters": {
              "id": 46279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6890:0:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46295,
            "nodeType": "FunctionDefinition",
            "src": "6980:120:50",
            "nodes": [],
            "body": {
              "id": 46294,
              "nodeType": "Block",
              "src": "7060:40:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46292,
                    "name": "trustedForwarder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46133,
                    "src": "7077:16:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 46291,
                  "id": 46293,
                  "nodeType": "Return",
                  "src": "7070:23:50"
                }
              ]
            },
            "baseFunctions": [
              46909
            ],
            "documentation": {
              "id": 46286,
              "nodeType": "StructuredDocumentation",
              "src": "6955:20:50",
              "text": "@inheritdoc IDAO"
            },
            "functionSelector": "ce1b815f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrustedForwarder",
            "nameLocation": "6989:19:50",
            "overrides": {
              "id": 46288,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7033:8:50"
            },
            "parameters": {
              "id": 46287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7008:2:50"
            },
            "returnParameters": {
              "id": 46291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46295,
                  "src": "7051:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7051:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7050:9:50"
            },
            "scope": 46790,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46318,
            "nodeType": "FunctionDefinition",
            "src": "7131:241:50",
            "nodes": [],
            "body": {
              "id": 46317,
              "nodeType": "Block",
              "src": "7303:69:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46311,
                        "name": "_where",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46298,
                        "src": "7330:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46312,
                        "name": "_who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46300,
                        "src": "7338:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46313,
                        "name": "_permissionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46302,
                        "src": "7344:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 46314,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46304,
                        "src": "7359:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46310,
                      "name": "isGranted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47390,
                      "src": "7320:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,address,bytes32,bytes memory) view returns (bool)"
                      }
                    },
                    "id": 46315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7320:45:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 46309,
                  "id": 46316,
                  "nodeType": "Return",
                  "src": "7313:52:50"
                }
              ]
            },
            "baseFunctions": [
              46814
            ],
            "documentation": {
              "id": 46296,
              "nodeType": "StructuredDocumentation",
              "src": "7106:20:50",
              "text": "@inheritdoc IDAO"
            },
            "functionSelector": "fdef9106",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasPermission",
            "nameLocation": "7140:13:50",
            "overrides": {
              "id": 46306,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7279:8:50"
            },
            "parameters": {
              "id": 46305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46298,
                  "mutability": "mutable",
                  "name": "_where",
                  "nameLocation": "7171:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46318,
                  "src": "7163:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7163:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46300,
                  "mutability": "mutable",
                  "name": "_who",
                  "nameLocation": "7195:4:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46318,
                  "src": "7187:12:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7187:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46302,
                  "mutability": "mutable",
                  "name": "_permissionId",
                  "nameLocation": "7217:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46318,
                  "src": "7209:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46301,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7209:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46304,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "7253:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46318,
                  "src": "7240:18:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46303,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7240:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7153:111:50"
            },
            "returnParameters": {
              "id": 46309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46318,
                  "src": "7297:4:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46307,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7297:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7296:6:50"
            },
            "scope": 46790,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46333,
            "nodeType": "FunctionDefinition",
            "src": "7403:152:50",
            "nodes": [],
            "body": {
              "id": 46332,
              "nodeType": "Block",
              "src": "7515:40:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46329,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46321,
                        "src": "7538:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46328,
                      "name": "_setMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46655,
                      "src": "7525:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (bytes calldata)"
                      }
                    },
                    "id": 46330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7525:23:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46331,
                  "nodeType": "ExpressionStatement",
                  "src": "7525:23:50"
                }
              ]
            },
            "baseFunctions": [
              46820
            ],
            "documentation": {
              "id": 46319,
              "nodeType": "StructuredDocumentation",
              "src": "7378:20:50",
              "text": "@inheritdoc IDAO"
            },
            "functionSelector": "ee57e36f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46325,
                    "name": "SET_METADATA_PERMISSION_ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46104,
                    "src": "7487:26:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 46326,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46324,
                  "name": "auth",
                  "nameLocations": [
                    "7482:4:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47120,
                  "src": "7482:4:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "7482:32:50"
              }
            ],
            "name": "setMetadata",
            "nameLocation": "7412:11:50",
            "overrides": {
              "id": 46323,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7473:8:50"
            },
            "parameters": {
              "id": 46322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46321,
                  "mutability": "mutable",
                  "name": "_metadata",
                  "nameLocation": "7448:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46333,
                  "src": "7433:24:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46320,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7433:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7423:40:50"
            },
            "returnParameters": {
              "id": 46327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7515:0:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46482,
            "nodeType": "FunctionDefinition",
            "src": "7586:2287:50",
            "nodes": [],
            "body": {
              "id": 46481,
              "nodeType": "Block",
              "src": "7843:2030:50",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 46354,
                        "name": "_actions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46340,
                        "src": "7857:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Action_$46800_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDAO.Action calldata[] calldata"
                        }
                      },
                      "id": 46355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7866:6:50",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7857:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 46356,
                      "name": "MAX_ACTIONS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46126,
                      "src": "7875:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7857:29:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46362,
                  "nodeType": "IfStatement",
                  "src": "7853:83:50",
                  "trueBody": {
                    "id": 46361,
                    "nodeType": "Block",
                    "src": "7888:48:50",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 46358,
                            "name": "TooManyActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46139,
                            "src": "7909:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7909:16:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46360,
                        "nodeType": "RevertStatement",
                        "src": "7902:23:50"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 46370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46363,
                      "name": "execResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46350,
                      "src": "7946:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 46367,
                            "name": "_actions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46340,
                            "src": "7972:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Action_$46800_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IDAO.Action calldata[] calldata"
                            }
                          },
                          "id": 46368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7981:6:50",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7972:15:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 46366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7960:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 46364,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7964:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 46365,
                          "nodeType": "ArrayTypeName",
                          "src": "7964:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        }
                      },
                      "id": 46369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7960:28:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "src": "7946:42:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 46371,
                  "nodeType": "ExpressionStatement",
                  "src": "7946:42:50"
                },
                {
                  "assignments": [
                    46373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46373,
                      "mutability": "mutable",
                      "name": "gasBefore",
                      "nameLocation": "8007:9:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 46481,
                      "src": "7999:17:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46372,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7999:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46374,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7999:17:50"
                },
                {
                  "assignments": [
                    46376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46376,
                      "mutability": "mutable",
                      "name": "gasAfter",
                      "nameLocation": "8034:8:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 46481,
                      "src": "8026:16:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46375,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8026:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46377,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8026:16:50"
                },
                {
                  "body": {
                    "id": 46469,
                    "nodeType": "Block",
                    "src": "8096:1523:50",
                    "statements": [
                      {
                        "expression": {
                          "id": 46389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 46386,
                            "name": "gasBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46373,
                            "src": "8110:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 46387,
                              "name": "gasleft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -7,
                              "src": "8122:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 46388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8122:9:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8110:21:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 46390,
                        "nodeType": "ExpressionStatement",
                        "src": "8110:21:50"
                      },
                      {
                        "assignments": [
                          46392,
                          46394
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 46392,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "8152:7:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 46469,
                            "src": "8147:12:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 46391,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8147:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 46394,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "8174:6:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 46469,
                            "src": "8161:19:50",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 46393,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "8161:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 46410,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 46405,
                                  "name": "_actions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46340,
                                  "src": "8247:8:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Action_$46800_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct IDAO.Action calldata[] calldata"
                                  }
                                },
                                "id": 46407,
                                "indexExpression": {
                                  "id": 46406,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46379,
                                  "src": "8256:1:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8247:11:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Action_$46800_calldata_ptr",
                                  "typeString": "struct IDAO.Action calldata"
                                }
                              },
                              "id": 46408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8259:4:50",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46799,
                              "src": "8247:16:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 46395,
                                    "name": "_actions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46340,
                                    "src": "8184:8:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Action_$46800_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct IDAO.Action calldata[] calldata"
                                    }
                                  },
                                  "id": 46397,
                                  "indexExpression": {
                                    "id": 46396,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46379,
                                    "src": "8193:1:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8184:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Action_$46800_calldata_ptr",
                                    "typeString": "struct IDAO.Action calldata"
                                  }
                                },
                                "id": 46398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8196:2:50",
                                "memberName": "to",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46795,
                                "src": "8184:14:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 46399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8199:4:50",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "8184:19:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 46404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 46400,
                                    "name": "_actions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46340,
                                    "src": "8211:8:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Action_$46800_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct IDAO.Action calldata[] calldata"
                                    }
                                  },
                                  "id": 46402,
                                  "indexExpression": {
                                    "id": 46401,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46379,
                                    "src": "8220:1:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8211:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Action_$46800_calldata_ptr",
                                    "typeString": "struct IDAO.Action calldata"
                                  }
                                },
                                "id": 46403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8223:5:50",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46797,
                                "src": "8211:17:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "8184:45:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 46409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8184:93:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8146:131:50"
                      },
                      {
                        "expression": {
                          "id": 46414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 46411,
                            "name": "gasAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46376,
                            "src": "8291:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 46412,
                              "name": "gasleft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -7,
                              "src": "8302:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 46413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8302:9:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8291:20:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 46415,
                        "nodeType": "ExpressionStatement",
                        "src": "8291:20:50"
                      },
                      {
                        "condition": {
                          "id": 46423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8373:35:50",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 46417,
                                "name": "_allowFailureMap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46342,
                                "src": "8381:16:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 46420,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46379,
                                    "src": "8405:1:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 46419,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8399:5:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 46418,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8399:5:50",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 46421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8399:8:50",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 46416,
                              "name": "hasBit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48015,
                              "src": "8374:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_bool_$",
                                "typeString": "function (uint256,uint8) pure returns (bool)"
                              }
                            },
                            "id": 46422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8374:34:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 46457,
                          "nodeType": "Block",
                          "src": "8570:941:50",
                          "statements": [
                            {
                              "condition": {
                                "id": 46434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "8637:8:50",
                                "subExpression": {
                                  "id": 46433,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46392,
                                  "src": "8638:7:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 46456,
                              "nodeType": "IfStatement",
                              "src": "8633:864:50",
                              "trueBody": {
                                "id": 46455,
                                "nodeType": "Block",
                                "src": "8647:850:50",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 46439,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 46435,
                                        "name": "gasAfter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46376,
                                        "src": "9260:8:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 46438,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 46436,
                                          "name": "gasBefore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 46373,
                                          "src": "9271:9:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3634",
                                          "id": 46437,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9283:2:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_64_by_1",
                                            "typeString": "int_const 64"
                                          },
                                          "value": "64"
                                        },
                                        "src": "9271:14:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9260:25:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 46444,
                                    "nodeType": "IfStatement",
                                    "src": "9256:104:50",
                                    "trueBody": {
                                      "id": 46443,
                                      "nodeType": "Block",
                                      "src": "9287:73:50",
                                      "statements": [
                                        {
                                          "errorCall": {
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "id": 46440,
                                              "name": "InsufficientGas",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 46147,
                                              "src": "9320:15:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                "typeString": "function () pure"
                                              }
                                            },
                                            "id": 46441,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "9320:17:50",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 46442,
                                          "nodeType": "RevertStatement",
                                          "src": "9313:24:50"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 46453,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 46445,
                                        "name": "failureMap",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46352,
                                        "src": "9436:10:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "id": 46447,
                                            "name": "failureMap",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 46352,
                                            "src": "9457:10:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 46450,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 46379,
                                                "src": "9475:1:50",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 46449,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "9469:5:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint8_$",
                                                "typeString": "type(uint8)"
                                              },
                                              "typeName": {
                                                "id": 46448,
                                                "name": "uint8",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9469:5:50",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 46451,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "9469:8:50",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          ],
                                          "id": 46446,
                                          "name": "flipBit",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 48033,
                                          "src": "9449:7:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
                                            "typeString": "function (uint256,uint8) pure returns (uint256)"
                                          }
                                        },
                                        "id": 46452,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9449:29:50",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9436:42:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 46454,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9436:42:50"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 46458,
                        "nodeType": "IfStatement",
                        "src": "8369:1142:50",
                        "trueBody": {
                          "id": 46432,
                          "nodeType": "Block",
                          "src": "8410:154:50",
                          "statements": [
                            {
                              "condition": {
                                "id": 46425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "8477:8:50",
                                "subExpression": {
                                  "id": 46424,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46392,
                                  "src": "8478:7:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 46431,
                              "nodeType": "IfStatement",
                              "src": "8473:77:50",
                              "trueBody": {
                                "id": 46430,
                                "nodeType": "Block",
                                "src": "8487:63:50",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 46427,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 46379,
                                          "src": "8529:1:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 46426,
                                        "name": "ActionFailed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46144,
                                        "src": "8516:12:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256) pure"
                                        }
                                      },
                                      "id": 46428,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8516:15:50",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 46429,
                                    "nodeType": "RevertStatement",
                                    "src": "8509:22:50"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 46463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 46459,
                              "name": "execResults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46350,
                              "src": "9525:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 46461,
                            "indexExpression": {
                              "id": 46460,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46379,
                              "src": "9537:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9525:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 46462,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46394,
                            "src": "9542:6:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "9525:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 46464,
                        "nodeType": "ExpressionStatement",
                        "src": "9525:23:50"
                      },
                      {
                        "id": 46468,
                        "nodeType": "UncheckedBlock",
                        "src": "9563:46:50",
                        "statements": [
                          {
                            "expression": {
                              "id": 46466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9591:3:50",
                              "subExpression": {
                                "id": 46465,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46379,
                                "src": "9593:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 46467,
                            "nodeType": "ExpressionStatement",
                            "src": "9591:3:50"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46382,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46379,
                      "src": "8073:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 46383,
                        "name": "_actions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46340,
                        "src": "8077:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Action_$46800_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDAO.Action calldata[] calldata"
                        }
                      },
                      "id": 46384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8086:6:50",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8077:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8073:19:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46470,
                  "initializationExpression": {
                    "assignments": [
                      46379
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 46379,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8066:1:50",
                        "nodeType": "VariableDeclaration",
                        "scope": 46470,
                        "src": "8058:9:50",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 46378,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8058:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 46381,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 46380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8070:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8058:13:50"
                  },
                  "nodeType": "ForStatement",
                  "src": "8053:1566:50"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46472,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9664:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9668:6:50",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9664:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46474,
                        "name": "_callId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46336,
                        "src": "9696:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 46475,
                        "name": "_actions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46340,
                        "src": "9726:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Action_$46800_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDAO.Action calldata[] calldata"
                        }
                      },
                      {
                        "id": 46476,
                        "name": "_allowFailureMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46342,
                        "src": "9765:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46477,
                        "name": "failureMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46352,
                        "src": "9807:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46478,
                        "name": "execResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46350,
                        "src": "9844:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Action_$46800_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDAO.Action calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "id": 46471,
                      "name": "Executed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46860,
                      "src": "9634:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_array$_t_struct$_Action_$46800_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,struct IDAO.Action memory[] memory,uint256,uint256,bytes memory[] memory)"
                      }
                    },
                    "id": 46479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "9657:5:50",
                      "9688:6:50",
                      "9717:7:50",
                      "9748:15:50",
                      "9795:10:50",
                      "9831:11:50"
                    ],
                    "names": [
                      "actor",
                      "callId",
                      "actions",
                      "allowFailureMap",
                      "failureMap",
                      "execResults"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9634:232:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46480,
                  "nodeType": "EmitStatement",
                  "src": "9629:237:50"
                }
              ]
            },
            "baseFunctions": [
              46842
            ],
            "documentation": {
              "id": 46334,
              "nodeType": "StructuredDocumentation",
              "src": "7561:20:50",
              "text": "@inheritdoc IDAO"
            },
            "functionSelector": "c71bf324",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46346,
                    "name": "EXECUTE_PERMISSION_ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46092,
                    "src": "7751:21:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 46347,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46345,
                  "name": "auth",
                  "nameLocations": [
                    "7746:4:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47120,
                  "src": "7746:4:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "7746:27:50"
              }
            ],
            "name": "execute",
            "nameLocation": "7595:7:50",
            "overrides": {
              "id": 46344,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7729:8:50"
            },
            "parameters": {
              "id": 46343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46336,
                  "mutability": "mutable",
                  "name": "_callId",
                  "nameLocation": "7620:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46482,
                  "src": "7612:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46335,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7612:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46340,
                  "mutability": "mutable",
                  "name": "_actions",
                  "nameLocation": "7655:8:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46482,
                  "src": "7637:26:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Action_$46800_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IDAO.Action[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 46338,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 46337,
                        "name": "Action",
                        "nameLocations": [
                          "7637:6:50"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46800,
                        "src": "7637:6:50"
                      },
                      "referencedDeclaration": 46800,
                      "src": "7637:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Action_$46800_storage_ptr",
                        "typeString": "struct IDAO.Action"
                      }
                    },
                    "id": 46339,
                    "nodeType": "ArrayTypeName",
                    "src": "7637:8:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Action_$46800_storage_$dyn_storage_ptr",
                      "typeString": "struct IDAO.Action[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46342,
                  "mutability": "mutable",
                  "name": "_allowFailureMap",
                  "nameLocation": "7681:16:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46482,
                  "src": "7673:24:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7673:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7602:101:50"
            },
            "returnParameters": {
              "id": 46353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46350,
                  "mutability": "mutable",
                  "name": "execResults",
                  "nameLocation": "7806:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46482,
                  "src": "7791:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 46348,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "7791:5:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 46349,
                    "nodeType": "ArrayTypeName",
                    "src": "7791:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46352,
                  "mutability": "mutable",
                  "name": "failureMap",
                  "nameLocation": "7827:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46482,
                  "src": "7819:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7819:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7790:48:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46553,
            "nodeType": "FunctionDefinition",
            "src": "9904:669:50",
            "nodes": [],
            "body": {
              "id": 46552,
              "nodeType": "Block",
              "src": "10038:535:50",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46493,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46487,
                      "src": "10052:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 46494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10063:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10052:12:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46499,
                  "nodeType": "IfStatement",
                  "src": "10048:37:50",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46496,
                        "name": "ZeroAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46150,
                        "src": "10073:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10073:12:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46498,
                    "nodeType": "RevertStatement",
                    "src": "10066:19:50"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 46505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46500,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46485,
                      "src": "10100:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 46503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10118:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 46502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10110:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46501,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10110:7:50",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10110:10:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10100:20:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 46542,
                    "nodeType": "Block",
                    "src": "10274:227:50",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 46518,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10292:3:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 46519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10296:5:50",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "10292:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 46520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10305:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10292:14:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 46528,
                        "nodeType": "IfStatement",
                        "src": "10288:109:50",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 46523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10375:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "expression": {
                                  "id": 46524,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10386:3:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 46525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10390:5:50",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "10386:9:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 46522,
                              "name": "NativeTokenDepositAmountMismatch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46157,
                              "src": "10331:32:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 46526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "10365:8:50",
                              "10378:6:50"
                            ],
                            "names": [
                              "expected",
                              "actual"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "10331:66:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 46527,
                          "nodeType": "RevertStatement",
                          "src": "10324:73:50"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 46533,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10455:3:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 46534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10459:6:50",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10455:10:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 46537,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10475:4:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DAO_$46790",
                                    "typeString": "contract DAO"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DAO_$46790",
                                    "typeString": "contract DAO"
                                  }
                                ],
                                "id": 46536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10467:7:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 46535,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10467:7:50",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 46538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10467:13:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 46539,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46487,
                              "src": "10482:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 46530,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46485,
                                  "src": "10430:6:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 46529,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43802,
                                "src": "10412:17:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$43802_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 46531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10412:25:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$43802",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 46532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10438:16:50",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43898,
                            "src": "10412:42:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$43802_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$43802_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 46540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10412:78:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46541,
                        "nodeType": "ExpressionStatement",
                        "src": "10412:78:50"
                      }
                    ]
                  },
                  "id": 46543,
                  "nodeType": "IfStatement",
                  "src": "10096:405:50",
                  "trueBody": {
                    "id": 46517,
                    "nodeType": "Block",
                    "src": "10122:146:50",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 46506,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10140:3:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 46507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10144:5:50",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "10140:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 46508,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46487,
                            "src": "10153:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10140:20:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 46516,
                        "nodeType": "IfStatement",
                        "src": "10136:121:50",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 46511,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46487,
                                "src": "10229:7:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 46512,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10246:3:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 46513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10250:5:50",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "10246:9:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 46510,
                              "name": "NativeTokenDepositAmountMismatch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46157,
                              "src": "10185:32:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 46514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "10219:8:50",
                              "10238:6:50"
                            ],
                            "names": [
                              "expected",
                              "actual"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "10185:72:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 46515,
                          "nodeType": "RevertStatement",
                          "src": "10178:79:50"
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46545,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10526:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10530:6:50",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10526:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46547,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46485,
                        "src": "10538:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46548,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46487,
                        "src": "10546:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46549,
                        "name": "_reference",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46489,
                        "src": "10555:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 46544,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46890,
                      "src": "10516:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,string memory)"
                      }
                    },
                    "id": 46550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10516:50:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46551,
                  "nodeType": "EmitStatement",
                  "src": "10511:55:50"
                }
              ]
            },
            "baseFunctions": [
              46879
            ],
            "documentation": {
              "id": 46483,
              "nodeType": "StructuredDocumentation",
              "src": "9879:20:50",
              "text": "@inheritdoc IDAO"
            },
            "functionSelector": "bfe07da6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "9913:7:50",
            "overrides": {
              "id": 46491,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10029:8:50"
            },
            "parameters": {
              "id": 46490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46485,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "9938:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46553,
                  "src": "9930:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9930:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46487,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9962:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46553,
                  "src": "9954:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9954:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46489,
                  "mutability": "mutable",
                  "name": "_reference",
                  "nameLocation": "9995:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46553,
                  "src": "9979:26:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46488,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9979:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9920:91:50"
            },
            "returnParameters": {
              "id": 46492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10038:0:50"
            },
            "scope": 46790,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46574,
            "nodeType": "FunctionDefinition",
            "src": "10604:283:50",
            "nodes": [],
            "body": {
              "id": 46573,
              "nodeType": "Block",
              "src": "10740:147:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46563,
                      "name": "signatureValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46130,
                      "src": "10750:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1271_$44855",
                        "typeString": "contract IERC1271"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46565,
                          "name": "_signatureValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46556,
                          "src": "10780:19:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46564,
                        "name": "IERC1271",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44855,
                        "src": "10771:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC1271_$44855_$",
                          "typeString": "type(contract IERC1271)"
                        }
                      },
                      "id": 46566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10771:29:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1271_$44855",
                        "typeString": "contract IERC1271"
                      }
                    },
                    "src": "10750:50:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1271_$44855",
                      "typeString": "contract IERC1271"
                    }
                  },
                  "id": 46568,
                  "nodeType": "ExpressionStatement",
                  "src": "10750:50:50"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 46570,
                        "name": "_signatureValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46556,
                        "src": "10859:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46569,
                      "name": "SignatureValidatorSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46925,
                      "src": "10816:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "10839:18:50"
                    ],
                    "names": [
                      "signatureValidator"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10816:64:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46572,
                  "nodeType": "EmitStatement",
                  "src": "10811:69:50"
                }
              ]
            },
            "baseFunctions": [
              46920
            ],
            "documentation": {
              "id": 46554,
              "nodeType": "StructuredDocumentation",
              "src": "10579:20:50",
              "text": "@inheritdoc IDAO"
            },
            "functionSelector": "3e2ab0d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46560,
                    "name": "SET_SIGNATURE_VALIDATOR_PERMISSION_ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46116,
                    "src": "10701:37:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 46561,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46559,
                  "name": "auth",
                  "nameLocations": [
                    "10696:4:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47120,
                  "src": "10696:4:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "10696:43:50"
              }
            ],
            "name": "setSignatureValidator",
            "nameLocation": "10613:21:50",
            "overrides": {
              "id": 46558,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10687:8:50"
            },
            "parameters": {
              "id": 46557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46556,
                  "mutability": "mutable",
                  "name": "_signatureValidator",
                  "nameLocation": "10652:19:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46574,
                  "src": "10644:27:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10644:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10634:43:50"
            },
            "returnParameters": {
              "id": 46562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10740:0:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46610,
            "nodeType": "FunctionDefinition",
            "src": "10918:434:50",
            "nodes": [],
            "body": {
              "id": 46609,
              "nodeType": "Block",
              "src": "11062:290:50",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 46595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 46589,
                          "name": "signatureValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46130,
                          "src": "11084:18:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1271_$44855",
                            "typeString": "contract IERC1271"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC1271_$44855",
                            "typeString": "contract IERC1271"
                          }
                        ],
                        "id": 46588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11076:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11076:7:50",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11076:27:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 46593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11115:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 46592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11107:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46591,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11107:7:50",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11107:10:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11076:41:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46602,
                  "nodeType": "IfStatement",
                  "src": "11072:135:50",
                  "trueBody": {
                    "id": 46601,
                    "nodeType": "Block",
                    "src": "11119:88:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11194:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11187:6:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes4_$",
                              "typeString": "type(bytes4)"
                            },
                            "typeName": {
                              "id": 46596,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "11187:6:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11187:9:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 46586,
                        "id": 46600,
                        "nodeType": "Return",
                        "src": "11180:16:50"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46605,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46577,
                        "src": "11327:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 46606,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46579,
                        "src": "11334:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 46603,
                        "name": "signatureValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46130,
                        "src": "11291:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1271_$44855",
                          "typeString": "contract IERC1271"
                        }
                      },
                      "id": 46604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11310:16:50",
                      "memberName": "isValidSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44854,
                      "src": "11291:35:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                      }
                    },
                    "id": 46607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11291:54:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 46586,
                  "id": 46608,
                  "nodeType": "Return",
                  "src": "11284:61:50"
                }
              ]
            },
            "baseFunctions": [
              44854,
              46935
            ],
            "documentation": {
              "id": 46575,
              "nodeType": "StructuredDocumentation",
              "src": "10893:20:50",
              "text": "@inheritdoc IDAO"
            },
            "functionSelector": "1626ba7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "10927:16:50",
            "overrides": {
              "id": 46583,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 46581,
                  "name": "IDAO",
                  "nameLocations": [
                    "11029:4:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46946,
                  "src": "11029:4:50"
                },
                {
                  "id": 46582,
                  "name": "IERC1271",
                  "nameLocations": [
                    "11035:8:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44855,
                  "src": "11035:8:50"
                }
              ],
              "src": "11020:24:50"
            },
            "parameters": {
              "id": 46580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46577,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "10961:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46610,
                  "src": "10953:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46576,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10953:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46579,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "10989:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46610,
                  "src": "10976:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46578,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10976:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10943:62:50"
            },
            "returnParameters": {
              "id": 46586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46585,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46610,
                  "src": "11054:6:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 46584,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "11054:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11053:8:50"
            },
            "scope": 46790,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46622,
            "nodeType": "FunctionDefinition",
            "src": "11750:92:50",
            "nodes": [],
            "body": {
              "id": 46621,
              "nodeType": "Block",
              "src": "11777:65:50",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46615,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11813:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11817:6:50",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11813:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46617,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11825:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11829:5:50",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "11825:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46614,
                      "name": "NativeTokenDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46897,
                      "src": "11792:20:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11792:43:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46620,
                  "nodeType": "EmitStatement",
                  "src": "11787:48:50"
                }
              ]
            },
            "documentation": {
              "id": 46611,
              "nodeType": "StructuredDocumentation",
              "src": "11358:387:50",
              "text": "@notice Emits the `NativeTokenDeposited` event to track native token deposits that weren't made via the deposit method.\n @dev This call is bound by the gas limitations for `send`/`transfer` calls introduced by EIP-2929.\n Gas cost increases in future hard forks might break this function. As an alternative, EIP-2930-type transactions using access lists can be employed."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11757:2:50"
            },
            "returnParameters": {
              "id": 46613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11777:0:50"
            },
            "scope": 46790,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46644,
            "nodeType": "FunctionDefinition",
            "src": "12278:174:50",
            "nodes": [],
            "body": {
              "id": 46643,
              "nodeType": "Block",
              "src": "12342:110:50",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    46631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46631,
                      "mutability": "mutable",
                      "name": "magicNumber",
                      "nameLocation": "12359:11:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 46643,
                      "src": "12352:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 46630,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "12352:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46637,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46633,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12389:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12393:3:50",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "src": "12389:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 46635,
                        "name": "_input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46625,
                        "src": "12398:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46632,
                      "name": "_handleCallback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48100,
                      "src": "12373:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (bytes4,bytes memory) returns (bytes4)"
                      }
                    },
                    "id": 46636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12373:32:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12352:53:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46640,
                        "name": "magicNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46631,
                        "src": "12433:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 46638,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12422:3:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 46639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "12426:6:50",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "12422:10:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 46641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12422:23:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 46629,
                  "id": 46642,
                  "nodeType": "Return",
                  "src": "12415:30:50"
                }
              ]
            },
            "documentation": {
              "id": 46623,
              "nodeType": "StructuredDocumentation",
              "src": "11848:425:50",
              "text": "@notice Fallback to handle future versions of the [ERC-165](https://eips.ethereum.org/EIPS/eip-165) standard.\n @param _input An alias being equivalent to `msg.data`. This feature of the fallback function was introduced with the [solidity compiler version 0.7.6](https://github.com/ethereum/solidity/releases/tag/v0.7.6)\n @return The magic number registered for the function selector triggering the fallback."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46625,
                  "mutability": "mutable",
                  "name": "_input",
                  "nameLocation": "12302:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46644,
                  "src": "12287:21:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46624,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12287:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12286:23:50"
            },
            "returnParameters": {
              "id": 46629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46628,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46644,
                  "src": "12328:12:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46627,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12328:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12327:14:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46655,
            "nodeType": "FunctionDefinition",
            "src": "12585:101:50",
            "nodes": [],
            "body": {
              "id": 46654,
              "nodeType": "Block",
              "src": "12642:44:50",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 46651,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46647,
                        "src": "12669:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46650,
                      "name": "MetadataSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46825,
                      "src": "12657:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 46652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12657:22:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46653,
                  "nodeType": "EmitStatement",
                  "src": "12652:27:50"
                }
              ]
            },
            "documentation": {
              "id": 46645,
              "nodeType": "StructuredDocumentation",
              "src": "12458:122:50",
              "text": "@notice Emits the MetadataSet event if new metadata is set.\n @param _metadata Hash of the IPFS metadata object."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setMetadata",
            "nameLocation": "12594:12:50",
            "parameters": {
              "id": 46648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46647,
                  "mutability": "mutable",
                  "name": "_metadata",
                  "nameLocation": "12622:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46655,
                  "src": "12607:24:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46646,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12607:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12606:26:50"
            },
            "returnParameters": {
              "id": 46649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12642:0:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46670,
            "nodeType": "FunctionDefinition",
            "src": "12842:173:50",
            "nodes": [],
            "body": {
              "id": 46669,
              "nodeType": "Block",
              "src": "12908:107:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46661,
                      "name": "trustedForwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46133,
                      "src": "12918:16:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46662,
                      "name": "_trustedForwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46658,
                      "src": "12937:17:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12918:36:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46664,
                  "nodeType": "ExpressionStatement",
                  "src": "12918:36:50"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 46666,
                        "name": "_trustedForwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46658,
                        "src": "12990:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46665,
                      "name": "TrustedForwarderSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46914,
                      "src": "12970:19:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12970:38:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46668,
                  "nodeType": "EmitStatement",
                  "src": "12965:43:50"
                }
              ]
            },
            "documentation": {
              "id": 46656,
              "nodeType": "StructuredDocumentation",
              "src": "12692:145:50",
              "text": "@notice Sets the trusted forwarder on the DAO and emits the associated event.\n @param _trustedForwarder The trusted forwarder address."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTrustedForwarder",
            "nameLocation": "12851:20:50",
            "parameters": {
              "id": 46659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46658,
                  "mutability": "mutable",
                  "name": "_trustedForwarder",
                  "nameLocation": "12880:17:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46670,
                  "src": "12872:25:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12872:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12871:27:50"
            },
            "returnParameters": {
              "id": 46660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12908:0:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46716,
            "nodeType": "FunctionDefinition",
            "src": "13092:726:50",
            "nodes": [],
            "body": {
              "id": 46715,
              "nodeType": "Block",
              "src": "13136:682:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46676,
                              "name": "IERC721ReceiverUpgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44232,
                              "src": "13170:26:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721ReceiverUpgradeable_$44232_$",
                                "typeString": "type(contract IERC721ReceiverUpgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721ReceiverUpgradeable_$44232_$",
                                "typeString": "type(contract IERC721ReceiverUpgradeable)"
                              }
                            ],
                            "id": 46675,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "13165:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13165:32:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721ReceiverUpgradeable_$44232",
                            "typeString": "type(contract IERC721ReceiverUpgradeable)"
                          }
                        },
                        "id": 46678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "13198:11:50",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "13165:44:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 46674,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44779,
                      "src": "13146:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 46679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13146:64:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46680,
                  "nodeType": "ExpressionStatement",
                  "src": "13146:64:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46683,
                              "name": "IERC1155ReceiverUpgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43602,
                              "src": "13244:27:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$43602_$",
                                "typeString": "type(contract IERC1155ReceiverUpgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$43602_$",
                                "typeString": "type(contract IERC1155ReceiverUpgradeable)"
                              }
                            ],
                            "id": 46682,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "13239:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13239:33:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155ReceiverUpgradeable_$43602",
                            "typeString": "type(contract IERC1155ReceiverUpgradeable)"
                          }
                        },
                        "id": 46685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "13273:11:50",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "13239:45:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 46681,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44779,
                      "src": "13220:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 46686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13220:65:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46687,
                  "nodeType": "ExpressionStatement",
                  "src": "13220:65:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 46689,
                            "name": "IERC721ReceiverUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44232,
                            "src": "13327:26:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721ReceiverUpgradeable_$44232_$",
                              "typeString": "type(contract IERC721ReceiverUpgradeable)"
                            }
                          },
                          "id": 46690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13354:16:50",
                          "memberName": "onERC721Received",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44231,
                          "src": "13327:43:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                            "typeString": "function IERC721ReceiverUpgradeable.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                          }
                        },
                        "id": 46691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "13371:8:50",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "13327:52:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 46692,
                            "name": "IERC721ReceiverUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44232,
                            "src": "13393:26:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721ReceiverUpgradeable_$44232_$",
                              "typeString": "type(contract IERC721ReceiverUpgradeable)"
                            }
                          },
                          "id": 46693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13420:16:50",
                          "memberName": "onERC721Received",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44231,
                          "src": "13393:43:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                            "typeString": "function IERC721ReceiverUpgradeable.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                          }
                        },
                        "id": 46694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "13437:8:50",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "13393:52:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 46688,
                      "name": "_registerCallback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48115,
                      "src": "13296:17:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4,bytes4)"
                      }
                    },
                    "id": 46695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13296:159:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46696,
                  "nodeType": "ExpressionStatement",
                  "src": "13296:159:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 46698,
                            "name": "IERC1155ReceiverUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43602,
                            "src": "13496:27:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$43602_$",
                              "typeString": "type(contract IERC1155ReceiverUpgradeable)"
                            }
                          },
                          "id": 46699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13524:17:50",
                          "memberName": "onERC1155Received",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43583,
                          "src": "13496:45:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                            "typeString": "function IERC1155ReceiverUpgradeable.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
                          }
                        },
                        "id": 46700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "13542:8:50",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "13496:54:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 46701,
                            "name": "IERC1155ReceiverUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43602,
                            "src": "13564:27:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$43602_$",
                              "typeString": "type(contract IERC1155ReceiverUpgradeable)"
                            }
                          },
                          "id": 46702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13592:17:50",
                          "memberName": "onERC1155Received",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43583,
                          "src": "13564:45:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                            "typeString": "function IERC1155ReceiverUpgradeable.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
                          }
                        },
                        "id": 46703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "13610:8:50",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "13564:54:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 46697,
                      "name": "_registerCallback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48115,
                      "src": "13465:17:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4,bytes4)"
                      }
                    },
                    "id": 46704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13465:163:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46705,
                  "nodeType": "ExpressionStatement",
                  "src": "13465:163:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 46707,
                            "name": "IERC1155ReceiverUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43602,
                            "src": "13669:27:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$43602_$",
                              "typeString": "type(contract IERC1155ReceiverUpgradeable)"
                            }
                          },
                          "id": 46708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13697:22:50",
                          "memberName": "onERC1155BatchReceived",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43601,
                          "src": "13669:50:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                            "typeString": "function IERC1155ReceiverUpgradeable.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
                          }
                        },
                        "id": 46709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "13720:8:50",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "13669:59:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 46710,
                            "name": "IERC1155ReceiverUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43602,
                            "src": "13742:27:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$43602_$",
                              "typeString": "type(contract IERC1155ReceiverUpgradeable)"
                            }
                          },
                          "id": 46711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13770:22:50",
                          "memberName": "onERC1155BatchReceived",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43601,
                          "src": "13742:50:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                            "typeString": "function IERC1155ReceiverUpgradeable.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
                          }
                        },
                        "id": 46712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "13793:8:50",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "13742:59:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 46706,
                      "name": "_registerCallback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48115,
                      "src": "13638:17:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4,bytes4)"
                      }
                    },
                    "id": 46713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13638:173:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46714,
                  "nodeType": "ExpressionStatement",
                  "src": "13638:173:50"
                }
              ]
            },
            "documentation": {
              "id": 46671,
              "nodeType": "StructuredDocumentation",
              "src": "13021:66:50",
              "text": "@notice Registers the ERC721/ERC1155 interfaces and callbacks."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerTokenInterfaces",
            "nameLocation": "13101:24:50",
            "parameters": {
              "id": 46672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13125:2:50"
            },
            "returnParameters": {
              "id": 46673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13136:0:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 46746,
            "nodeType": "FunctionDefinition",
            "src": "13849:394:50",
            "nodes": [],
            "body": {
              "id": 46745,
              "nodeType": "Block",
              "src": "14046:197:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46731,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46719,
                        "src": "14075:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 46730,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44779,
                      "src": "14056:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 46732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14056:32:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46733,
                  "nodeType": "ExpressionStatement",
                  "src": "14056:32:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46735,
                        "name": "_callbackSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46721,
                        "src": "14116:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 46736,
                        "name": "_magicNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46723,
                        "src": "14135:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 46734,
                      "name": "_registerCallback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48115,
                      "src": "14098:17:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4,bytes4)"
                      }
                    },
                    "id": 46737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14098:50:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46738,
                  "nodeType": "ExpressionStatement",
                  "src": "14098:50:50"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 46740,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46719,
                        "src": "14190:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 46741,
                        "name": "_callbackSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46721,
                        "src": "14204:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 46742,
                        "name": "_magicNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46723,
                        "src": "14223:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 46739,
                      "name": "StandardCallbackRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46869,
                      "src": "14163:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes4_$_t_bytes4_$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4,bytes4,bytes4)"
                      }
                    },
                    "id": 46743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14163:73:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46744,
                  "nodeType": "EmitStatement",
                  "src": "14158:78:50"
                }
              ]
            },
            "baseFunctions": [
              46945
            ],
            "documentation": {
              "id": 46717,
              "nodeType": "StructuredDocumentation",
              "src": "13824:20:50",
              "text": "@inheritdoc IDAO"
            },
            "functionSelector": "c4a50145",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46727,
                    "name": "REGISTER_STANDARD_CALLBACK_PERMISSION_ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46122,
                    "src": "14004:40:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 46728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46726,
                  "name": "auth",
                  "nameLocations": [
                    "13999:4:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47120,
                  "src": "13999:4:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "13999:46:50"
              }
            ],
            "name": "registerStandardCallback",
            "nameLocation": "13858:24:50",
            "overrides": {
              "id": 46725,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13990:8:50"
            },
            "parameters": {
              "id": 46724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46719,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "13899:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46746,
                  "src": "13892:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 46718,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "13892:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46721,
                  "mutability": "mutable",
                  "name": "_callbackSelector",
                  "nameLocation": "13928:17:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46746,
                  "src": "13921:24:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 46720,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "13921:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46723,
                  "mutability": "mutable",
                  "name": "_magicNumber",
                  "nameLocation": "13962:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46746,
                  "src": "13955:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 46722,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "13955:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13882:98:50"
            },
            "returnParameters": {
              "id": 46729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14046:0:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46755,
            "nodeType": "FunctionDefinition",
            "src": "14278:87:50",
            "nodes": [],
            "body": {
              "id": 46754,
              "nodeType": "Block",
              "src": "14334:31:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46752,
                    "name": "_daoURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46136,
                    "src": "14351:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 46751,
                  "id": 46753,
                  "nodeType": "Return",
                  "src": "14344:14:50"
                }
              ]
            },
            "baseFunctions": [
              46955
            ],
            "documentation": {
              "id": 46747,
              "nodeType": "StructuredDocumentation",
              "src": "14249:24:50",
              "text": "@inheritdoc IEIP4824"
            },
            "functionSelector": "7034731b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "daoURI",
            "nameLocation": "14287:6:50",
            "parameters": {
              "id": 46748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14293:2:50"
            },
            "returnParameters": {
              "id": 46751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46750,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46755,
                  "src": "14319:13:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46749,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14319:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14318:15:50"
            },
            "scope": 46790,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46769,
            "nodeType": "FunctionDefinition",
            "src": "14479:126:50",
            "nodes": [],
            "body": {
              "id": 46768,
              "nodeType": "Block",
              "src": "14567:38:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46765,
                        "name": "newDaoURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46758,
                        "src": "14588:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 46764,
                      "name": "_setDaoURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46784,
                      "src": "14577:10:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (string calldata)"
                      }
                    },
                    "id": 46766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14577:21:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46767,
                  "nodeType": "ExpressionStatement",
                  "src": "14577:21:50"
                }
              ]
            },
            "documentation": {
              "id": 46756,
              "nodeType": "StructuredDocumentation",
              "src": "14371:103:50",
              "text": "@notice Updates the set DAO uri to a new value.\n @param newDaoURI The new DAO uri to be set."
            },
            "functionSelector": "1080f99b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46761,
                    "name": "SET_METADATA_PERMISSION_ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46104,
                    "src": "14539:26:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 46762,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46760,
                  "name": "auth",
                  "nameLocations": [
                    "14534:4:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47120,
                  "src": "14534:4:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "14534:32:50"
              }
            ],
            "name": "setDaoURI",
            "nameLocation": "14488:9:50",
            "parameters": {
              "id": 46759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46758,
                  "mutability": "mutable",
                  "name": "newDaoURI",
                  "nameLocation": "14514:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46769,
                  "src": "14498:25:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46757,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14498:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14497:27:50"
            },
            "returnParameters": {
              "id": 46763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14567:0:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46784,
            "nodeType": "FunctionDefinition",
            "src": "14720:119:50",
            "nodes": [],
            "body": {
              "id": 46783,
              "nodeType": "Block",
              "src": "14774:65:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46775,
                      "name": "_daoURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46136,
                      "src": "14784:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46776,
                      "name": "daoURI_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46772,
                      "src": "14794:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "14784:17:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 46778,
                  "nodeType": "ExpressionStatement",
                  "src": "14784:17:50"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 46780,
                        "name": "daoURI_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46772,
                        "src": "14824:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 46779,
                      "name": "NewURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46162,
                      "src": "14817:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 46781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14817:15:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46782,
                  "nodeType": "EmitStatement",
                  "src": "14812:20:50"
                }
              ]
            },
            "documentation": {
              "id": 46770,
              "nodeType": "StructuredDocumentation",
              "src": "14611:104:50",
              "text": "@notice Sets the new DAO uri and emits the associated event.\n @param daoURI_ The new DAO uri."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setDaoURI",
            "nameLocation": "14729:10:50",
            "parameters": {
              "id": 46773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46772,
                  "mutability": "mutable",
                  "name": "daoURI_",
                  "nameLocation": "14756:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 46784,
                  "src": "14740:23:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46771,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14740:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14739:25:50"
            },
            "returnParameters": {
              "id": 46774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14774:0:50"
            },
            "scope": 46790,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46789,
            "nodeType": "VariableDeclaration",
            "src": "15121:25:50",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46785,
              "nodeType": "StructuredDocumentation",
              "src": "14845:271:50",
              "text": "@notice This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain (see [OpenZepplins guide about storage gaps](https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps))."
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "15141:5:50",
            "scope": 46790,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$47_storage",
              "typeString": "uint256[47]"
            },
            "typeName": {
              "baseType": {
                "id": 46786,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "15121:7:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 46788,
              "length": {
                "hexValue": "3437",
                "id": 46787,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "15129:2:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_47_by_1",
                  "typeString": "int_const 47"
                },
                "value": "47"
              },
              "nodeType": "ArrayTypeName",
              "src": "15121:11:50",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$47_storage_ptr",
                "typeString": "uint256[47]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46064,
              "name": "IEIP4824",
              "nameLocations": [
                "1417:8:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46956,
              "src": "1417:8:50"
            },
            "id": 46065,
            "nodeType": "InheritanceSpecifier",
            "src": "1417:8:50"
          },
          {
            "baseName": {
              "id": 46066,
              "name": "Initializable",
              "nameLocations": [
                "1431:13:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43425,
              "src": "1431:13:50"
            },
            "id": 46067,
            "nodeType": "InheritanceSpecifier",
            "src": "1431:13:50"
          },
          {
            "baseName": {
              "id": 46068,
              "name": "IERC1271",
              "nameLocations": [
                "1450:8:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44855,
              "src": "1450:8:50"
            },
            "id": 46069,
            "nodeType": "InheritanceSpecifier",
            "src": "1450:8:50"
          },
          {
            "baseName": {
              "id": 46070,
              "name": "ERC165StorageUpgradeable",
              "nameLocations": [
                "1464:24:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44785,
              "src": "1464:24:50"
            },
            "id": 46071,
            "nodeType": "InheritanceSpecifier",
            "src": "1464:24:50"
          },
          {
            "baseName": {
              "id": 46072,
              "name": "IDAO",
              "nameLocations": [
                "1494:4:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46946,
              "src": "1494:4:50"
            },
            "id": 46073,
            "nodeType": "InheritanceSpecifier",
            "src": "1494:4:50"
          },
          {
            "baseName": {
              "id": 46074,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "1504:15:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43561,
              "src": "1504:15:50"
            },
            "id": 46075,
            "nodeType": "InheritanceSpecifier",
            "src": "1504:15:50"
          },
          {
            "baseName": {
              "id": 46076,
              "name": "PermissionManager",
              "nameLocations": [
                "1525:17:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47716,
              "src": "1525:17:50"
            },
            "id": 46077,
            "nodeType": "InheritanceSpecifier",
            "src": "1525:17:50"
          },
          {
            "baseName": {
              "id": 46078,
              "name": "CallbackHandler",
              "nameLocations": [
                "1548:15:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48121,
              "src": "1548:15:50"
            },
            "id": 46079,
            "nodeType": "InheritanceSpecifier",
            "src": "1548:15:50"
          }
        ],
        "canonicalName": "DAO",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46063,
          "nodeType": "StructuredDocumentation",
          "src": "1151:246:50",
          "text": "@title DAO\n @author Aragon Association - 2021-2023\n @notice This contract is the entry point to the Aragon DAO framework and provides our users a simple and easy to use public interface.\n @dev Public API of the Aragon DAO framework."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46790,
          48121,
          47716,
          43561,
          43246,
          42912,
          42922,
          46946,
          44785,
          44829,
          44841,
          44855,
          43425,
          46956
        ],
        "name": "DAO",
        "nameLocation": "1406:3:50",
        "scope": 46791,
        "usedErrors": [
          46139,
          46144,
          46147,
          46150,
          46157,
          47062,
          47075,
          47078,
          47081,
          47084,
          48055
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 50
}