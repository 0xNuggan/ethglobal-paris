{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserveToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initialReserve",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refund",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_EXECUTE_PERMISSION_ID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_depositAmount",
          "type": "uint256"
        }
      ],
      "name": "calculatePurchaseReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_sellAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSaleReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "continuousSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dao",
      "outputs": [
        {
          "internalType": "contract IDAO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_continuousTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "getContinuousBurnRefund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reserveTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "getContinuousMintReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IDAO",
          "name": "_dao",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pluginType",
      "outputs": [
        {
          "internalType": "enum IPlugin.PluginType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveRatio",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sponsoredBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "surplusReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userLockedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "561:29:59:-:0;887:2132:53;561:29:59;;887:2132:53;561:29:59;;;-1:-1:-1;;;561:29:59;;;;;;;;:::i;:::-;;1582:327:53;;;;;;;;;;;;;;;;;;:::i;:::-;456:244:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;456:244:55;;;1702:15:53;1719:6;635:13:55;600:5;607:7;862:22:43;:20;;;:22;;:::i;:::-;936:32:18;2857:10:53;936:18:18;:32::i;:::-;2046:5:27;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:27;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;;;;;;4048:15:59;:54;-1:-1:-1;;;;;;4112:15:59;:54;-1:-1:-1;;;;;4176:15:59;:54;-1:-1:-1;;;;;4240:15:59;:54;-1:-1:-1;;;;;4304:15:59;:54;-1:-1:-1;;;;;4368:15:59;:54;-1:-1:-1;;;;;4432:15:59;:54;-1:-1:-1;;;;;4496:15:59;:54;-1:-1:-1;;;;;4560:15:59;:54;-1:-1:-1;;;;;4624:15:59;:54;-1:-1:-1;;;;;4688:15:59;:54;-1:-1:-1;;;;;4752:15:59;:54;-1:-1:-1;;;;;4816:15:59;:54;-1:-1:-1;;;;;4880:15:59;:54;-1:-1:-1;;;;;4944:15:59;:54;-1:-1:-1;;;;;5008:15:59;:54;-1:-1:-1;;;;;5072:15:59;:54;-1:-1:-1;;;;;5136:15:59;:54;-1:-1:-1;;;;;5200:15:59;:54;-1:-1:-1;;;;;5264:15:59;:54;-1:-1:-1;;;;;5328:15:59;:54;-1:-1:-1;;;;;5392:15:59;:54;-1:-1:-1;;;;;5456:15:59;:54;-1:-1:-1;;;;;5520:15:59;:54;-1:-1:-1;;;;;5584:15:59;:54;-1:-1:-1;;;;;5648:15:59;:54;-1:-1:-1;;;;;5712:15:59;:54;-1:-1:-1;;;;;5776:15:59;:54;-1:-1:-1;;;;;5840:15:59;:54;-1:-1:-1;;;;;5904:15:59;:54;-1:-1:-1;;;;;5968:15:59;:54;-1:-1:-1;;;;;6032:15:59;:54;-1:-1:-1;;;;;6096:15:59;:54;-1:-1:-1;;;;;6160:15:59;:54;-1:-1:-1;;;;;6224:15:59;:54;-1:-1:-1;;;;;6288:15:59;:54;-1:-1:-1;;;;;6352:15:59;:54;-1:-1:-1;;;;;6416:15:59;:54;-1:-1:-1;;;;;6480:15:59;:54;-1:-1:-1;;;;;6544:15:59;:54;-1:-1:-1;;;;;6608:15:59;:54;-1:-1:-1;;;;;6672:15:59;:54;-1:-1:-1;;;;;6736:15:59;:54;-1:-1:-1;;;;;6800:15:59;:54;-1:-1:-1;;;;;6864:15:59;:54;6946:36;6928:15;:54;7010:36;6992:15;:54;7074:36;7056:15;:54;7138:36;7120:15;:54;7202:36;7184:15;:54;7266:36;7248:15;:54;7330:36;7312:15;:54;7394:36;7376:15;:54;7458:36;7440:15;:54;7522:36;7504:15;:54;7586:36;7568:15;:54;7650:36;7632:15;:54;7714:36;7696:15;:54;7778:36;7760:15;:54;7842:36;7824:15;:54;7906:36;7888:15;:54;7970:36;7952:15;:54;8034:36;8016:15;:54;-1:-1:-1;;;;;8080:15:59;:54;8162:36;8144:15;:54;8226:36;8208:15;:54;8290:36;8272:15;:54;8354:36;8336:15;:54;8419:36;8400:16;:55;8484:36;8465:16;:55;8549:36;8530:16;:55;8614:36;8595:16;:55;8679:36;8660:16;:55;8744:36;8725:16;:55;8809:36;8790:16;:55;8874:36;8855:16;:55;8939:36;8920:16;:55;9004:36;8985:16;:55;9069:36;9050:16;:55;9134:36;9115:16;:55;9199:36;9180:16;:55;9264:36;9245:16;:55;9329:36;9310:16;:55;9394:36;9375:16;:55;9459:36;9440:16;:55;9524:36;9505:16;:55;9589:36;9570:16;:55;9654:36;9635:16;:55;9719:36;9700:16;:55;9784:36;9765:16;:55;9849:36;9830:16;:55;9914:36;9895:16;:55;9979:36;9960:16;:55;10044:36;10025:16;:55;10109:36;10090:16;:55;10174:36;10155:16;:55;459:12:56;:28;;-1:-1:-1;;459:28:56;;;;;;;;;;;;660:33:55::2;666:10;678:14:::0;660:5:::2;:33::i;:::-;-1:-1:-1::0;;;1737:7:53::1;:25:::0;;;-1:-1:-1;1772:12:53::1;:35:::0;;-1:-1:-1;;;;;;1772:35:53::1;-1:-1:-1::0;;;;;1772:35:53;::::1;;::::0;;1737:25;1851:17:::1;-1:-1:-1::0;1869:12:53::1;2857:10:::0;;2740:132;1869:12:::1;-1:-1:-1::0;;;;;1851:31:53::1;-1:-1:-1::0;;;;;1851:31:53::1;;;;;;;;;;;;;:51;;;;:::i;:::-;2857:10:::0;1817:31:::1;::::0;;;:17:::1;:31;::::0;;;;:85;-1:-1:-1;887:2132:53;;-1:-1:-1;887:2132:53;5939:280:4;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:4;;3652:2:61;5998:66:4;;;3634:21:61;3691:2;3671:18;;;3664:30;3730:34;3710:18;;;3703:62;-1:-1:-1;;;3781:18:61;;;3774:37;3828:19;;5998:66:4;;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:4;6140:15;6125:30;;;;;;6174:28;;4000:36:61;;;6174:28:4;;3988:2:61;3973:18;6174:28:4;;;;;;;6074:139;5939:280::o;2426:187:18:-;2518:6;;;-1:-1:-1;;;;;2534:17:18;;;-1:-1:-1;;;;;;2534:17:18;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;8520:535:27:-;-1:-1:-1;;;;;8603:21:27;;8595:65;;;;-1:-1:-1;;;8595:65:27;;4249:2:61;8595:65:27;;;4231:21:61;4288:2;4268:18;;;4261:30;4327:33;4307:18;;;4300:61;4378:18;;8595:65:27;4047:355:61;8595:65:27;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:27;;;;;;:9;:18;;;;;;;;:28;;;;;;8952:37;4553:25:61;;;8952:37:27;;4526:18:61;8952:37:27;;;;;;;8520:535;;:::o;12073:91::-;;;;:::o;14:127:61:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:61;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:61;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:61;;;2580:26;2531:89;-1:-1:-1;;1335:1:61;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:61;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:61;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:61;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:61:o;2735:351::-;2814:6;2822;2875:2;2863:9;2854:7;2850:23;2846:32;2843:52;;;2891:1;2888;2881:12;2843:52;2917:16;;-1:-1:-1;;;;;2962:31:61;;2952:42;;2942:70;;3008:1;3005;2998:12;2942:70;3076:2;3061:18;;;;3055:25;3031:5;;3055:25;;-1:-1:-1;;;2735:351:61:o;3223:222::-;3288:9;;;3309:10;;;3306:133;;;3361:10;3356:3;3352:20;3349:1;3342:31;3396:4;3393:1;3386:15;3424:4;3421:1;3414:15;3306:133;3223:222;;;;:::o;4407:177::-;887:2132:53;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c806354fd4d501161011a578063a0712d68116100ad578063da12457a1161007c578063da12457a14610439578063dd62ed3e14610441578063f2fde38b14610454578063f851a44014610467578063f8a2c98e1461048357600080fd5b8063a0712d68146103f7578063a10954fe1461040a578063a457c2d714610413578063a9059cbb1461042657600080fd5b80638cf2b63e116100e95780638cf2b63e146103aa5780638da5cb5b146103cb57806395d89b41146103dc57806396343886146103e457600080fd5b806354fd4d501461035e57806370a0823114610366578063715018a61461038f5780637cbed3e01461039757600080fd5b806329a00e7c1161019257806341de68301161016157806341de68301461031457806342966c6814610323578063485cc9551461033857806349f9b0f71461034b57600080fd5b806329a00e7c146102ba578063313ce567146102cd57806339509351146102dc5780634162169f146102ef57600080fd5b80630d8f9f7f116101ce5780630d8f9f7f1461027657806315a250001461029757806318160ddd1461029f57806323b872dd146102a757600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d5780630c7d5cd814610250575b600080fd5b61021361020e366004612b96565b6104aa565b60405190151581526020015b60405180910390f35b6102306104e1565b60405161021f9190612bc7565b61021361024b366004612c2a565b610573565b61011e546102619063ffffffff1681565b60405163ffffffff909116815260200161021f565b610289610284366004612c56565b61058b565b60405190815260200161021f565b6102896105ac565b609a54610289565b6102136102b5366004612c6f565b61062e565b6102896102c8366004612cb0565b610652565b6040516012815260200161021f565b6102136102ea366004612c2a565b61075b565b6065546001600160a01b03165b6040516001600160a01b03909116815260200161021f565b600160405161021f9190612cf8565b610336610331366004612c56565b61077d565b005b610336610346366004612d20565b610854565b610289610359366004612cb0565b61098e565b610230610aa6565b610289610374366004612d59565b6001600160a01b031660009081526098602052604090205490565b610336610b34565b6102896103a5366004612c56565b610b48565b6102896103b8366004612d59565b61011f6020526000908152604090205481565b6097546001600160a01b03166102fc565b610230610b69565b6103366103f2366004612c56565b610b78565b610336610405366004612c56565b610bc5565b61012054610289565b610213610421366004612c2a565b610c98565b610213610434366004612c2a565b610d13565b610289610d21565b61028961044f366004612d20565b610d2c565b610336610462366004612d59565b610d57565b61011e546102fc9064010000000090046001600160a01b031681565b6102897f333faabe8d5b573697f548cb3885d6a81cd1e2ac87d1775bfec70a290e8e4d6081565b60006001600160e01b0319821663041de68360e41b14806104db57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060609b80546104f090612d76565b80601f016020809104026020016040519081016040528092919081815260200182805461051c90612d76565b80156105695780601f1061053e57610100808354040283529160200191610569565b820191906000526020600020905b81548152906001019060200180831161054c57829003601f168201915b5050505050905090565b600033610581818585610dd0565b5060019392505050565b60006104db610598610d21565b6101205461011e5463ffffffff1685610652565b61012054610121546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061f9190612db0565b6106299190612ddf565b905090565b60003361063c858285610ef4565b610647858585610f6e565b506001949350505050565b600080851180156106635750600084115b8015610675575060008363ffffffff16115b801561068a5750620f424063ffffffff841611155b6106cd5760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21034b7383aba399760891b60448201526064015b60405180910390fd5b816000036106dd57506000610753565b620f423f1963ffffffff84160161070a57836106f98387612df2565b6107039190612e1f565b9050610753565b600080806107188786612e33565b9050610729818888620f4240611119565b9093509150600060ff831661073e858b612df2565b901c905061074c8982612ddf565b9450505050505b949350505050565b60003361058181858561076e8383610d2c565b6107789190612e33565b610dd0565b600061078882611299565b33600090815261011f60205260409020549091506107a7908290612ddf565b33600090815261011f6020526040902055610120546107c7908290612ddf565b61012055610121546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f9190612e46565b505050565b600054610100900460ff16158080156108745750600054600160ff909116105b8061088e5750303b15801561088e575060005460ff166001145b6108f15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106c4565b6000805460ff191660011790558015610914576000805461ff0019166101001790555b61091d836113a8565b61011e8054640100000000600160c01b0319166401000000006001600160a01b03851602179055801561084f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6000808511801561099f5750600084115b80156109b1575060008363ffffffff16115b80156109c65750620f424063ffffffff841611155b80156109d25750848211155b610a105760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21034b7383aba399760891b60448201526064016106c4565b81600003610a2057506000610753565b848203610a2e575082610753565b620f423f1963ffffffff841601610a4a57846106f98386612df2565b60008080610a588589612ddf565b9050610a698882620f424089611119565b90935091506000610a7a8489612df2565b905060ff831688901b84610a8e8284612ddf565b610a989190612e1f565b9a9950505050505050505050565b609d8054610ab390612d76565b80601f0160208091040260200160405190810160405280929190818152602001828054610adf90612d76565b8015610b2c5780601f10610b0157610100808354040283529160200191610b2c565b820191906000526020600020905b815481529060010190602001808311610b0f57829003601f168201915b505050505081565b610b3c6113d8565b610b466000611432565b565b60006104db610b55610d21565b6101205461011e5463ffffffff168561098e565b6060609c80546104f090612d76565b610b823382611484565b604080513381526020810183905260008183015290517f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f9181900360600190a150565b33600090815261011f6020526040902054610be1908290612e33565b33600081815261011f60209081526040808320949094556101215484516323b872dd60e01b815260048101949094523060248501526044840186905293516001600160a01b03909416936323b872dd936064808201949183900301908290875af1158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c779190612e46565b50610c81816115b8565b508061012054610c919190612e33565b6101205550565b60003381610ca68286610d2c565b905083811015610d065760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106c4565b6106478286868403610dd0565b600033610581818585610f6e565b6000610629609a5490565b6001600160a01b03918216600090815260996020908152604080832093909416825291909152205490565b610d5f6113d8565b6001600160a01b038116610dc45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106c4565b610dcd81611432565b50565b6001600160a01b038316610e325760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106c4565b6001600160a01b038216610e935760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106c4565b6001600160a01b0383811660008181526099602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610f008484610d2c565b90506000198114610f685781811015610f5b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106c4565b610f688484848403610dd0565b50505050565b6001600160a01b038316610fd25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106c4565b6001600160a01b0382166110345760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106c4565b6001600160a01b038316600090815260986020526040902054818110156110ac5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106c4565b6001600160a01b0380851660008181526098602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061110c9086815260200190565b60405180910390a3610f68565b600080600160811b861061116f5760405162461bcd60e51b815260206004820152601860248201527f626173654e2065786365656473206d61782076616c75652e000000000000000060448201526064016106c4565b848610156111bf5760405162461bcd60e51b815260206004820152601c60248201527f4261736573203c203120617265206e6f7420737570706f727465642e0000000060448201526064016106c4565b600080866111d16001607f1b8a612df2565b6111db9190612e1f565b905070015bf0a8b1457695355fb8ac404e7a79e3811015611206576111ff8161165e565b9150611212565b61120f81611bd7565b91505b60008563ffffffff168763ffffffff168461122d9190612df2565b6112379190612e1f565b9050600160831b81101561125c5761124e81611cc6565b607f94509450505050611290565b6000611267826122f1565b905061128361127782607f612e68565b60ff1683901c826123b6565b9550935061129092505050565b94509492505050565b60008082116112ea5760405162461bcd60e51b815260206004820152601860248201527f416d6f756e74206d757374206265206e6f6e2d7a65726f2e000000000000000060448201526064016106c4565b336000908152609860205260409020548211156113495760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e7320746f206275726e2e0000000060448201526064016106c4565b600061135483610b48565b90506113603384611484565b60408051338152602081018590529081018290527f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f906060015b60405180910390a192915050565b600054610100900460ff166113cf5760405162461bcd60e51b81526004016106c490612e81565b610dcd81612a1d565b6097546001600160a01b03163314610b465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106c4565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166114e45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106c4565b6001600160a01b038216600090815260986020526040902054818110156115585760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106c4565b6001600160a01b03831660008181526098602090815260408083208686039055609a80548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60008082116116095760405162461bcd60e51b815260206004820152601960248201527f4465706f736974206d757374206265206e6f6e2d7a65726f2e0000000000000060448201526064016106c4565b60006116148361058b565b90506116203382612a66565b60408051338152602081018390529081018490527f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff9060600161139a565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd886106116b7576116896001607e1b85612e33565b93506fd3094c70f034de4b96ff7d5b6f99fcd86116aa6001607f1b88612df2565b6116b49190612e1f565b95505b6fa45af1e1f40c333b3de1db4dd55f29a7861061170a576116dc6001607d1b85612e33565b93506fa45af1e1f40c333b3de1db4dd55f29a76116fd6001607f1b88612df2565b6117079190612e1f565b95505b6f910b022db7ae67ce76b441c27035c6a1861061175d5761172f6001607c1b85612e33565b93506f910b022db7ae67ce76b441c27035c6a16117506001607f1b88612df2565b61175a9190612e1f565b95505b6f88415abbe9a76bead8d00cf112e4d4a886106117b0576117826001607b1b85612e33565b93506f88415abbe9a76bead8d00cf112e4d4a86117a36001607f1b88612df2565b6117ad9190612e1f565b95505b6f84102b00893f64c705e841d5d4064bd38610611803576117d56001607a1b85612e33565b93506f84102b00893f64c705e841d5d4064bd36117f66001607f1b88612df2565b6118009190612e1f565b95505b6f8204055aaef1c8bd5c3259f4822735a2861061185657611828600160791b85612e33565b93506f8204055aaef1c8bd5c3259f4822735a26118496001607f1b88612df2565b6118539190612e1f565b95505b6f810100ab00222d861931c15e39b44e9986106118a95761187b600160781b85612e33565b93506f810100ab00222d861931c15e39b44e9961189c6001607f1b88612df2565b6118a69190612e1f565b95505b6f808040155aabbbe9451521693554f73386106118fc576118ce600160771b85612e33565b93506f808040155aabbbe9451521693554f7336118ef6001607f1b88612df2565b6118f99190612e1f565b95505b61190a6001607f1b87612ddf565b92508291506001607f1b61191e8380612df2565b6119289190612e1f565b9050600160801b6119398482612ddf565b6119439084612df2565b61194d9190612e1f565b6119579085612e33565b93506001607f1b6119688284612df2565b6119729190612e1f565b9150600160811b611993846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa612ddf565b61199d9084612df2565b6119a79190612e1f565b6119b19085612e33565b93506001607f1b6119c28284612df2565b6119cc9190612e1f565b9150600360801b6119ed846f99999999999999999999999999999999612ddf565b6119f79084612df2565b611a019190612e1f565b611a0b9085612e33565b93506001607f1b611a1c8284612df2565b611a269190612e1f565b9150600160821b611a47846f92492492492492492492492492492492612ddf565b611a519084612df2565b611a5b9190612e1f565b611a659085612e33565b93506001607f1b611a768284612df2565b611a809190612e1f565b9150600560801b611aa1846f8e38e38e38e38e38e38e38e38e38e38e612ddf565b611aab9084612df2565b611ab59190612e1f565b611abf9085612e33565b93506001607f1b611ad08284612df2565b611ada9190612e1f565b9150600360811b611afb846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b612ddf565b611b059084612df2565b611b0f9190612e1f565b611b199085612e33565b93506001607f1b611b2a8284612df2565b611b349190612e1f565b9150600760801b611b55846f89d89d89d89d89d89d89d89d89d89d89612ddf565b611b5f9084612df2565b611b699190612e1f565b611b739085612e33565b93506001607f1b611b848284612df2565b611b8e9190612e1f565b9150600160831b611baf846f88888888888888888888888888888888612ddf565b611bb99084612df2565b611bc39190612e1f565b611bcd9085612e33565b9695505050505050565b60008082600160801b8110611c1c576000611bfe611bf96001607f1b84612e1f565b612b27565b60ff811692831c92909150611c18906001607f1b90612df2565b9250505b6001607f1b811115611c9157607f5b60ff811615611c8f576001607f1b611c438380612df2565b611c4d9190612e1f565b9150600160801b8210611c7f57600191821c91611c6a9082612e68565b60ff166001901b83611c7c9190612e33565b92505b611c8881612ecc565b9050611c2b565b505b6f05b9de1d10bf4103d647b0955897ba80611cbc6f03f80fe03f80fe03f80fe03f80fe03f884612df2565b6107539190612e1f565b6000808080611cd96001607c1b86612ee9565b91508190506001607f1b611ced8280612df2565b611cf79190612e1f565b9050611d0b816710e1b3be415a0000612df2565b611d159084612e33565b92506001607f1b611d268383612df2565b611d309190612e1f565b9050611d44816705a0913f6b1e0000612df2565b611d4e9084612e33565b92506001607f1b611d5f8383612df2565b611d699190612e1f565b9050611d7d81670168244fdac78000612df2565b611d879084612e33565b92506001607f1b611d988383612df2565b611da29190612e1f565b9050611db581664807432bc18000612df2565b611dbf9084612e33565b92506001607f1b611dd08383612df2565b611dda9190612e1f565b9050611ded81660c0135dca04000612df2565b611df79084612e33565b92506001607f1b611e088383612df2565b611e129190612e1f565b9050611e25816601b707b1cdc000612df2565b611e2f9084612e33565b92506001607f1b611e408383612df2565b611e4a9190612e1f565b9050611e5c816536e0f639b800612df2565b611e669084612e33565b92506001607f1b611e778383612df2565b611e819190612e1f565b9050611e9381650618fee9f800612df2565b611e9d9084612e33565b92506001607f1b611eae8383612df2565b611eb89190612e1f565b9050611ec981649c197dcc00612df2565b611ed39084612e33565b92506001607f1b611ee48383612df2565b611eee9190612e1f565b9050611eff81640e30dce400612df2565b611f099084612e33565b92506001607f1b611f1a8383612df2565b611f249190612e1f565b9050611f358164012ebd1300612df2565b611f3f9084612e33565b92506001607f1b611f508383612df2565b611f5a9190612e1f565b9050611f6a816317499f00612df2565b611f749084612e33565b92506001607f1b611f858383612df2565b611f8f9190612e1f565b9050611f9f816301a9d480612df2565b611fa99084612e33565b92506001607f1b611fba8383612df2565b611fc49190612e1f565b9050611fd381621c6380612df2565b611fdd9084612e33565b92506001607f1b611fee8383612df2565b611ff89190612e1f565b9050612007816201c638612df2565b6120119084612e33565b92506001607f1b6120228383612df2565b61202c9190612e1f565b905061203a81611ab8612df2565b6120449084612e33565b92506001607f1b6120558383612df2565b61205f9190612e1f565b905061206d8161017c612df2565b6120779084612e33565b92506001607f1b6120888383612df2565b6120929190612e1f565b905061209f816014612df2565b6120a99084612e33565b92506001607f1b6120ba8383612df2565b6120c49190612e1f565b90506120d1816001612df2565b6120db9084612e33565b92506001607f1b826120f56721c3677c82b4000086612e1f565b6120ff9190612e33565b6121099190612e33565b92506001607c1b8516156121515770018ebef9eac820ae8682b9793ac6d1e776612144847001c3d6a24ed82218787d624d3e5eba95f9612df2565b61214e9190612e1f565b92505b6001607d1b851615612197577001368b2fc6f9609fe7aceb46aa619baed461218a8470018ebef9eac820ae8682b9793ac6d1e778612df2565b6121949190612e1f565b92505b6001607e1b8516156121dc576fbc5ab1b16779be3575bd8f0520a9f21f6121cf847001368b2fc6f9609fe7aceb46aa619baed5612df2565b6121d99190612e1f565b92505b6001607f1b851615612220576f454aaa8efe072e7f6ddbab84b40a55c9612213846fbc5ab1b16779be3575bd8f0520a9f21e612df2565b61221d9190612e1f565b92505b600160801b851615612264576f0960aadc109e7a3bf4578099615711ea612257846f454aaa8efe072e7f6ddbab84b40a55c5612df2565b6122619190612e1f565b92505b600160811b8516156122a7576e2bf84208204f5977f9a8cf01fdce3d61229a846f0960aadc109e7a3bf4578099615711d7612df2565b6122a49190612e1f565b92505b600160821b8516156122e8576d03c6ab775dd0b95b4cbee7e65d116122db846e2bf84208204f5977f9a8cf01fdc307612df2565b6122e59190612e1f565b92505b50909392505050565b60006020607f5b60ff8116612307836001612efd565b60ff16101561235a576000600261231e8385612efd565b6123289190612f16565b905084609e8260ff166080811061234157612341612f38565b01541061235057809250612354565b8091505b506122f8565b83609e8260ff166080811061237157612371612f38565b01541061237f579392505050565b83609e8360ff166080811061239657612396612f38565b0154106123a4575092915050565b6123ac612f4e565b5060009392505050565b6000828160ff84166123c88380612df2565b901c91506123e6826f03442c4e6074a82f1797f72ac0000000612df2565b6123f09082612e33565b905060ff84166124008684612df2565b901c915061241e826f0116b96f757c380fb287fd0e40000000612df2565b6124289082612e33565b905060ff84166124388684612df2565b901c9150612455826e45ae5bdd5f0e03eca1ff4390000000612df2565b61245f9082612e33565b905060ff841661246f8684612df2565b901c915061248c826e0defabf91302cd95b9ffda50000000612df2565b6124969082612e33565b905060ff84166124a68684612df2565b901c91506124c3826e02529ca9832b22439efff9b8000000612df2565b6124cd9082612e33565b905060ff84166124dd8684612df2565b901c91506124f9826d54f1cf12bd04e516b6da88000000612df2565b6125039082612e33565b905060ff84166125138684612df2565b901c915061252f826d0a9e39e257a09ca2d6db51000000612df2565b6125399082612e33565b905060ff84166125498684612df2565b901c9150612565826d012e066e7b839fa050c309000000612df2565b61256f9082612e33565b905060ff841661257f8684612df2565b901c915061259a826c1e33d7d926c329a1ad1a800000612df2565b6125a49082612e33565b905060ff84166125b48684612df2565b901c91506125cf826c02bee513bdb4a6b19b5f800000612df2565b6125d99082612e33565b905060ff84166125e98684612df2565b901c9150612603826b3a9316fa79b88eccf2a00000612df2565b61260d9082612e33565b905060ff841661261d8684612df2565b901c9150612637826b048177ebe1fa812375200000612df2565b6126419082612e33565b905060ff84166126518684612df2565b901c915061266a826a5263fe90242dcbacf00000612df2565b6126749082612e33565b905060ff84166126848684612df2565b901c915061269d826a057e22099c030d94100000612df2565b6126a79082612e33565b905060ff84166126b78684612df2565b901c91506126cf826957e22099c030d9410000612df2565b6126d99082612e33565b905060ff84166126e98684612df2565b901c91506127018269052b6b54569976310000612df2565b61270b9082612e33565b905060ff841661271b8684612df2565b901c915061273282684985f67696bf748000612df2565b61273c9082612e33565b905060ff841661274c8684612df2565b901c9150612763826803dea12ea99e498000612df2565b61276d9082612e33565b905060ff841661277d8684612df2565b901c9150612793826731880f2214b6e000612df2565b61279d9082612e33565b905060ff84166127ad8684612df2565b901c91506127c38267025bcff56eb36000612df2565b6127cd9082612e33565b905060ff84166127dd8684612df2565b901c91506127f282661b722e10ab1000612df2565b6127fc9082612e33565b905060ff841661280c8684612df2565b901c9150612821826601317c70077000612df2565b61282b9082612e33565b905060ff841661283b8684612df2565b901c915061284f82650cba84aafa00612df2565b6128599082612e33565b905060ff84166128698684612df2565b901c915061287c826482573a0a00612df2565b6128869082612e33565b905060ff84166128968684612df2565b901c91506128a9826405035ad900612df2565b6128b39082612e33565b905060ff84166128c38684612df2565b901c91506128d582632f881b00612df2565b6128df9082612e33565b905060ff84166128ef8684612df2565b901c9150612901826301b29340612df2565b61290b9082612e33565b905060ff841661291b8684612df2565b901c915061292c82620efc40612df2565b6129369082612e33565b905060ff84166129468684612df2565b901c915061295682617fe0612df2565b6129609082612e33565b905060ff84166129708684612df2565b901c915061298082610420612df2565b61298a9082612e33565b905060ff841661299a8684612df2565b901c91506129a9826021612df2565b6129b39082612e33565b905060ff84166129c38684612df2565b901c91506129d2826001612df2565b6129dc9082612e33565b9050600160ff85161b85612a006f0688589cc0e9505e2f2fee558000000084612e1f565b612a0a9190612e33565b612a149190612e33565b95945050505050565b600054610100900460ff16612a445760405162461bcd60e51b81526004016106c490612e81565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216612abc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106c4565b80609a6000828254612ace9190612e33565b90915550506001600160a01b0382166000818152609860209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60008082610100811015612b5b575b6001811115612b5657600190811c90612b4f9083612efd565b9150612b36565b612b8f565b60805b60ff811615612b8d57600160ff82161b8210612b82579182179160ff81169190911c905b60011c607f16612b5e565b505b5092915050565b600060208284031215612ba857600080fd5b81356001600160e01b031981168114612bc057600080fd5b9392505050565b600060208083528351808285015260005b81811015612bf457858101830151858201604001528201612bd8565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610dcd57600080fd5b60008060408385031215612c3d57600080fd5b8235612c4881612c15565b946020939093013593505050565b600060208284031215612c6857600080fd5b5035919050565b600080600060608486031215612c8457600080fd5b8335612c8f81612c15565b92506020840135612c9f81612c15565b929592945050506040919091013590565b60008060008060808587031215612cc657600080fd5b8435935060208501359250604085013563ffffffff81168114612ce857600080fd5b9396929550929360600135925050565b6020810160038310612d1a57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215612d3357600080fd5b8235612d3e81612c15565b91506020830135612d4e81612c15565b809150509250929050565b600060208284031215612d6b57600080fd5b8135612bc081612c15565b600181811c90821680612d8a57607f821691505b602082108103612daa57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215612dc257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104db576104db612dc9565b80820281158282048414176104db576104db612dc9565b634e487b7160e01b600052601260045260246000fd5b600082612e2e57612e2e612e09565b500490565b808201808211156104db576104db612dc9565b600060208284031215612e5857600080fd5b81518015158114612bc057600080fd5b60ff82811682821603908111156104db576104db612dc9565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060ff821680612edf57612edf612dc9565b6000190192915050565b600082612ef857612ef8612e09565b500690565b60ff81811683821601908111156104db576104db612dc9565b600060ff831680612f2957612f29612e09565b8060ff84160491505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fdfea264697066735822122017bbabf3bdbb1aa3dbfd88b74c0d42356bd8c4acd6b0bd0dca745d0f70f795dc64736f6c63430008110033",
    "sourceMap": "887:2132:53:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1488:198:43;;;;;;:::i;:::-;;:::i;:::-;;;470:14:61;;463:22;445:41;;433:2;418:18;1488:198:43;;;;;;;;2158:98:27;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;:::i;:::-;;:::i;382:26:56:-;;;;;;;;;;;;1680:10:61;1668:23;;;1650:42;;1638:2;1623:18;382:26:56;1506:192:61;500:215:56;;;;;;:::i;:::-;;:::i;:::-;;;2034:25:61;;;2022:2;2007:18;500:215:56;1888:177:61;2592:124:53;;;:::i;3255:106:27:-;3342:12;;3255:106;;5203:256;;;;;;:::i;:::-;;:::i;1112:960:58:-;;;;;;:::i;:::-;;:::i;3104:91:27:-;;;3186:2;3159:36:61;;3147:2;3132:18;3104:91:27;3017:184:61;5854:234:27;;;;;;:::i;:::-;;:::i;1122:70:45:-;1181:4;;-1:-1:-1;;;;;1181:4:45;1122:70;;;-1:-1:-1;;;;;3383:32:61;;;3365:51;;3353:2;3338:18;1122:70:45;3206:216:61;1172:108:43;1253:20;1172:108;;;;;;:::i;2194:291:53:-;;;;;;:::i;:::-;;:::i;:::-;;1434:137;;;;;;:::i;:::-;;:::i;2757:1143:58:-;;;;;;:::i;:::-;;:::i;561:29:59:-;;;:::i;3419:125:27:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:27;3493:7;3519:18;;;:9;:18;;;;;;;3419:125;1824:101:18;;;:::i;721:217:56:-;;;;;;:::i;:::-;;:::i;1165:49:53:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1201:85:18;1273:6;;-1:-1:-1;;;;;1273:6:18;1201:85;;2369:102:27;;;:::i;1575:132:55:-;;;;;;:::i;:::-;;:::i;1915:273:53:-;;;;;;:::i;:::-;;:::i;2491:93::-;2570:7;;2491:93;;6575:427:27;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;706:134:55:-;;;:::i;3987:149:27:-;;;;;;:::i;:::-;;:::i;2074:198:18:-;;;;;;:::i;:::-;;:::i;1138:20:53:-;;;;;;;;-1:-1:-1;;;;;1138:20:53;;;1038:91;;1092:37;1038:91;;1488:198:43;1574:4;-1:-1:-1;;;;;;1597:41:43;;-1:-1:-1;;;1597:41:43;;:82;;-1:-1:-1;;;;;;;;;;1168:51:16;;;1642:37:43;1590:89;1488:198;-1:-1:-1;;1488:198:43:o;2158:98:27:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;2857:10:53;4581:32:27;2857:10:53;4597:7:27;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:27;;4444:197;-1:-1:-1;;;4444:197:27:o;500:215:56:-;589:4;612:96;636:18;:16;:18::i;:::-;2570:7:53;;674:12:56;;;;688:19;612:23;:96::i;2592:124:53:-;2702:7;;2662:12;;:37;;-1:-1:-1;;;2662:37:53;;2693:4;2662:37;;;3365:51:61;2639:4:53;;2702:7;-1:-1:-1;;;;;2662:12:53;;:22;;3338:18:61;;2662:37:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2655:54;;2592:124;:::o;5203:256:27:-;5300:4;2857:10:53;5356:38:27;5372:4;2857:10:53;5387:6:27;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:27;;5203:256;-1:-1:-1;;;;5203:256:27:o;1112:960:58:-;1287:7;1354:1;1344:7;:11;:34;;;;;1377:1;1359:15;:19;1344:34;:55;;;;;1398:1;1382:13;:17;;;1344:55;:93;;;;-1:-1:-1;433:7:58;1403:34;;;;;1344:93;1336:121;;;;-1:-1:-1;;;1336:121:58;;6257:2:61;1336:121:58;;;6239:21:61;6296:2;6276:18;;;6269:30;-1:-1:-1;;;6315:18:61;;;6308:45;6370:18;;1336:121:58;;;;;;;;;1516:14;1534:1;1516:19;1512:58;;-1:-1:-1;1558:1:58;1551:8;;1512:58;-1:-1:-1;;1627:34:58;;;;1623:112;;1709:15;1685:22;1693:14;1685:7;:22;:::i;:::-;1684:40;;;;:::i;:::-;1677:47;;;;1623:112;1744:14;;;1809:32;1826:15;1809:14;:32;:::i;:::-;1793:48;;1873:85;1892:5;1899:15;1916:13;433:7;1873:5;:85::i;:::-;1851:107;;-1:-1:-1;1851:107:58;-1:-1:-1;1968:22:58;1993:31;;;1994:16;1851:107;1994:7;:16;:::i;:::-;1993:31;;;-1:-1:-1;2041:24:58;2058:7;1993:31;2041:24;:::i;:::-;2034:31;;;;;;1112:960;;;;;;;:::o;5854:234:27:-;5942:4;2857:10:53;5996:64:27;2857:10:53;6012:7:27;6049:10;6021:25;2857:10:53;6012:7:27;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2194:291:53:-;2239:17;2259:24;2275:7;2259:15;:24::i;:::-;2857:10;2327:31;;;;:17;:31;;;;;;2239:44;;-1:-1:-1;2327:48:53;;2239:44;;2327:48;:::i;:::-;2857:10;2293:31;;;;:17;:31;;;;;:82;2395:7;;:24;;2406:12;;2395:24;:::i;:::-;2385:7;:34;2429:12;;-1:-1:-1;;;;;2429:12:53;:21;2857:10;2429:49;;-1:-1:-1;;;;;;2429:49:53;;;;;;;-1:-1:-1;;;;;7151:32:61;;;2429:49:53;;;7133:51:61;7200:18;;;7193:34;;;7106:18;;2429:49:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2229:256;2194:291;:::o;1434:137::-;3279:19:4;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:4;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:4;1713:19:12;:23;;;3387:66:4;;-1:-1:-1;3436:12:4;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:4;;7722:2:61;3325:201:4;;;7704:21:61;7761:2;7741:18;;;7734:30;7800:34;7780:18;;;7773:62;-1:-1:-1;;;7851:18:61;;;7844:44;7905:19;;3325:201:4;7520:410:61;3325:201:4;3536:12;:16;;-1:-1:-1;;3536:16:4;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:4;;;;;3562:65;1512:28:53::1;1535:4;1512:22;:28::i;:::-;1550:5;:14:::0;;-1:-1:-1;;;;;;1550:14:53::1;::::0;-1:-1:-1;;;;;1550:14:53;::::1;;;::::0;;3647:99:4;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:4;;;3721:14;;-1:-1:-1;3159:36:61;;3721:14:4;;3147:2:61;3132:18;3721:14:4;;;;;;;3269:483;1434:137:53;;:::o;2757:1143:58:-;2925:7;2992:1;2982:7;:11;:34;;;;;3015:1;2997:15;:19;2982:34;:55;;;;;3036:1;3020:13;:17;;;2982:55;:93;;;;-1:-1:-1;433:7:58;3041:34;;;;;2982:93;:119;;;;;3094:7;3079:11;:22;;2982:119;2974:147;;;;-1:-1:-1;;;2974:147:58;;6257:2:61;2974:147:58;;;6239:21:61;6296:2;6276:18;;;6269:30;-1:-1:-1;;;6315:18:61;;;6308:45;6370:18;;2974:147:58;6055:339:61;2974:147:58;3177:11;3192:1;3177:16;3173:55;;-1:-1:-1;3216:1:58;3209:8;;3173:55;3310:7;3295:11;:22;3291:75;;-1:-1:-1;3340:15:58;3333:22;;3291:75;-1:-1:-1;;3423:34:58;;;;3419:109;;3510:7;3481:27;3497:11;3481:15;:27;:::i;3419:109::-;3537:14;;;3602:21;3612:11;3602:7;:21;:::i;:::-;3586:37;;3655:77;3674:7;3683:5;433:7;3709:13;3655:5;:77::i;:::-;3633:99;;-1:-1:-1;3633:99:58;-1:-1:-1;3742:18:58;3763:22;3633:99;3763:15;:22;:::i;:::-;3742:43;-1:-1:-1;3816:28:58;;;;;;3886:6;3862:21;3816:28;3742:43;3862:21;:::i;:::-;3861:32;;;;:::i;:::-;3854:39;2757:1143;-1:-1:-1;;;;;;;;;;2757:1143:58:o;561:29:59:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1824:101:18:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;721:217:56:-;813:4;836:95;856:18;:16;:18::i;:::-;2570:7:53;;894:12:56;;;;908:22;836:19;:95::i;2369:102:27:-;2425:13;2457:7;2450:14;;;;;:::i;1575:132:55:-;1629:26;1635:10;1647:7;1629:5;:26::i;:::-;1670:30;;;1677:10;8344:51:61;;8426:2;8411:18;;8404:34;;;-1:-1:-1;8454:18:61;;;8447:34;1670:30:55;;;;;;;8332:2:61;1670:30:55;;;1575:132;:::o;1915:273:53:-;2857:10;1994:31;;;;:17;:31;;;;;;:41;;2028:7;;1994:41;:::i;:::-;2857:10;1960:31;;;;:17;:31;;;;;;;;:75;;;;2045:12;;:63;;-1:-1:-1;;;2045:63:53;;;;;8732:34:61;;;;2093:4:53;8782:18:61;;;8775:43;8834:18;;;8827:34;;;2045:63:53;;-1:-1:-1;;;;;2045:12:53;;;;:25;;8667:18:61;;;;;2045:63:53;;;;;;;;:12;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2118:24;2134:7;2118:15;:24::i;:::-;;2173:7;2162;;:19;;;;:::i;:::-;2152:7;:29;-1:-1:-1;1915:273:53:o;6575:427:27:-;6668:4;2857:10:53;6668:4:27;6749:25;2857:10:53;6766:7:27;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:27;;9074:2:61;6784:85:27;;;9056:21:61;9113:2;9093:18;;;9086:30;9152:34;9132:18;;;9125:62;-1:-1:-1;;;9203:18:61;;;9196:35;9248:19;;6784:85:27;8872:401:61;6784:85:27;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;2857:10:53;3873:28:27;2857:10:53;3890:2:27;3894:6;3873:9;:28::i;706:134:55:-;764:4;787:13;3342:12:27;;;3255:106;3987:149;-1:-1:-1;;;;;4102:18:27;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:18:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:18;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:18;;9480:2:61;2154:73:18::1;::::0;::::1;9462:21:61::0;9519:2;9499:18;;;9492:30;9558:34;9538:18;;;9531:62;-1:-1:-1;;;9609:18:61;;;9602:36;9655:19;;2154:73:18::1;9278:402:61::0;2154:73:18::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;10457:340:27:-;-1:-1:-1;;;;;10558:19:27;;10550:68;;;;-1:-1:-1;;;10550:68:27;;9887:2:61;10550:68:27;;;9869:21:61;9926:2;9906:18;;;9899:30;9965:34;9945:18;;;9938:62;-1:-1:-1;;;10016:18:61;;;10009:34;10060:19;;10550:68:27;9685:400:61;10550:68:27;-1:-1:-1;;;;;10636:21:27;;10628:68;;;;-1:-1:-1;;;10628:68:27;;10292:2:61;10628:68:27;;;10274:21:61;10331:2;10311:18;;;10304:30;10370:34;10350:18;;;10343:62;-1:-1:-1;;;10421:18:61;;;10414:32;10463:19;;10628:68:27;10090:398:61;10628:68:27;-1:-1:-1;;;;;10707:18:27;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;2034:25:61;;;10758:32:27;;2007:18:61;10758:32:27;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:27;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:27;;10695:2:61;11297:68:27;;;10677:21:61;10734:2;10714:18;;;10707:30;10773:31;10753:18;;;10746:59;10822:18;;11297:68:27;10493:353:61;11297:68:27;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:27;;7544:68;;;;-1:-1:-1;;;7544:68:27;;11053:2:61;7544:68:27;;;11035:21:61;11092:2;11072:18;;;11065:30;11131:34;11111:18;;;11104:62;-1:-1:-1;;;11182:18:61;;;11175:35;11227:19;;7544:68:27;10851:401:61;7544:68:27;-1:-1:-1;;;;;7630:16:27;;7622:64;;;;-1:-1:-1;;;7622:64:27;;11459:2:61;7622:64:27;;;11441:21:61;11498:2;11478:18;;;11471:30;11537:34;11517:18;;;11510:62;-1:-1:-1;;;11588:18:61;;;11581:33;11631:19;;7622:64:27;11257:399:61;7622:64:27;-1:-1:-1;;;;;7768:15:27;;7746:19;7768:15;;;:9;:15;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:27;;11863:2:61;7793:72:27;;;11845:21:61;11902:2;11882:18;;;11875:30;11941:34;11921:18;;;11914:62;-1:-1:-1;;;11992:18:61;;;11985:36;12038:19;;7793:72:27;11661:402:61;7793:72:27;-1:-1:-1;;;;;7899:15:27;;;;;;;:9;:15;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;;;;;7931:6;2034:25:61;;2022:2;2007:18;;1888:177;8163:26:27;;;;;;;;8200:37;2194:291:53;11603:892:59;11739:7;11748:5;-1:-1:-1;;;11777:6:59;:16;11769:53;;;;-1:-1:-1;;;11769:53:59;;12270:2:61;11769:53:59;;;12252:21:61;12309:2;12289:18;;;12282:30;12348:26;12328:18;;;12321:54;12392:18;;11769:53:59;12068:348:61;11769:53:59;11850:6;11840;:16;;11832:57;;;;-1:-1:-1;;;11832:57:59;;12623:2:61;11832:57:59;;;12605:21:61;12662:2;12642:18;;;12635:30;12701;12681:18;;;12674:58;12749:18;;11832:57:59;12421:352:61;11832:57:59;11900:15;;11959:6;11940:16;-1:-1:-1;;;11940:6:59;:16;:::i;:::-;:25;;;;:::i;:::-;11925:40;;1584:35;11979:4;:22;11975:136;;;12027:16;12038:4;12027:10;:16::i;:::-;12017:26;;11975:136;;;12084:16;12095:4;12084:10;:16::i;:::-;12074:26;;11975:136;12121:23;12165:5;12147:23;;12157:5;12147:15;;:7;:15;;;;:::i;:::-;:23;;;;:::i;:::-;12121:49;;-1:-1:-1;;;12184:15:59;:33;12180:309;;;12241:27;12252:15;12241:10;:27::i;:::-;771:3;12233:51;;;;;;;;;12180:309;12315:15;12333:42;12359:15;12333:25;:42::i;:::-;12315:60;-1:-1:-1;12397:69:59;12428:25;12315:60;771:3;12428:25;:::i;:::-;12408:46;;:15;:46;;12456:9;12397:10;:69::i;:::-;12389:89;-1:-1:-1;12468:9:59;-1:-1:-1;12389:89:59;;-1:-1:-1;;;12389:89:59;11603:892;;;;;;;;:::o;1174:395:55:-;1231:4;1265:1;1255:7;:11;1247:48;;;;-1:-1:-1;;;1247:48:55;;13136:2:61;1247:48:55;;;13118:21:61;13175:2;13155:18;;;13148:30;13214:26;13194:18;;;13187:54;13258:18;;1247:48:55;12934:348:61;1247:48:55;1323:10;3493:7:27;3519:18;;;:9;:18;;;;;;1338:7:55;-1:-1:-1;1313:32:55;1305:73;;;;-1:-1:-1;;;1305:73:55;;13489:2:61;1305:73:55;;;13471:21:61;13528:2;13508:18;;;13501:30;13567;13547:18;;;13540:58;13615:18;;1305:73:55;13287:352:61;1305:73:55;1389:17;1409:32;1433:7;1409:23;:32::i;:::-;1389:52;;1451:26;1457:10;1469:7;1451:5;:26::i;:::-;1492:41;;;1499:10;8344:51:61;;8426:2;8411:18;;8404:34;;;8454:18;;;8447:34;;;1492:41:55;;8332:2:61;8317:18;1492:41:55;;;;;;;;1550:12;1174:395;-1:-1:-1;;1174:395:55:o;1005:133:43:-;5374:13:4;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:4;;;;;;;:::i;:::-;1092:39:43::1;1126:4;1092:33;:39::i;1359:130:18:-:0;1273:6;;-1:-1:-1;;;;;1273:6:18;2857:10:53;1422:23:18;1414:68;;;;-1:-1:-1;;;1414:68:18;;14608:2:61;1414:68:18;;;14590:21:61;;;14627:18;;;14620:30;14686:34;14666:18;;;14659:62;14738:18;;1414:68:18;14406:356:61;2426:187:18;2518:6;;;-1:-1:-1;;;;;2534:17:18;;;-1:-1:-1;;;;;;2534:17:18;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;9375:659:27:-;-1:-1:-1;;;;;9458:21:27;;9450:67;;;;-1:-1:-1;;;9450:67:27;;14969:2:61;9450:67:27;;;14951:21:61;15008:2;14988:18;;;14981:30;15047:34;15027:18;;;15020:62;-1:-1:-1;;;15098:18:61;;;15091:31;15139:19;;9450:67:27;14767:397:61;9450:67:27;-1:-1:-1;;;;;9613:18:27;;9588:22;9613:18;;;:9;:18;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:27;;15371:2:61;9641:71:27;;;15353:21:61;15410:2;15390:18;;;15383:30;15449:34;15429:18;;;15422:62;-1:-1:-1;;;15500:18:61;;;15493:32;15542:19;;9641:71:27;15169:398:61;9641:71:27;-1:-1:-1;;;;;9746:18:27;;;;;;:9;:18;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;2034:25:61;;;9746:18:27;;;9931:37;;2007:18:61;9931:37:27;;;;;;;2429:49:53;2229:256;2194:291;:::o;846:322:55:-;904:4;939:1;928:8;:12;920:50;;;;-1:-1:-1;;;920:50:55;;15774:2:61;920:50:55;;;15756:21:61;15813:2;15793:18;;;15786:30;15852:27;15832:18;;;15825:55;15897:18;;920:50:55;15572:349:61;920:50:55;981:17;1001:33;1025:8;1001:23;:33::i;:::-;981:53;;1044:31;1050:10;1062:12;1044:5;:31::i;:::-;1090:42;;;1097:10;8344:51:61;;8426:2;8411:18;;8404:34;;;8454:18;;;8447:34;;;1090:42:55;;8332:2:61;8317:18;1090:42:55;8134:353:61;19588:2397:59;19642:7;;;;;19754:34;19749:39;;19745:143;;19791:41;-1:-1:-1;;;19791:41:59;;:::i;:::-;;-1:-1:-1;19852:34:59;19838:11;-1:-1:-1;;;19838:1:59;:11;:::i;:::-;:48;;;;:::i;:::-;19834:52;;19745:143;19906:34;19901:1;:39;19897:143;;19943:41;-1:-1:-1;;;19943:41:59;;:::i;:::-;;-1:-1:-1;20004:34:59;19990:11;-1:-1:-1;;;19990:1:59;:11;:::i;:::-;:48;;;;:::i;:::-;19986:52;;19897:143;20058:34;20053:1;:39;20049:143;;20095:41;-1:-1:-1;;;20095:41:59;;:::i;:::-;;-1:-1:-1;20156:34:59;20142:11;-1:-1:-1;;;20142:1:59;:11;:::i;:::-;:48;;;;:::i;:::-;20138:52;;20049:143;20210:34;20205:1;:39;20201:143;;20247:41;-1:-1:-1;;;20247:41:59;;:::i;:::-;;-1:-1:-1;20308:34:59;20294:11;-1:-1:-1;;;20294:1:59;:11;:::i;:::-;:48;;;;:::i;:::-;20290:52;;20201:143;20362:34;20357:1;:39;20353:143;;20399:41;-1:-1:-1;;;20399:41:59;;:::i;:::-;;-1:-1:-1;20460:34:59;20446:11;-1:-1:-1;;;20446:1:59;:11;:::i;:::-;:48;;;;:::i;:::-;20442:52;;20353:143;20514:34;20509:1;:39;20505:143;;20551:41;-1:-1:-1;;;20551:41:59;;:::i;:::-;;-1:-1:-1;20612:34:59;20598:11;-1:-1:-1;;;20598:1:59;:11;:::i;:::-;:48;;;;:::i;:::-;20594:52;;20505:143;20666:34;20661:1;:39;20657:143;;20703:41;-1:-1:-1;;;20703:41:59;;:::i;:::-;;-1:-1:-1;20764:34:59;20750:11;-1:-1:-1;;;20750:1:59;:11;:::i;:::-;:48;;;;:::i;:::-;20746:52;;20657:143;20818:34;20813:1;:39;20809:143;;20855:41;-1:-1:-1;;;20855:41:59;;:::i;:::-;;-1:-1:-1;20916:34:59;20902:11;-1:-1:-1;;;20902:1:59;:11;:::i;:::-;:48;;;;:::i;:::-;20898:52;;20809:143;20970:11;-1:-1:-1;;;20970:1:59;:11;:::i;:::-;20966:15;-1:-1:-1;20966:15:59;;-1:-1:-1;;;;20995:5:59;20966:15;;20995:5;:::i;:::-;:15;;;;:::i;:::-;20991:19;-1:-1:-1;;;;21032:39:59;21070:1;21075:35;21032:39;:::i;:::-;21027:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21020:90;;;;:::i;:::-;;-1:-1:-1;;;;21116:5:59;21120:1;21116;:5;:::i;:::-;:15;;;;:::i;:::-;21112:19;-1:-1:-1;;;;21153:39:59;21191:1;21153:35;:39;:::i;:::-;21148:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21141:90;;;;:::i;:::-;;-1:-1:-1;;;;21237:5:59;21241:1;21237;:5;:::i;:::-;:15;;;;:::i;:::-;21233:19;-1:-1:-1;;;;21274:39:59;21312:1;21274:35;:39;:::i;:::-;21269:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21262:90;;;;:::i;:::-;;-1:-1:-1;;;;21358:5:59;21362:1;21358;:5;:::i;:::-;:15;;;;:::i;:::-;21354:19;-1:-1:-1;;;;21395:39:59;21433:1;21395:35;:39;:::i;:::-;21390:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21383:90;;;;:::i;:::-;;-1:-1:-1;;;;21479:5:59;21483:1;21479;:5;:::i;:::-;:15;;;;:::i;:::-;21475:19;-1:-1:-1;;;;21516:39:59;21554:1;21516:35;:39;:::i;:::-;21511:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21504:90;;;;:::i;:::-;;-1:-1:-1;;;;21600:5:59;21604:1;21600;:5;:::i;:::-;:15;;;;:::i;:::-;21596:19;-1:-1:-1;;;;21637:39:59;21675:1;21637:35;:39;:::i;:::-;21632:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21625:90;;;;:::i;:::-;;-1:-1:-1;;;;21721:5:59;21725:1;21721;:5;:::i;:::-;:15;;;;:::i;:::-;21717:19;-1:-1:-1;;;;21758:39:59;21796:1;21758:35;:39;:::i;:::-;21753:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21746:90;;;;:::i;:::-;;-1:-1:-1;;;;21842:5:59;21846:1;21842;:5;:::i;:::-;:15;;;;:::i;:::-;21838:19;-1:-1:-1;;;;21879:39:59;21917:1;21879:35;:39;:::i;:::-;21874:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21867:90;;;;:::i;:::-;;19588:2397;-1:-1:-1;;;;;;19588:2397:59:o;12660:826::-;12715:7;;12771:2;-1:-1:-1;;;12879:12:59;;12875:152;;12907:11;12921:22;12931:11;-1:-1:-1;;;12931:1:59;:11;:::i;:::-;12921:9;:22::i;:::-;12957:11;;;;;;;12907:36;;-1:-1:-1;13001:15:59;;-1:-1:-1;;;1008:35:59;13001:15;:::i;:::-;12995:21;;12893:134;12875:152;-1:-1:-1;;;13132:1:59;:11;13128:297;;;771:3;13159:256;13189:5;;;;13159:256;;-1:-1:-1;;;13224:5:59;13228:1;;13224:5;:::i;:::-;13223:17;;;;:::i;:::-;13219:21;;-1:-1:-1;;;13279:1:59;:12;13275:126;;13321:1;13315:7;;;;13376:5;;:1;:5;:::i;:::-;13368:14;;628:1;13368:14;;13361:21;;;;;:::i;:::-;;;13275:126;13196:3;;;:::i;:::-;;;13159:256;;;;13128:297;1397:33;13442:19;1315:33;13442:3;:19;:::i;:::-;:37;;;;:::i;22156:2980::-;22210:7;;;;22302:38;-1:-1:-1;;;22302:1:59;:38;:::i;:::-;22298:42;-1:-1:-1;22298:42:59;;-1:-1:-1;;;;22354:5:59;22298:42;;22354:5;:::i;:::-;:15;;;;:::i;:::-;22350:19;-1:-1:-1;22378:22:59;22350:19;22382:18;22378:22;:::i;:::-;22371:29;;;;:::i;:::-;;-1:-1:-1;;;;22440:5:59;22444:1;22440;:5;:::i;:::-;:15;;;;:::i;:::-;22436:19;-1:-1:-1;22464:22:59;22436:19;22468:18;22464:22;:::i;:::-;22457:29;;;;:::i;:::-;;-1:-1:-1;;;;22526:5:59;22530:1;22526;:5;:::i;:::-;:15;;;;:::i;:::-;22522:19;-1:-1:-1;22550:22:59;22522:19;22554:18;22550:22;:::i;:::-;22543:29;;;;:::i;:::-;;-1:-1:-1;;;;22612:5:59;22616:1;22612;:5;:::i;:::-;:15;;;;:::i;:::-;22608:19;-1:-1:-1;22636:22:59;22608:19;22640:18;22636:22;:::i;:::-;22629:29;;;;:::i;:::-;;-1:-1:-1;;;;22698:5:59;22702:1;22698;:5;:::i;:::-;:15;;;;:::i;:::-;22694:19;-1:-1:-1;22722:22:59;22694:19;22726:18;22722:22;:::i;:::-;22715:29;;;;:::i;:::-;;-1:-1:-1;;;;22784:5:59;22788:1;22784;:5;:::i;:::-;:15;;;;:::i;:::-;22780:19;-1:-1:-1;22808:22:59;22780:19;22812:18;22808:22;:::i;:::-;22801:29;;;;:::i;:::-;;-1:-1:-1;;;;22870:5:59;22874:1;22870;:5;:::i;:::-;:15;;;;:::i;:::-;22866:19;-1:-1:-1;22894:22:59;22866:19;22898:18;22894:22;:::i;:::-;22887:29;;;;:::i;:::-;;-1:-1:-1;;;;22956:5:59;22960:1;22956;:5;:::i;:::-;:15;;;;:::i;:::-;22952:19;-1:-1:-1;22980:22:59;22952:19;22984:18;22980:22;:::i;:::-;22973:29;;;;:::i;:::-;;-1:-1:-1;;;;23042:5:59;23046:1;23042;:5;:::i;:::-;:15;;;;:::i;:::-;23038:19;-1:-1:-1;23066:22:59;23038:19;23070:18;23066:22;:::i;:::-;23059:29;;;;:::i;:::-;;-1:-1:-1;;;;23128:5:59;23132:1;23128;:5;:::i;:::-;:15;;;;:::i;:::-;23124:19;-1:-1:-1;23152:22:59;23124:19;23156:18;23152:22;:::i;:::-;23145:29;;;;:::i;:::-;;-1:-1:-1;;;;23214:5:59;23218:1;23214;:5;:::i;:::-;:15;;;;:::i;:::-;23210:19;-1:-1:-1;23238:22:59;23210:19;23242:18;23238:22;:::i;:::-;23231:29;;;;:::i;:::-;;-1:-1:-1;;;;23300:5:59;23304:1;23300;:5;:::i;:::-;:15;;;;:::i;:::-;23296:19;-1:-1:-1;23324:22:59;23296:19;23328:18;23324:22;:::i;:::-;23317:29;;;;:::i;:::-;;-1:-1:-1;;;;23386:5:59;23390:1;23386;:5;:::i;:::-;:15;;;;:::i;:::-;23382:19;-1:-1:-1;23410:22:59;23382:19;23414:18;23410:22;:::i;:::-;23403:29;;;;:::i;:::-;;-1:-1:-1;;;;23472:5:59;23476:1;23472;:5;:::i;:::-;:15;;;;:::i;:::-;23468:19;-1:-1:-1;23496:22:59;23468:19;23500:18;23496:22;:::i;:::-;23489:29;;;;:::i;:::-;;-1:-1:-1;;;;23558:5:59;23562:1;23558;:5;:::i;:::-;:15;;;;:::i;:::-;23554:19;-1:-1:-1;23582:22:59;23554:19;23586:18;23582:22;:::i;:::-;23575:29;;;;:::i;:::-;;-1:-1:-1;;;;23644:5:59;23648:1;23644;:5;:::i;:::-;:15;;;;:::i;:::-;23640:19;-1:-1:-1;23668:22:59;23640:19;23672:18;23668:22;:::i;:::-;23661:29;;;;:::i;:::-;;-1:-1:-1;;;;23730:5:59;23734:1;23730;:5;:::i;:::-;:15;;;;:::i;:::-;23726:19;-1:-1:-1;23754:22:59;23726:19;23758:18;23754:22;:::i;:::-;23747:29;;;;:::i;:::-;;-1:-1:-1;;;;23816:5:59;23820:1;23816;:5;:::i;:::-;:15;;;;:::i;:::-;23812:19;-1:-1:-1;23840:22:59;23812:19;23844:18;23840:22;:::i;:::-;23833:29;;;;:::i;:::-;;-1:-1:-1;;;;23902:5:59;23906:1;23902;:5;:::i;:::-;:15;;;;:::i;:::-;23898:19;-1:-1:-1;23926:22:59;23898:19;23930:18;23926:22;:::i;:::-;23919:29;;;;:::i;:::-;;-1:-1:-1;;;;24017:1:59;23990:24;23996:18;23919:29;23990:24;:::i;:::-;:28;;;;:::i;:::-;:38;;;;:::i;:::-;23984:44;-1:-1:-1;;;;24094:39:59;;24093:46;24089:137;;24191:35;24147:41;:3;24153:35;24147:41;:::i;:::-;:79;;;;:::i;:::-;24141:85;;24089:137;-1:-1:-1;;;24241:39:59;;24240:46;24236:137;;24338:35;24294:41;:3;24300:35;24294:41;:::i;:::-;:79;;;;:::i;:::-;24288:85;;24236:137;-1:-1:-1;;;24388:39:59;;24387:46;24383:137;;24485:35;24441:41;:3;24447:35;24441:41;:::i;:::-;:79;;;;:::i;:::-;24435:85;;24383:137;-1:-1:-1;;;24535:39:59;;24534:46;24530:137;;24632:35;24588:41;:3;24594:35;24588:41;:::i;:::-;:79;;;;:::i;:::-;24582:85;;24530:137;-1:-1:-1;;;24682:39:59;;24681:46;24677:137;;24779:35;24735:41;:3;24741:35;24735:41;:::i;:::-;:79;;;;:::i;:::-;24729:85;;24677:137;-1:-1:-1;;;24829:39:59;;24828:46;24824:137;;24926:35;24882:41;:3;24888:35;24882:41;:::i;:::-;:79;;;;:::i;:::-;24876:85;;24824:137;-1:-1:-1;;;24976:39:59;;24975:46;24971:137;;25073:35;25029:41;:3;25035:35;25029:41;:::i;:::-;:79;;;;:::i;:::-;25023:85;;24971:137;-1:-1:-1;25126:3:59;;22156:2980;-1:-1:-1;;;22156:2980:59:o;14494:508::-;14568:5;724:2;771:3;14658:179;14665:11;;;:6;:2;14670:1;14665:6;:::i;:::-;:11;;;14658:179;;;14692:9;14716:1;14705:7;14710:2;14705;:7;:::i;:::-;14704:13;;;;:::i;:::-;14692:25;;14755:2;14735:11;14747:3;14735:16;;;;;;;;;:::i;:::-;;;:22;14731:95;;14780:3;14775:8;;14731:95;;;14823:3;14818:8;;14731:95;14678:159;14658:179;;;14870:2;14851:11;14863:2;14851:15;;;;;;;;;:::i;:::-;;;:21;14847:48;;14893:2;14494:508;-1:-1:-1;;;14494:508:59:o;14847:48::-;14928:2;14909:11;14921:2;14909:15;;;;;;;;;:::i;:::-;;;:21;14905:48;;-1:-1:-1;14951:2:59;14494:508;-1:-1:-1;;14494:508:59:o;14905:48::-;14964:13;;:::i;:::-;-1:-1:-1;14994:1:59;;14494:508;-1:-1:-1;;;14494:508:59:o;15586:3826::-;15659:7;15691:2;15659:7;15734:23;;;15735:7;15691:2;;15735:7;:::i;:::-;15734:23;;;-1:-1:-1;15766:38:59;15734:23;15771:33;15766:38;:::i;:::-;15759:45;;;;:::i;:::-;;-1:-1:-1;15845:23:59;;;15846:7;15851:2;15846;:7;:::i;:::-;15845:23;;;-1:-1:-1;15877:38:59;15845:23;15882:33;15877:38;:::i;:::-;15870:45;;;;:::i;:::-;;-1:-1:-1;15956:23:59;;;15957:7;15962:2;15957;:7;:::i;:::-;15956:23;;;-1:-1:-1;15988:38:59;15956:23;15993:33;15988:38;:::i;:::-;15981:45;;;;:::i;:::-;;-1:-1:-1;16067:23:59;;;16068:7;16073:2;16068;:7;:::i;:::-;16067:23;;;-1:-1:-1;16099:38:59;16067:23;16104:33;16099:38;:::i;:::-;16092:45;;;;:::i;:::-;;-1:-1:-1;16178:23:59;;;16179:7;16184:2;16179;:7;:::i;:::-;16178:23;;;-1:-1:-1;16210:38:59;16178:23;16215:33;16210:38;:::i;:::-;16203:45;;;;:::i;:::-;;-1:-1:-1;16289:23:59;;;16290:7;16295:2;16290;:7;:::i;:::-;16289:23;;;-1:-1:-1;16321:38:59;16289:23;16326:33;16321:38;:::i;:::-;16314:45;;;;:::i;:::-;;-1:-1:-1;16400:23:59;;;16401:7;16406:2;16401;:7;:::i;:::-;16400:23;;;-1:-1:-1;16432:38:59;16400:23;16437:33;16432:38;:::i;:::-;16425:45;;;;:::i;:::-;;-1:-1:-1;16511:23:59;;;16512:7;16517:2;16512;:7;:::i;:::-;16511:23;;;-1:-1:-1;16543:38:59;16511:23;16548:33;16543:38;:::i;:::-;16536:45;;;;:::i;:::-;;-1:-1:-1;16622:23:59;;;16623:7;16628:2;16623;:7;:::i;:::-;16622:23;;;-1:-1:-1;16654:38:59;16622:23;16659:33;16654:38;:::i;:::-;16647:45;;;;:::i;:::-;;-1:-1:-1;16733:23:59;;;16734:7;16739:2;16734;:7;:::i;:::-;16733:23;;;-1:-1:-1;16765:38:59;16733:23;16770:33;16765:38;:::i;:::-;16758:45;;;;:::i;:::-;;-1:-1:-1;16844:23:59;;;16845:7;16850:2;16845;:7;:::i;:::-;16844:23;;;-1:-1:-1;16876:38:59;16844:23;16881:33;16876:38;:::i;:::-;16869:45;;;;:::i;:::-;;-1:-1:-1;16955:23:59;;;16956:7;16961:2;16956;:7;:::i;:::-;16955:23;;;-1:-1:-1;16987:38:59;16955:23;16992:33;16987:38;:::i;:::-;16980:45;;;;:::i;:::-;;-1:-1:-1;17066:23:59;;;17067:7;17072:2;17067;:7;:::i;:::-;17066:23;;;-1:-1:-1;17098:38:59;17066:23;17103:33;17098:38;:::i;:::-;17091:45;;;;:::i;:::-;;-1:-1:-1;17177:23:59;;;17178:7;17183:2;17178;:7;:::i;:::-;17177:23;;;-1:-1:-1;17209:38:59;17177:23;17214:33;17209:38;:::i;:::-;17202:45;;;;:::i;:::-;;-1:-1:-1;17288:23:59;;;17289:7;17294:2;17289;:7;:::i;:::-;17288:23;;;-1:-1:-1;17320:38:59;17288:23;17325:33;17320:38;:::i;:::-;17313:45;;;;:::i;:::-;;-1:-1:-1;17399:23:59;;;17400:7;17405:2;17400;:7;:::i;:::-;17399:23;;;-1:-1:-1;17431:38:59;17399:23;17436:33;17431:38;:::i;:::-;17424:45;;;;:::i;:::-;;-1:-1:-1;17510:23:59;;;17511:7;17516:2;17511;:7;:::i;:::-;17510:23;;;-1:-1:-1;17542:38:59;17510:23;17547:33;17542:38;:::i;:::-;17535:45;;;;:::i;:::-;;-1:-1:-1;17621:23:59;;;17622:7;17627:2;17622;:7;:::i;:::-;17621:23;;;-1:-1:-1;17653:38:59;17621:23;17658:33;17653:38;:::i;:::-;17646:45;;;;:::i;:::-;;-1:-1:-1;17732:23:59;;;17733:7;17738:2;17733;:7;:::i;:::-;17732:23;;;-1:-1:-1;17764:38:59;17732:23;17769:33;17764:38;:::i;:::-;17757:45;;;;:::i;:::-;;-1:-1:-1;17843:23:59;;;17844:7;17849:2;17844;:7;:::i;:::-;17843:23;;;-1:-1:-1;17875:38:59;17843:23;17880:33;17875:38;:::i;:::-;17868:45;;;;:::i;:::-;;-1:-1:-1;17954:23:59;;;17955:7;17960:2;17955;:7;:::i;:::-;17954:23;;;-1:-1:-1;17986:38:59;17954:23;17991:33;17986:38;:::i;:::-;17979:45;;;;:::i;:::-;;-1:-1:-1;18065:23:59;;;18066:7;18071:2;18066;:7;:::i;:::-;18065:23;;;-1:-1:-1;18097:38:59;18065:23;18102:33;18097:38;:::i;:::-;18090:45;;;;:::i;:::-;;-1:-1:-1;18176:23:59;;;18177:7;18182:2;18177;:7;:::i;:::-;18176:23;;;-1:-1:-1;18208:38:59;18176:23;18213:33;18208:38;:::i;:::-;18201:45;;;;:::i;:::-;;-1:-1:-1;18287:23:59;;;18288:7;18293:2;18288;:7;:::i;:::-;18287:23;;;-1:-1:-1;18319:38:59;18287:23;18324:33;18319:38;:::i;:::-;18312:45;;;;:::i;:::-;;-1:-1:-1;18398:23:59;;;18399:7;18404:2;18399;:7;:::i;:::-;18398:23;;;-1:-1:-1;18430:38:59;18398:23;18435:33;18430:38;:::i;:::-;18423:45;;;;:::i;:::-;;-1:-1:-1;18509:23:59;;;18510:7;18515:2;18510;:7;:::i;:::-;18509:23;;;-1:-1:-1;18541:38:59;18509:23;18546:33;18541:38;:::i;:::-;18534:45;;;;:::i;:::-;;-1:-1:-1;18620:23:59;;;18621:7;18626:2;18621;:7;:::i;:::-;18620:23;;;-1:-1:-1;18652:38:59;18620:23;18657:33;18652:38;:::i;:::-;18645:45;;;;:::i;:::-;;-1:-1:-1;18731:23:59;;;18732:7;18737:2;18732;:7;:::i;:::-;18731:23;;;-1:-1:-1;18763:38:59;18731:23;18768:33;18763:38;:::i;:::-;18756:45;;;;:::i;:::-;;-1:-1:-1;18842:23:59;;;18843:7;18848:2;18843;:7;:::i;:::-;18842:23;;;-1:-1:-1;18874:38:59;18842:23;18879:33;18874:38;:::i;:::-;18867:45;;;;:::i;:::-;;-1:-1:-1;18953:23:59;;;18954:7;18959:2;18954;:7;:::i;:::-;18953:23;;;-1:-1:-1;18985:38:59;18953:23;18990:33;18985:38;:::i;:::-;18978:45;;;;:::i;:::-;;-1:-1:-1;19064:23:59;;;19065:7;19070:2;19065;:7;:::i;:::-;19064:23;;;-1:-1:-1;19096:38:59;19064:23;19101:33;19096:38;:::i;:::-;19089:45;;;;:::i;:::-;;-1:-1:-1;19175:23:59;;;19176:7;19181:2;19176;:7;:::i;:::-;19175:23;;;-1:-1:-1;19207:38:59;19175:23;19212:33;19207:38;:::i;:::-;19200:45;;;;:::i;:::-;;-1:-1:-1;628:1:59;19337:17;;;;19331:2;19289:39;19295:33;19200:45;19289:39;:::i;:::-;:44;;;;:::i;:::-;:66;;;;:::i;:::-;19282:73;15586:3826;-1:-1:-1;;;;;15586:3826:59:o;932:108:45:-;5374:13:4;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:4;;;;;;;:::i;:::-;1022:4:45::1;:11:::0;;-1:-1:-1;;;;;;1022:11:45::1;-1:-1:-1::0;;;;;1022:11:45;;;::::1;::::0;;;::::1;::::0;;932:108::o;8520:535:27:-;-1:-1:-1;;;;;8603:21:27;;8595:65;;;;-1:-1:-1;;;8595:65:27;;17015:2:61;8595:65:27;;;16997:21:61;17054:2;17034:18;;;17027:30;17093:33;17073:18;;;17066:61;17144:18;;8595:65:27;16813:355:61;8595:65:27;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:27;;;;;;:9;:18;;;;;;;;:28;;;;;;8952:37;2034:25:61;;;8952:37:27;;2007:18:61;8952:37:27;;;;;;;8520:535;;:::o;13601:532:59:-;13655:5;;13707:2;13728:3;13724:7;;13720:386;;;13783:80;13794:1;13790;:5;13783:80;;;13821:1;13815:7;;;;13840:8;;;;:::i;:::-;;;13783:80;;;13720:386;;;13944:3;13929:167;13949:5;;;;13929:167;;628:1;13993:8;;;;13987:15;;13983:99;;14055:8;;;;14026:7;;;;;;;;13983:99;13962:1;13956:7;;;13929:167;;;;13720:386;-1:-1:-1;14123:3:59;13601:532;-1:-1:-1;;13601:532:59:o;14:286:61:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:61;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:61:o;497:548::-;609:4;638:2;667;656:9;649:21;699:6;693:13;742:6;737:2;726:9;722:18;715:34;767:1;777:140;791:6;788:1;785:13;777:140;;;886:14;;;882:23;;876:30;852:17;;;871:2;848:26;841:66;806:10;;777:140;;;781:3;966:1;961:2;952:6;941:9;937:22;933:31;926:42;1036:2;1029;1025:7;1020:2;1012:6;1008:15;1004:29;993:9;989:45;985:54;977:62;;;;497:548;;;;:::o;1050:131::-;-1:-1:-1;;;;;1125:31:61;;1115:42;;1105:70;;1171:1;1168;1161:12;1186:315;1254:6;1262;1315:2;1303:9;1294:7;1290:23;1286:32;1283:52;;;1331:1;1328;1321:12;1283:52;1370:9;1357:23;1389:31;1414:5;1389:31;:::i;:::-;1439:5;1491:2;1476:18;;;;1463:32;;-1:-1:-1;;;1186:315:61:o;1703:180::-;1762:6;1815:2;1803:9;1794:7;1790:23;1786:32;1783:52;;;1831:1;1828;1821:12;1783:52;-1:-1:-1;1854:23:61;;1703:180;-1:-1:-1;1703:180:61:o;2070:456::-;2147:6;2155;2163;2216:2;2204:9;2195:7;2191:23;2187:32;2184:52;;;2232:1;2229;2222:12;2184:52;2271:9;2258:23;2290:31;2315:5;2290:31;:::i;:::-;2340:5;-1:-1:-1;2397:2:61;2382:18;;2369:32;2410:33;2369:32;2410:33;:::i;:::-;2070:456;;2462:7;;-1:-1:-1;;;2516:2:61;2501:18;;;;2488:32;;2070:456::o;2531:481::-;2616:6;2624;2632;2640;2693:3;2681:9;2672:7;2668:23;2664:33;2661:53;;;2710:1;2707;2700:12;2661:53;2746:9;2733:23;2723:33;;2803:2;2792:9;2788:18;2775:32;2765:42;;2857:2;2846:9;2842:18;2829:32;2901:10;2894:5;2890:22;2883:5;2880:33;2870:61;;2927:1;2924;2917:12;2870:61;2531:481;;;;-1:-1:-1;2950:5:61;;3002:2;2987:18;2974:32;;-1:-1:-1;;2531:481:61:o;3427:343::-;3574:2;3559:18;;3607:1;3596:13;;3586:144;;3652:10;3647:3;3643:20;3640:1;3633:31;3687:4;3684:1;3677:15;3715:4;3712:1;3705:15;3586:144;3739:25;;;3427:343;:::o;3775:401::-;3856:6;3864;3917:2;3905:9;3896:7;3892:23;3888:32;3885:52;;;3933:1;3930;3923:12;3885:52;3972:9;3959:23;3991:31;4016:5;3991:31;:::i;:::-;4041:5;-1:-1:-1;4098:2:61;4083:18;;4070:32;4111:33;4070:32;4111:33;:::i;:::-;4163:7;4153:17;;;3775:401;;;;;:::o;4181:247::-;4240:6;4293:2;4281:9;4272:7;4268:23;4264:32;4261:52;;;4309:1;4306;4299:12;4261:52;4348:9;4335:23;4367:31;4392:5;4367:31;:::i;5216:380::-;5295:1;5291:12;;;;5338;;;5359:61;;5413:4;5405:6;5401:17;5391:27;;5359:61;5466:2;5458:6;5455:14;5435:18;5432:38;5429:161;;5512:10;5507:3;5503:20;5500:1;5493:31;5547:4;5544:1;5537:15;5575:4;5572:1;5565:15;5429:161;;5216:380;;;:::o;5601:184::-;5671:6;5724:2;5712:9;5703:7;5699:23;5695:32;5692:52;;;5740:1;5737;5730:12;5692:52;-1:-1:-1;5763:16:61;;5601:184;-1:-1:-1;5601:184:61:o;5790:127::-;5851:10;5846:3;5842:20;5839:1;5832:31;5882:4;5879:1;5872:15;5906:4;5903:1;5896:15;5922:128;5989:9;;;6010:11;;;6007:37;;;6024:18;;:::i;6399:168::-;6472:9;;;6503;;6520:15;;;6514:22;;6500:37;6490:71;;6541:18;;:::i;6572:127::-;6633:10;6628:3;6624:20;6621:1;6614:31;6664:4;6661:1;6654:15;6688:4;6685:1;6678:15;6704:120;6744:1;6770;6760:35;;6775:18;;:::i;:::-;-1:-1:-1;6809:9:61;;6704:120::o;6829:125::-;6894:9;;;6915:10;;;6912:36;;;6928:18;;:::i;7238:277::-;7305:6;7358:2;7346:9;7337:7;7333:23;7329:32;7326:52;;;7374:1;7371;7364:12;7326:52;7406:9;7400:16;7459:5;7452:13;7445:21;7438:5;7435:32;7425:60;;7481:1;7478;7471:12;12778:151;12868:4;12861:12;;;12847;;;12843:31;;12886:14;;12883:40;;;12903:18;;:::i;13994:407::-;14196:2;14178:21;;;14235:2;14215:18;;;14208:30;14274:34;14269:2;14254:18;;14247:62;-1:-1:-1;;;14340:2:61;14325:18;;14318:41;14391:3;14376:19;;13994:407::o;15926:178::-;15963:3;16007:4;16000:5;15996:16;16031:7;16021:41;;16042:18;;:::i;:::-;-1:-1:-1;;16078:20:61;;15926:178;-1:-1:-1;;15926:178:61:o;16109:112::-;16141:1;16167;16157:35;;16172:18;;:::i;:::-;-1:-1:-1;16206:9:61;;16109:112::o;16226:148::-;16314:4;16293:12;;;16307;;;16289:31;;16332:13;;16329:39;;;16348:18;;:::i;16379:165::-;16417:1;16451:4;16448:1;16444:12;16475:3;16465:37;;16482:18;;:::i;:::-;16534:3;16527:4;16524:1;16520:12;16516:22;16511:27;;;16379:165;;;;:::o;16549:127::-;16610:10;16605:3;16601:20;16598:1;16591:31;16641:4;16638:1;16631:15;16665:4;16662:1;16655:15;16681:127;16742:10;16737:3;16733:20;16730:1;16723:31;16773:4;16770:1;16763:15;16797:4;16794:1;16787:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ADMIN_EXECUTE_PERMISSION_ID()": "f8a2c98e",
    "admin()": "f851a440",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": "29a00e7c",
    "calculateSaleReturn(uint256,uint256,uint32,uint256)": "49f9b0f7",
    "continuousSupply()": "da12457a",
    "dao()": "4162169f",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getContinuousBurnRefund(uint256)": "7cbed3e0",
    "getContinuousMintReward(uint256)": "0d8f9f7f",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,address)": "485cc955",
    "mint(uint256)": "a0712d68",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "pluginType()": "41de6830",
    "renounceOwnership()": "715018a6",
    "reserveBalance()": "a10954fe",
    "reserveRatio()": "0c7d5cd8",
    "sponsoredBurn(uint256)": "96343886",
    "supportsInterface(bytes4)": "01ffc9a7",
    "surplusReserve()": "15a25000",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "userLockedBalance(address)": "8cf2b63e",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserveToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initialReserve\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_EXECUTE_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_depositAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePurchaseReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_sellAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"continuousSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_continuousTokenAmount\",\"type\":\"uint256\"}],\"name\":\"getContinuousBurnRefund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reserveTokenAmount\",\"type\":\"uint256\"}],\"name\":\"getContinuousMintReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"_dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluginType\",\"outputs\":[{\"internalType\":\"enum IPlugin.PluginType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveRatio\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sponsoredBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"surplusReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLockedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"calculatePurchaseReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token), calculates the return for a given conversion (in the continuous token) Formula: Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)\",\"params\":{\"_depositAmount\":\"deposit amount, in reserve token\",\"_reserveBalance\":\"total reserve token balance\",\"_reserveRatio\":\"reserve ratio, represented in ppm, 1-1000000\",\"_supply\":\"continuous token total supply\"},\"returns\":{\"_0\":\"purchase return amount\"}},\"calculateSaleReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token), calculates the return for a given conversion (in the reserve token) Formula: Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))\",\"params\":{\"_reserveBalance\":\"total reserve token balance\",\"_reserveRatio\":\"constant reserve ratio, represented in ppm, 1-1000000\",\"_sellAmount\":\"sell amount, in the continuous token itself\",\"_supply\":\"continuous token total supply\"},\"returns\":{\"_0\":\"sale return amount\"}},\"continuousSupply()\":{\"details\":\"Abstract method that returns continuous token supply\"},\"dao()\":{\"returns\":{\"_0\":\"The DAO contract.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getContinuousBurnRefund(uint256)\":{\"details\":\"Given a continuous token amount, calculates the amount of reserve tokens returned.\"},\"getContinuousMintReward(uint256)\":{\"details\":\"Given a reserve token amount, calculates the amount of continuous tokens returned.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,address)\":{\"params\":{\"_admin\":\"The address of the admin.\",\"_dao\":\"The associated DAO.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"reserveBalance()\":{\"details\":\"Abstract method that returns reserve token balance\"},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceId\":\"The ID of the interface.\"},\"returns\":{\"_0\":\"Returns `true` if the interface is supported.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADMIN_EXECUTE_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `execute` function.\"},\"dao()\":{\"notice\":\"Returns the DAO contract.\"},\"initialize(address,address)\":{\"notice\":\"Initializes the contract.\"},\"pluginType()\":{\"notice\":\"returns the plugin's type\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if this or the parent contract supports an interface by its ID.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SymbioticBondingCurve.sol\":\"SymbioticBondingCurve\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aragon/osx/=lib/osx/packages/contracts/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":osx/=lib/osx/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/osx/packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x5da4fcc2ac043eebb78c8c278da86f0fa7ad71ec9ce35a398bcc60c25ba6c7c3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://22dfd57672c31d73f65db47e55b19bfbfba15e4d8e570b5a4fb17288eba0f245\",\"dweb:/ipfs/QmPcBckvXy3TXZzSLF7cc1dnfF77V1Y5Zh1JweZ3uZUKND\"]},\"lib/osx/packages/contracts/src/core/plugin/IPlugin.sol\":{\"keccak256\":\"0xff0e60999c7f9c78bc57d4ca7eb53e38bd4eefbfb152784e98f8cf7530aad3b8\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://aad36220d44f088e77a9b1e0d0cbe22b869e496e405f09b9366748dc6d482331\",\"dweb:/ipfs/QmSxXpiYvhMarfoG9zXPmmBY9jQQqMtsn72mLc6jdbN8Uc\"]},\"lib/osx/packages/contracts/src/core/plugin/PluginCloneable.sol\":{\"keccak256\":\"0xfdfce6920f7163cda9cd930762b225c64f50a9625d34f888fea9c771a12f777b\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://cc690f097210b301b04681de986de4ed83058d5baf712054e4cf040a33197c4a\",\"dweb:/ipfs/Qmb5ENaUrSoL1ttc2op9LQEWUQJww6kneN4FwLKPvJf7ca\"]},\"lib/osx/packages/contracts/src/core/plugin/PluginUUPSUpgradeable.sol\":{\"keccak256\":\"0xde1b9e29d70b9e9d731b7b66f649fd2ab3a5725c03c3114dede433bfabe61489\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6f41187ec3f3214394bdea2a61454da5da6f2cad1469dda8d355241d58e6b6df\",\"dweb:/ipfs/QmenJSxca9T5VkjfgKUtBChToh21n4TXEY1bY21KTMXQmd\"]},\"lib/osx/packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":{\"keccak256\":\"0x4d57aea8920987f368cc6d610a462fb929df38872b174e4fc15d3eaf8bb5e47c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e399447f5f219bffc0225f3189e153037e8113c1f3e165b49bb65c7973d9df09\",\"dweb:/ipfs/QmXanA1LgAn3rLqJLmUPcyi9FDcqnYbLk8UNZwM4Jgfbor\"]},\"lib/osx/packages/contracts/src/core/utils/auth.sol\":{\"keccak256\":\"0x5452788bbdaf93868177c15cefd71f57b5f83293d94a69d98d9505d4c9ec0015\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://33607f6e03e69014d0080a7fd5e1be93ff3a8b80d406b407d2094db4adaf85f2\",\"dweb:/ipfs/QmNxaCF8wTfNUd7Ck942dji6MecuT5HsDrFEwS83ZRgCre\"]},\"lib/osx/packages/contracts/src/token/ERC20/IERC20MintableUpgradeable.sol\":{\"keccak256\":\"0x67c5e5b94e83984da5427057e3945f1863c5d2a6f35fddd6abc1a11927167a46\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ae9d9bca9d15cb4ea1bc00d384d0c1eded9109887b482bbe9765b0e46f1ba618\",\"dweb:/ipfs/QmXkPGCDAP92ZXSGesQUSA197ZcEonQ8nQaK4iPyvwCFXi\"]},\"lib/osx/packages/contracts/src/utils/Proxy.sol\":{\"keccak256\":\"0x4850fcd37ce5e3747d067fd0d50bd9df2b9a1a5c18d19b9d18861191c1943e03\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e5b685c89e687f6a83c0dd3a54de555f209edb170ec2951b1f529a8e15b6c929\",\"dweb:/ipfs/Qma4N68QwZJeLiZzUdUZw4Nnj6vaavoQSNBa7roWLvZGwc\"]},\"src/SymbioticBondingCurve.sol\":{\"keccak256\":\"0x9e2df383fce639539b2ab7211c282d220925f7f2f00d4e011a2a0c19ae69086d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://187cabb3c24cf70def4366f2394f18b2e16027d8749b5a385ad84da30414ad75\",\"dweb:/ipfs/QmP2cp3SyH74KugV4KRY5oW2aptN4c8PQpFmpbE92THc6C\"]},\"src/bonding_curve/ContinuousToken.sol\":{\"keccak256\":\"0xa1b9ee00fae3a4a488717e291828fff307048c8ac52e9ef3f15f2a8db06c9694\",\"urls\":[\"bzz-raw://d21d72346dccb2d6d0f29db440923aceec2b884158958917cda903beddcb573a\",\"dweb:/ipfs/QmNcs3U2NajSh2uY6s8o26f2hyxnF1637Nv1UjMY9Wpbx8\"]},\"src/bonding_curve/curves/BancorBondingCurve.sol\":{\"keccak256\":\"0x23630af9e24bf535be5b58a490c8103ebcfa49a0aab2f4b98a47d7786a890615\",\"urls\":[\"bzz-raw://32ca14f07cebb99768fbaefe9c694dfa22cc8e4664d1d273a7338b17e424aee5\",\"dweb:/ipfs/QmZeeQBeXBs9mKgkAhWu96AJpNVg7WVUgCADveYGyNScrN\"]},\"src/bonding_curve/interfaces/IBondingCurve.sol\":{\"keccak256\":\"0xb932c2a0a51f2369e06395efc957783430b59305601226a502afcbac8d91f8a6\",\"urls\":[\"bzz-raw://7155be7b60dc0b18a9afd7977976ec98690799764a44ec3231a25397db03d6e5\",\"dweb:/ipfs/QmQfmt6e7ytJYCfYZbJDYbQxR2HJDGVanNhLrdNvirAUiD\"]},\"src/bonding_curve/math/BancorFormula.sol\":{\"keccak256\":\"0xc57ad8aecce8fc833eb1ec6f81a5d253aefe4421c7ea96f8926a2fb7292dfebb\",\"urls\":[\"bzz-raw://10c09dcfcbe2b5cf7bb76e095a1e196774bc145d3e49cce60a85bba7771d1009\",\"dweb:/ipfs/QmSwBon85NdTMzAUmBFnXzhuY3UqXKjbuASWLMqhk55Hy1\"]},\"src/bonding_curve/math/Power.sol\":{\"keccak256\":\"0x6d810301874fc643fdc1531f8891456dbff94b4b041d30370aa125efcf5e2fac\",\"urls\":[\"bzz-raw://0d779789a5aa26f3375d684dcfea50a2c6ed2959775b14edf9881e2395a0269a\",\"dweb:/ipfs/QmesKWtc5NdqRKc8ccEs4aLsHtF1Novj7nGhHwsjrwMzn6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_reserveToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_initialReserve",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "refund",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN_EXECUTE_PERMISSION_ID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_supply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_reserveBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_reserveRatio",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "_depositAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculatePurchaseReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_supply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_reserveBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_reserveRatio",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "_sellAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateSaleReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "continuousSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dao",
          "outputs": [
            {
              "internalType": "contract IDAO",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_continuousTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getContinuousBurnRefund",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_reserveTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getContinuousMintReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IDAO",
              "name": "_dao",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "pluginType",
          "outputs": [
            {
              "internalType": "enum IPlugin.PluginType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reserveBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reserveRatio",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sponsoredBurn"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "surplusReserve",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userLockedBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": {
            "details": "given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token), calculates the return for a given conversion (in the continuous token) Formula: Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)",
            "params": {
              "_depositAmount": "deposit amount, in reserve token",
              "_reserveBalance": "total reserve token balance",
              "_reserveRatio": "reserve ratio, represented in ppm, 1-1000000",
              "_supply": "continuous token total supply"
            },
            "returns": {
              "_0": "purchase return amount"
            }
          },
          "calculateSaleReturn(uint256,uint256,uint32,uint256)": {
            "details": "given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token), calculates the return for a given conversion (in the reserve token) Formula: Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))",
            "params": {
              "_reserveBalance": "total reserve token balance",
              "_reserveRatio": "constant reserve ratio, represented in ppm, 1-1000000",
              "_sellAmount": "sell amount, in the continuous token itself",
              "_supply": "continuous token total supply"
            },
            "returns": {
              "_0": "sale return amount"
            }
          },
          "continuousSupply()": {
            "details": "Abstract method that returns continuous token supply"
          },
          "dao()": {
            "returns": {
              "_0": "The DAO contract."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getContinuousBurnRefund(uint256)": {
            "details": "Given a continuous token amount, calculates the amount of reserve tokens returned."
          },
          "getContinuousMintReward(uint256)": {
            "details": "Given a reserve token amount, calculates the amount of continuous tokens returned."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(address,address)": {
            "params": {
              "_admin": "The address of the admin.",
              "_dao": "The associated DAO."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "reserveBalance()": {
            "details": "Abstract method that returns reserve token balance"
          },
          "supportsInterface(bytes4)": {
            "params": {
              "_interfaceId": "The ID of the interface."
            },
            "returns": {
              "_0": "Returns `true` if the interface is supported."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ADMIN_EXECUTE_PERMISSION_ID()": {
            "notice": "The ID of the permission required to call the `execute` function."
          },
          "dao()": {
            "notice": "Returns the DAO contract."
          },
          "initialize(address,address)": {
            "notice": "Initializes the contract."
          },
          "pluginType()": {
            "notice": "returns the plugin's type"
          },
          "supportsInterface(bytes4)": {
            "notice": "Checks if this or the parent contract supports an interface by its ID."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aragon/osx/=lib/osx/packages/contracts/src/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":osx/=lib/osx/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SymbioticBondingCurve.sol": "SymbioticBondingCurve"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999",
        "urls": [
          "bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb",
          "dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
        "urls": [
          "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
          "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/osx/packages/contracts/src/core/dao/IDAO.sol": {
        "keccak256": "0x5da4fcc2ac043eebb78c8c278da86f0fa7ad71ec9ce35a398bcc60c25ba6c7c3",
        "urls": [
          "bzz-raw://22dfd57672c31d73f65db47e55b19bfbfba15e4d8e570b5a4fb17288eba0f245",
          "dweb:/ipfs/QmPcBckvXy3TXZzSLF7cc1dnfF77V1Y5Zh1JweZ3uZUKND"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/plugin/IPlugin.sol": {
        "keccak256": "0xff0e60999c7f9c78bc57d4ca7eb53e38bd4eefbfb152784e98f8cf7530aad3b8",
        "urls": [
          "bzz-raw://aad36220d44f088e77a9b1e0d0cbe22b869e496e405f09b9366748dc6d482331",
          "dweb:/ipfs/QmSxXpiYvhMarfoG9zXPmmBY9jQQqMtsn72mLc6jdbN8Uc"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/plugin/PluginCloneable.sol": {
        "keccak256": "0xfdfce6920f7163cda9cd930762b225c64f50a9625d34f888fea9c771a12f777b",
        "urls": [
          "bzz-raw://cc690f097210b301b04681de986de4ed83058d5baf712054e4cf040a33197c4a",
          "dweb:/ipfs/Qmb5ENaUrSoL1ttc2op9LQEWUQJww6kneN4FwLKPvJf7ca"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/plugin/PluginUUPSUpgradeable.sol": {
        "keccak256": "0xde1b9e29d70b9e9d731b7b66f649fd2ab3a5725c03c3114dede433bfabe61489",
        "urls": [
          "bzz-raw://6f41187ec3f3214394bdea2a61454da5da6f2cad1469dda8d355241d58e6b6df",
          "dweb:/ipfs/QmenJSxca9T5VkjfgKUtBChToh21n4TXEY1bY21KTMXQmd"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol": {
        "keccak256": "0x4d57aea8920987f368cc6d610a462fb929df38872b174e4fc15d3eaf8bb5e47c",
        "urls": [
          "bzz-raw://e399447f5f219bffc0225f3189e153037e8113c1f3e165b49bb65c7973d9df09",
          "dweb:/ipfs/QmXanA1LgAn3rLqJLmUPcyi9FDcqnYbLk8UNZwM4Jgfbor"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/utils/auth.sol": {
        "keccak256": "0x5452788bbdaf93868177c15cefd71f57b5f83293d94a69d98d9505d4c9ec0015",
        "urls": [
          "bzz-raw://33607f6e03e69014d0080a7fd5e1be93ff3a8b80d406b407d2094db4adaf85f2",
          "dweb:/ipfs/QmNxaCF8wTfNUd7Ck942dji6MecuT5HsDrFEwS83ZRgCre"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/token/ERC20/IERC20MintableUpgradeable.sol": {
        "keccak256": "0x67c5e5b94e83984da5427057e3945f1863c5d2a6f35fddd6abc1a11927167a46",
        "urls": [
          "bzz-raw://ae9d9bca9d15cb4ea1bc00d384d0c1eded9109887b482bbe9765b0e46f1ba618",
          "dweb:/ipfs/QmXkPGCDAP92ZXSGesQUSA197ZcEonQ8nQaK4iPyvwCFXi"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/utils/Proxy.sol": {
        "keccak256": "0x4850fcd37ce5e3747d067fd0d50bd9df2b9a1a5c18d19b9d18861191c1943e03",
        "urls": [
          "bzz-raw://e5b685c89e687f6a83c0dd3a54de555f209edb170ec2951b1f529a8e15b6c929",
          "dweb:/ipfs/Qma4N68QwZJeLiZzUdUZw4Nnj6vaavoQSNBa7roWLvZGwc"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/SymbioticBondingCurve.sol": {
        "keccak256": "0x9e2df383fce639539b2ab7211c282d220925f7f2f00d4e011a2a0c19ae69086d",
        "urls": [
          "bzz-raw://187cabb3c24cf70def4366f2394f18b2e16027d8749b5a385ad84da30414ad75",
          "dweb:/ipfs/QmP2cp3SyH74KugV4KRY5oW2aptN4c8PQpFmpbE92THc6C"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/bonding_curve/ContinuousToken.sol": {
        "keccak256": "0xa1b9ee00fae3a4a488717e291828fff307048c8ac52e9ef3f15f2a8db06c9694",
        "urls": [
          "bzz-raw://d21d72346dccb2d6d0f29db440923aceec2b884158958917cda903beddcb573a",
          "dweb:/ipfs/QmNcs3U2NajSh2uY6s8o26f2hyxnF1637Nv1UjMY9Wpbx8"
        ],
        "license": null
      },
      "src/bonding_curve/curves/BancorBondingCurve.sol": {
        "keccak256": "0x23630af9e24bf535be5b58a490c8103ebcfa49a0aab2f4b98a47d7786a890615",
        "urls": [
          "bzz-raw://32ca14f07cebb99768fbaefe9c694dfa22cc8e4664d1d273a7338b17e424aee5",
          "dweb:/ipfs/QmZeeQBeXBs9mKgkAhWu96AJpNVg7WVUgCADveYGyNScrN"
        ],
        "license": null
      },
      "src/bonding_curve/interfaces/IBondingCurve.sol": {
        "keccak256": "0xb932c2a0a51f2369e06395efc957783430b59305601226a502afcbac8d91f8a6",
        "urls": [
          "bzz-raw://7155be7b60dc0b18a9afd7977976ec98690799764a44ec3231a25397db03d6e5",
          "dweb:/ipfs/QmQfmt6e7ytJYCfYZbJDYbQxR2HJDGVanNhLrdNvirAUiD"
        ],
        "license": null
      },
      "src/bonding_curve/math/BancorFormula.sol": {
        "keccak256": "0xc57ad8aecce8fc833eb1ec6f81a5d253aefe4421c7ea96f8926a2fb7292dfebb",
        "urls": [
          "bzz-raw://10c09dcfcbe2b5cf7bb76e095a1e196774bc145d3e49cce60a85bba7771d1009",
          "dweb:/ipfs/QmSwBon85NdTMzAUmBFnXzhuY3UqXKjbuASWLMqhk55Hy1"
        ],
        "license": null
      },
      "src/bonding_curve/math/Power.sol": {
        "keccak256": "0x6d810301874fc643fdc1531f8891456dbff94b4b041d30370aa125efcf5e2fac",
        "urls": [
          "bzz-raw://0d779789a5aa26f3375d684dcfea50a2c6ed2959775b14edf9881e2395a0269a",
          "dweb:/ipfs/QmesKWtc5NdqRKc8ccEs4aLsHtF1Novj7nGhHwsjrwMzn6"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SymbioticBondingCurve.sol",
    "id": 6522,
    "exportedSymbols": {
      "BancorBondingCurve": [
        7005
      ],
      "BancorFormula": [
        7230
      ],
      "Clones": [
        2187
      ],
      "Context": [
        3632
      ],
      "ContextUpgradeable": [
        1712
      ],
      "ContinuousToken": [
        6936
      ],
      "ERC165Upgradeable": [
        1937
      ],
      "ERC20": [
        3177
      ],
      "IBondingCurve": [
        7024
      ],
      "IDAO": [
        4879
      ],
      "IERC20": [
        3255
      ],
      "IERC20Metadata": [
        3280
      ],
      "IERC20MintableUpgradeable": [
        6264
      ],
      "IERC20Upgradeable": [
        910
      ],
      "Ownable": [
        2062
      ],
      "PluginCloneable": [
        5738
      ],
      "PluginUUPSUpgradeable": [
        5857
      ],
      "Power": [
        9422
      ],
      "SymbioticBondingCurve": [
        6521
      ],
      "createERC1967Proxy": [
        6288
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:2982:53",
    "nodes": [
      {
        "id": 6290,
        "nodeType": "PragmaDirective",
        "src": "42:23:53",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 6292,
        "nodeType": "ImportDirective",
        "src": "68:64:53",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6522,
        "sourceUnit": 2188,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6291,
              "name": "Clones",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2187,
              "src": "76:6:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6294,
        "nodeType": "ImportDirective",
        "src": "133:112:53",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6522,
        "sourceUnit": 1938,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6293,
              "name": "ERC165Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1937,
              "src": "141:17:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6296,
        "nodeType": "ImportDirective",
        "src": "246:104:53",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6522,
        "sourceUnit": 911,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6295,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 910,
              "src": "254:17:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6298,
        "nodeType": "ImportDirective",
        "src": "352:51:53",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/core/dao/IDAO.sol",
        "file": "@aragon/osx/core/dao/IDAO.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6522,
        "sourceUnit": 4880,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6297,
              "name": "IDAO",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4879,
              "src": "360:4:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6300,
        "nodeType": "ImportDirective",
        "src": "404:88:53",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/core/plugin/PluginUUPSUpgradeable.sol",
        "file": "@aragon/osx/core/plugin/PluginUUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6522,
        "sourceUnit": 5858,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6299,
              "name": "PluginUUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5857,
              "src": "412:21:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6303,
        "nodeType": "ImportDirective",
        "src": "493:82:53",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/core/plugin/PluginCloneable.sol",
        "file": "@aragon/osx/core/plugin/PluginCloneable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6522,
        "sourceUnit": 5739,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6301,
              "name": "PluginCloneable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5738,
              "src": "501:15:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 6302,
              "name": "IDAO",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4879,
              "src": "518:4:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6305,
        "nodeType": "ImportDirective",
        "src": "576:96:53",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/token/ERC20/IERC20MintableUpgradeable.sol",
        "file": "@aragon/osx/token/ERC20/IERC20MintableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6522,
        "sourceUnit": 6265,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6304,
              "name": "IERC20MintableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6264,
              "src": "584:25:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6307,
        "nodeType": "ImportDirective",
        "src": "673:63:53",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/utils/Proxy.sol",
        "file": "@aragon/osx/utils/Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6522,
        "sourceUnit": 6289,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6306,
              "name": "createERC1967Proxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6288,
              "src": "681:18:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6309,
        "nodeType": "ImportDirective",
        "src": "738:100:53",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6522,
        "sourceUnit": 1713,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6308,
              "name": "ContextUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1712,
              "src": "746:18:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6310,
        "nodeType": "ImportDirective",
        "src": "840:45:53",
        "nodes": [],
        "absolutePath": "src/bonding_curve/ContinuousToken.sol",
        "file": "./bonding_curve/ContinuousToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6522,
        "sourceUnit": 6937,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6521,
        "nodeType": "ContractDefinition",
        "src": "887:2132:53",
        "nodes": [
          {
            "id": 6320,
            "nodeType": "VariableDeclaration",
            "src": "1038:91:53",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 6315,
              "nodeType": "StructuredDocumentation",
              "src": "958:77:53",
              "text": "@notice The ID of the permission required to call the `execute` function."
            },
            "functionSelector": "f8a2c98e",
            "mutability": "constant",
            "name": "ADMIN_EXECUTE_PERMISSION_ID",
            "nameLocation": "1062:27:53",
            "scope": 6521,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6316,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1038:7:53",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e5f455845435554455f5045524d495353494f4e",
                  "id": 6318,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1102:26:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_333faabe8d5b573697f548cb3885d6a81cd1e2ac87d1775bfec70a290e8e4d60",
                    "typeString": "literal_string \"ADMIN_EXECUTE_PERMISSION\""
                  },
                  "value": "ADMIN_EXECUTE_PERMISSION"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_333faabe8d5b573697f548cb3885d6a81cd1e2ac87d1775bfec70a290e8e4d60",
                    "typeString": "literal_string \"ADMIN_EXECUTE_PERMISSION\""
                  }
                ],
                "id": 6317,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1092:9:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6319,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1092:37:53",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6322,
            "nodeType": "VariableDeclaration",
            "src": "1138:20:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "f851a440",
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "1153:5:53",
            "scope": 6521,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6321,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1138:7:53",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6326,
            "nodeType": "VariableDeclaration",
            "src": "1165:49:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "8cf2b63e",
            "mutability": "mutable",
            "name": "userLockedBalance",
            "nameLocation": "1197:17:53",
            "scope": 6521,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6325,
              "keyType": {
                "id": 6323,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1173:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1165:24:53",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6324,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1184:4:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 6328,
            "nodeType": "VariableDeclaration",
            "src": "1220:24:53",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "reserve",
            "nameLocation": "1237:7:53",
            "scope": 6521,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6327,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1220:7:53",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6331,
            "nodeType": "VariableDeclaration",
            "src": "1251:18:53",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "reserveToken",
            "nameLocation": "1257:12:53",
            "scope": 6521,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$3177",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 6330,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6329,
                "name": "ERC20",
                "nameLocations": [
                  "1251:5:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3177,
                "src": "1251:5:53"
              },
              "referencedDeclaration": 3177,
              "src": "1251:5:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3177",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6333,
            "nodeType": "VariableDeclaration",
            "src": "1275:23:53",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "treasuryAddress",
            "nameLocation": "1283:15:53",
            "scope": 6521,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6332,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1275:7:53",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6353,
            "nodeType": "FunctionDefinition",
            "src": "1434:137:53",
            "nodes": [],
            "body": {
              "id": 6352,
              "nodeType": "Block",
              "src": "1502:69:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6345,
                        "name": "_dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6337,
                        "src": "1535:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDAO_$4879",
                          "typeString": "contract IDAO"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IDAO_$4879",
                          "typeString": "contract IDAO"
                        }
                      ],
                      "id": 6344,
                      "name": "__PluginCloneable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5703,
                      "src": "1512:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IDAO_$4879_$returns$__$",
                        "typeString": "function (contract IDAO)"
                      }
                    },
                    "id": 6346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:28:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6347,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:28:53"
                },
                {
                  "expression": {
                    "id": 6350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6348,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6322,
                      "src": "1550:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6349,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6339,
                      "src": "1558:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1550:14:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6351,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:14:53"
                }
              ]
            },
            "documentation": {
              "id": 6334,
              "nodeType": "StructuredDocumentation",
              "src": "1304:125:53",
              "text": "@notice Initializes the contract.\n @param _dao The associated DAO.\n @param _admin The address of the admin."
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6342,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6341,
                  "name": "initializer",
                  "nameLocations": [
                    "1490:11:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 435,
                  "src": "1490:11:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "1490:11:53"
              }
            ],
            "name": "initialize",
            "nameLocation": "1443:10:53",
            "parameters": {
              "id": 6340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6337,
                  "mutability": "mutable",
                  "name": "_dao",
                  "nameLocation": "1459:4:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 6353,
                  "src": "1454:9:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDAO_$4879",
                    "typeString": "contract IDAO"
                  },
                  "typeName": {
                    "id": 6336,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6335,
                      "name": "IDAO",
                      "nameLocations": [
                        "1454:4:53"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4879,
                      "src": "1454:4:53"
                    },
                    "referencedDeclaration": 4879,
                    "src": "1454:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDAO_$4879",
                      "typeString": "contract IDAO"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6339,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1473:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 6353,
                  "src": "1465:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1453:27:53"
            },
            "returnParameters": {
              "id": 6343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1502:0:53"
            },
            "scope": 6521,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6390,
            "nodeType": "FunctionDefinition",
            "src": "1582:327:53",
            "nodes": [],
            "body": {
              "id": 6389,
              "nodeType": "Block",
              "src": "1727:182:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6366,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6328,
                      "src": "1737:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6367,
                      "name": "_initialReserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6357,
                      "src": "1747:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1737:25:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6369,
                  "nodeType": "ExpressionStatement",
                  "src": "1737:25:53"
                },
                {
                  "expression": {
                    "id": 6374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6370,
                      "name": "reserveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6331,
                      "src": "1772:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3177",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6372,
                          "name": "_reserveToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6355,
                          "src": "1793:13:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6371,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3177,
                        "src": "1787:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$3177_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 6373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1787:20:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3177",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1772:35:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3177",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 6375,
                  "nodeType": "ExpressionStatement",
                  "src": "1772:35:53"
                },
                {
                  "expression": {
                    "id": 6387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6376,
                        "name": "userLockedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6326,
                        "src": "1817:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6379,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6377,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            6508
                          ],
                          "referencedDeclaration": 6508,
                          "src": "1835:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 6378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1835:12:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1817:31:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 6380,
                          "name": "userLockedBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6326,
                          "src": "1851:17:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 6383,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6381,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6508
                            ],
                            "referencedDeclaration": 6508,
                            "src": "1869:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1869:12:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1851:31:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "id": 6384,
                            "name": "_initialReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6357,
                            "src": "1886:15:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6385,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1885:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1851:51:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1817:85:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6388,
                  "nodeType": "ExpressionStatement",
                  "src": "1817:85:53"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "53796d62696f746963426f6e64696e674375727665",
                    "id": 6360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1670:23:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e5ac88b6fbb94fe9113d7af6b61acf4848373edc1cec98a26c2c47fa8322ee0f",
                      "typeString": "literal_string \"SymbioticBondingCurve\""
                    },
                    "value": "SymbioticBondingCurve"
                  },
                  {
                    "hexValue": "534243",
                    "id": 6361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1695:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c6bd34552b0e78476814d380c2d3a3872d1385d8d5b08b12e7ebcfc93181aab5",
                      "typeString": "literal_string \"SBC\""
                    },
                    "value": "SBC"
                  },
                  {
                    "id": 6362,
                    "name": "_initialReserve",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6357,
                    "src": "1702:15:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "hexValue": "333030303030",
                    "id": 6363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1719:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_300000_by_1",
                      "typeString": "int_const 300000"
                    },
                    "value": "300000"
                  }
                ],
                "id": 6364,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6359,
                  "name": "ContinuousToken",
                  "nameLocations": [
                    "1654:15:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6936,
                  "src": "1654:15:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "1654:72:53"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6355,
                  "mutability": "mutable",
                  "name": "_reserveToken",
                  "nameLocation": "1602:13:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 6390,
                  "src": "1594:21:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6357,
                  "mutability": "mutable",
                  "name": "_initialReserve",
                  "nameLocation": "1622:15:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 6390,
                  "src": "1617:20:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6356,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1593:45:53"
            },
            "returnParameters": {
              "id": 6365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:0:53"
            },
            "scope": 6521,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6431,
            "nodeType": "FunctionDefinition",
            "src": "1915:273:53",
            "nodes": [],
            "body": {
              "id": 6430,
              "nodeType": "Block",
              "src": "1950:238:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6395,
                        "name": "userLockedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6326,
                        "src": "1960:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6398,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6396,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            6508
                          ],
                          "referencedDeclaration": 6508,
                          "src": "1978:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 6397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1978:12:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1960:31:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 6399,
                          "name": "userLockedBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6326,
                          "src": "1994:17:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 6402,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6400,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6508
                            ],
                            "referencedDeclaration": 6508,
                            "src": "2012:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2012:12:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1994:31:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 6403,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6392,
                        "src": "2028:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1994:41:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1960:75:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6406,
                  "nodeType": "ExpressionStatement",
                  "src": "1960:75:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6410,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            6508
                          ],
                          "referencedDeclaration": 6508,
                          "src": "2071:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 6411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2071:12:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6414,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2093:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SymbioticBondingCurve_$6521",
                              "typeString": "contract SymbioticBondingCurve"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SymbioticBondingCurve_$6521",
                              "typeString": "contract SymbioticBondingCurve"
                            }
                          ],
                          "id": 6413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2085:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6412,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2085:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2085:13:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6416,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6392,
                        "src": "2100:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6407,
                        "name": "reserveToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6331,
                        "src": "2045:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3177",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 6409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2058:12:53",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2790,
                      "src": "2045:25:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2045:63:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6418,
                  "nodeType": "ExpressionStatement",
                  "src": "2045:63:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6420,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6392,
                        "src": "2134:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6419,
                      "name": "_continuousMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6870,
                      "src": "2118:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 6421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2118:24:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6422,
                  "nodeType": "ExpressionStatement",
                  "src": "2118:24:53"
                },
                {
                  "expression": {
                    "id": 6428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6423,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6328,
                      "src": "2152:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6424,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6328,
                        "src": "2162:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "id": 6425,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6392,
                            "src": "2173:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6426,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2172:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2162:19:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2152:29:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6429,
                  "nodeType": "ExpressionStatement",
                  "src": "2152:29:53"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1924:4:53",
            "parameters": {
              "id": 6393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6392,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1934:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 6431,
                  "src": "1929:12:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6391,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1928:14:53"
            },
            "returnParameters": {
              "id": 6394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1950:0:53"
            },
            "scope": 6521,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6471,
            "nodeType": "FunctionDefinition",
            "src": "2194:291:53",
            "nodes": [],
            "body": {
              "id": 6470,
              "nodeType": "Block",
              "src": "2229:256:53",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6437,
                      "mutability": "mutable",
                      "name": "refundAmount",
                      "nameLocation": "2244:12:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 6470,
                      "src": "2239:17:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6436,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2239:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6441,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6439,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6433,
                        "src": "2275:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6438,
                      "name": "_continuousBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6916,
                      "src": "2259:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 6440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2259:24:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2239:44:53"
                },
                {
                  "expression": {
                    "id": 6453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6442,
                        "name": "userLockedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6326,
                        "src": "2293:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6445,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6443,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            6508
                          ],
                          "referencedDeclaration": 6508,
                          "src": "2311:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 6444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2311:12:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2293:31:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 6446,
                          "name": "userLockedBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6326,
                          "src": "2327:17:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 6449,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6447,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6508
                            ],
                            "referencedDeclaration": 6508,
                            "src": "2345:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2345:12:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2327:31:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "components": [
                          {
                            "id": 6450,
                            "name": "refundAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6437,
                            "src": "2362:12:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6451,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2361:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2327:48:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2293:82:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6454,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:82:53"
                },
                {
                  "expression": {
                    "id": 6460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6455,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6328,
                      "src": "2385:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6456,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6328,
                        "src": "2395:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "components": [
                          {
                            "id": 6457,
                            "name": "refundAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6437,
                            "src": "2406:12:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6458,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2405:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2395:24:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2385:34:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6461,
                  "nodeType": "ExpressionStatement",
                  "src": "2385:34:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6465,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            6508
                          ],
                          "referencedDeclaration": 6508,
                          "src": "2451:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 6466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2451:12:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6467,
                        "name": "refundAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6437,
                        "src": "2465:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6462,
                        "name": "reserveToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6331,
                        "src": "2429:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3177",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 6464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2442:8:53",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2714,
                      "src": "2429:21:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2429:49:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6469,
                  "nodeType": "ExpressionStatement",
                  "src": "2429:49:53"
                }
              ]
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2203:4:53",
            "parameters": {
              "id": 6434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6433,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2213:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 6471,
                  "src": "2208:12:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6432,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2207:14:53"
            },
            "returnParameters": {
              "id": 6435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2229:0:53"
            },
            "scope": 6521,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6480,
            "nodeType": "FunctionDefinition",
            "src": "2491:93:53",
            "nodes": [],
            "body": {
              "id": 6479,
              "nodeType": "Block",
              "src": "2553:31:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6477,
                    "name": "reserve",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6328,
                    "src": "2570:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6476,
                  "id": 6478,
                  "nodeType": "Return",
                  "src": "2563:14:53"
                }
              ]
            },
            "baseFunctions": [
              7004
            ],
            "functionSelector": "a10954fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reserveBalance",
            "nameLocation": "2500:14:53",
            "overrides": {
              "id": 6473,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2517:8:53"
            },
            "parameters": {
              "id": 6472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2514:2:53"
            },
            "returnParameters": {
              "id": 6476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6475,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "2547:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6474,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2546:6:53"
            },
            "scope": 6521,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6496,
            "nodeType": "FunctionDefinition",
            "src": "2592:124:53",
            "nodes": [],
            "body": {
              "id": 6495,
              "nodeType": "Block",
              "src": "2645:71:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 6489,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2693:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SymbioticBondingCurve_$6521",
                                "typeString": "contract SymbioticBondingCurve"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SymbioticBondingCurve_$6521",
                                "typeString": "contract SymbioticBondingCurve"
                              }
                            ],
                            "id": 6488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2685:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6487,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2685:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2685:13:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 6485,
                          "name": "reserveToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6331,
                          "src": "2662:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3177",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 6486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2675:9:53",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2689,
                        "src": "2662:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 6491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2662:37:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6492,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6328,
                      "src": "2702:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2662:47:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6484,
                  "id": 6494,
                  "nodeType": "Return",
                  "src": "2655:54:53"
                }
              ]
            },
            "functionSelector": "15a25000",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "surplusReserve",
            "nameLocation": "2601:14:53",
            "parameters": {
              "id": 6481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2615:2:53"
            },
            "returnParameters": {
              "id": 6484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6483,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6496,
                  "src": "2639:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6482,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2639:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2638:6:53"
            },
            "scope": 6521,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6508,
            "nodeType": "FunctionDefinition",
            "src": "2740:132:53",
            "nodes": [],
            "body": {
              "id": 6507,
              "nodeType": "Block",
              "src": "2840:32:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 6504,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2857:3:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 6505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2861:6:53",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2857:10:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 6503,
                  "id": 6506,
                  "nodeType": "Return",
                  "src": "2850:17:53"
                }
              ]
            },
            "baseFunctions": [
              1697,
              3622
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "2749:10:53",
            "overrides": {
              "id": 6500,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 6498,
                  "name": "Context",
                  "nameLocations": [
                    "2793:7:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3632,
                  "src": "2793:7:53"
                },
                {
                  "id": 6499,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "2802:18:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1712,
                  "src": "2802:18:53"
                }
              ],
              "src": "2784:37:53"
            },
            "parameters": {
              "id": 6497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2759:2:53"
            },
            "returnParameters": {
              "id": 6503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6502,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6508,
                  "src": "2831:7:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2830:9:53"
            },
            "scope": 6521,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6520,
            "nodeType": "FunctionDefinition",
            "src": "2878:139:53",
            "nodes": [],
            "body": {
              "id": 6519,
              "nodeType": "Block",
              "src": "2985:32:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 6516,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3002:3:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 6517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3006:4:53",
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "3002:8:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 6515,
                  "id": 6518,
                  "nodeType": "Return",
                  "src": "2995:15:53"
                }
              ]
            },
            "baseFunctions": [
              1706,
              3631
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "2887:8:53",
            "overrides": {
              "id": 6512,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 6510,
                  "name": "Context",
                  "nameLocations": [
                    "2930:7:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3632,
                  "src": "2930:7:53"
                },
                {
                  "id": 6511,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "2939:18:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1712,
                  "src": "2939:18:53"
                }
              ],
              "src": "2921:37:53"
            },
            "parameters": {
              "id": 6509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2895:2:53"
            },
            "returnParameters": {
              "id": 6515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6514,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6520,
                  "src": "2969:14:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6513,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2969:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2968:16:53"
            },
            "scope": 6521,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6311,
              "name": "PluginCloneable",
              "nameLocations": [
                "921:15:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5738,
              "src": "921:15:53"
            },
            "id": 6312,
            "nodeType": "InheritanceSpecifier",
            "src": "921:15:53"
          },
          {
            "baseName": {
              "id": 6313,
              "name": "ContinuousToken",
              "nameLocations": [
                "938:15:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6936,
              "src": "938:15:53"
            },
            "id": 6314,
            "nodeType": "InheritanceSpecifier",
            "src": "938:15:53"
          }
        ],
        "canonicalName": "SymbioticBondingCurve",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6521,
          6936,
          7005,
          7230,
          9422,
          7024,
          3177,
          3280,
          3255,
          2062,
          3632,
          5738,
          5922,
          1712,
          1937,
          1949,
          533,
          5664
        ],
        "name": "SymbioticBondingCurve",
        "nameLocation": "896:21:53",
        "scope": 6522,
        "usedErrors": []
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 53
}