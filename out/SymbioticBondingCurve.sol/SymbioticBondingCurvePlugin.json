{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refund",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_EXECUTE_PERMISSION_ID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_depositAmount",
          "type": "uint256"
        }
      ],
      "name": "calculatePurchaseReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserve",
          "type": "uint256"
        }
      ],
      "name": "calculateReserveRatio",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_sellAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSaleReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "continuousSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dao",
      "outputs": [
        {
          "internalType": "contract IDAO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_continuousTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "getContinuousBurnRefund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reserveTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "getContinuousMintReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IDAO",
          "name": "_dao",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_reserveToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initialReserve",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_treasuryAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mode",
          "type": "uint256"
        }
      ],
      "name": "manageYieldSurplus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pluginType",
      "outputs": [
        {
          "internalType": "enum IPlugin.PluginType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveRatio",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveSurplus",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sponsoredBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxPct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userLockedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040526003608090815262302e3360e81b60a052609d9062000024908262000b3b565b503480156200003257600080fd5b506040518060400160405280601b81526020017f53796d62696f746963426f6e64696e674375727665506c7567696e00000000008152506040518060400160405280600381526020016253424360e81b815250620493e082826200009b6200084060201b60201c565b620000a63362000902565b609b620000b4838262000b3b565b50609c620000c3828262000b3b565b50506001641c35fedd1560601b0360be55506001646c3390ecc9605e1b0360bf556001640cf801476160611b0360c05560016431bdb23e1d605f1b0360c15560016502fb1d8fe083605b1b0360c25560016505b771955b37605a1b0360c3556001650af67a93bb5160591b0360c45560016515060c256cb360581b0360c5556001651428a2f98d7360581b0360c6556001654d515663970960561b0360c755600165944620b0e70f60551b0360c855600166011c592761c66760541b0360c95560016602214d10d014eb60531b0360ca55600166020ade36b7dbef60531b0360cb5560016603eab73b3bbfe360521b0360cc556001660782ee3593f6d760511b0360cd556001661ccf4b44bb4821604f1b0360ce5560016606e7f88ad8a77760511b0360cf5560016669f3d1c921891d604d1b0360d055600166cb2ff529eb71e5604c1b0360d155600166c2d415c3db974b604c1b0360d25560016702eb40f9f620fda7604a1b0360d35560016705990681d961a1eb60491b0360d455600167055e12902701414760491b0360d55560016714962dee9dc9764160471b0360d65560016704ef57b9b560fab560491b0360d75560016712ed7b32a58f552b60471b0360d8556001679131271922eaa60760441b0360d9556001678b380f3558668c4760441b0360da556001680215f77c045fbe885760421b0360db556001600160831b0360dc556001670f577eded5773a1160471b0360dd556001680eb5ec597592befbf5603f1b0360de556001681c35fedd14b861eb05603e1b0360df556001683619c87664579bc94b603d1b0360e05560016867c00a3b07ffc01fd7603c1b0360e155600168c6f6c8f8739773a7a5603b1b0360e255600168bec763f8209b7a72b1603b1b0360e35560016902dbb8caad9b7097b91b60391b0360e455600169057b3d49dda84556d6f760381b0360e555600169054183095b2c8ececf3160381b0360e6556001690a14517cc6b9457111ef60371b0360e75560016913545598e5c23276ccf160361b0360e8556001692511882c39c3adea96ff60351b0360e955600169471649d87199aa99075760341b0360ea557004429a21a029d4c1457cfbffffffffffff60eb55700415bc6d6fb7dd71af2cb3ffffffffffff60ec557003eab73b3bbfe282243ce1ffffffffffff60ed557003c1771ac9fb6b4c18e229ffffffffffff60ee55700399e96897690418f785257fffffffffff60ef55700373fc456c53bb779bf0ea9fffffffffff60f05570034f9e8e490c48e67e6ab8bfffffffffff60f15570032cbfd4a7adc790560b3337ffffffffff60f25570030b50570f6e5d2acca94613ffffffffff60f3557002eb40f9f620fda6b56c2861ffffffffff60f4557002cc8340ecb0d0f520a6af58ffffffffff60f5557002af09481380a0a35cf1ba02ffffffffff60f655700292c5bdd3b92ec810287b1b3fffffffff60f755700277abdcdab07d5a77ac6d6b9fffffffff60f85570025daf6654b1eaa55fd64df5efffffffff60f955700244c49c648baa98192dce88b7ffffffff60fa5570022ce03cd5619a311b2471268bffffffff60fb55700215f77c045fbe885654a44a0fffffffff60fc556001600160811b0360fd557001eaefdbdaaee7421fc4d3ede5ffffffff60fe557001d6bd8b2eb257df7e8ca57b09bfffffff60ff557001c35fedd14b861eb0443f7f133fffffff610100557001b0ce43b322bcde4a56e8ada5afffffff6101015570019f0028ec1fff007f5a195a39dfffffff6101025570018ded91f0e72ee74f49b15ba527ffffff6101035570017d8ec7f04136f4e5615fd41a63ffffff6101045570016ddc6556cdb84bdc8d12d22e6fffffff6101055570015ecf52776a1155b5bd8395814f7fffff6101065570015060c256cb23b3b3cc3754cf40ffffff610107557001428a2f98d728ae223ddab715be3fffff6101085570013545598e5c23276ccf0ede68034fffff610109557001288c4161ce1d6f54b7f61081194fffff61010a5570011c592761c666aa641d5a01a40f17ffff61010b55700110a688680a7530515f3e6e6cfdcdffff61010c557001056f1b5bedf75c6bcb2ce8aed428ffff61010d556ffaadceceeff8a0890f3875f008277fff61010e556ff05dc6b27edad306388a600f6ba0bfff61010f556fe67a5a25da41063de1495d5b18cdbfff610110556fdcff115b14eedde6fc3aa5353f2e4fff610111556fd3e7a3924312399f9aae2e0f868f8fff610112556fcb2ff529eb71e41582cccd5a1ee26fff610113556fc2d415c3db974ab32a51840c0b67edff610114556fbad03e7d883f69ad5b0a186184e06bff610115556fb320d03b2c343d4829abd6075f0cc5ff610116556fabc25204e02828d73c6e80bcdb1a95bf610117556fa4b16f74ee4bb2040a1ec6c15fbbf2df610118556f9deaf736ac1f569deb1b5ae3f36c130f610119556f976bd9952c7aa957f5937d790ef6503761011a556f9131271922eaa6064b73a22d0bd4f2bf61011b556f8b380f3558668c46c91c49a2f8e967b961011c556f857ddf0117efa215952912839f6473e661011d5561011e805463ffffffff191663ffffffff92909216919091179055506200083990503060001962000954565b5062000c07565b600054610100900460ff1615620008ae5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b60648201526084015b60405180910390fd5b60005460ff9081161462000900576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600033620009648185856200096e565b5060019392505050565b6001600160a01b038316620009d25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401620008a5565b6001600160a01b03821662000a355760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401620008a5565b6001600160a01b0383811660008181526099602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168062000ac157607f821691505b60208210810362000ae257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000b3657600081815260208120601f850160051c8101602086101562000b115750805b601f850160051c820191505b8181101562000b325782815560010162000b1d565b5050505b505050565b81516001600160401b0381111562000b575762000b5762000a96565b62000b6f8162000b68845462000aac565b8462000ae8565b602080601f83116001811462000ba7576000841562000b8e5750858301515b600019600386901b1c1916600185901b17855562000b32565b600085815260208120601f198616915b8281101562000bd85788860151825594840194600190910190840162000bb7565b508582101562000bf75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6133f88062000c176000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80637cbed3e011610130578063a457c2d7116100b8578063dd62ed3e1161007c578063dd62ed3e146104bc578063f2fde38b146104cf578063f4325d67146104e2578063f851a440146104f6578063f8a2c98e1461051257600080fd5b8063a457c2d714610467578063a9059cbb1461047a578063c5f956af1461048d578063cb0aad36146104a1578063da12457a146104b457600080fd5b806395d89b41116100ff57806395d89b411461042857806396343886146104305780639db3ad7e14610443578063a0712d681461044b578063a10954fe1461045e57600080fd5b80637cbed3e0146103d05780638cf2b63e146103e35780638da5cb5b146104045780638e8ab69e1461041557600080fd5b806333a4ea06116101be57806349f9b0f71161018257806349f9b0f71461036f57806354fd4d5014610382578063630e90321461038a57806370a082311461039d578063715018a6146103c657600080fd5b806333a4ea061461030b57806339509351146103155780634162169f1461032857806341de68301461034d57806342966c681461035c57600080fd5b80630d8f9f7f116102055780630d8f9f7f146102ad57806318160ddd146102ce57806323b872dd146102d657806329a00e7c146102e9578063313ce567146102fc57600080fd5b806301ffc9a71461023757806306fdde031461025f578063095ea7b3146102745780630c7d5cd814610287575b600080fd5b61024a610245366004612f2c565b610539565b60405190151581526020015b60405180910390f35b610267610570565b6040516102569190612f5d565b61024a610282366004612fc0565b610602565b61011e546102989063ffffffff1681565b60405163ffffffff9091168152602001610256565b6102c06102bb366004612fec565b61061a565b604051908152602001610256565b609a546102c0565b61024a6102e4366004613005565b61063b565b6102c06102f736600461305f565b61065f565b60405160128152602001610256565b6102c06101235481565b61024a610323366004612fc0565b610768565b6065546001600160a01b03165b6040516001600160a01b039091168152602001610256565b6001604051610256919061309c565b6102c061036a366004612fec565b61078a565b6102c061037d36600461305f565b610864565b61026761097c565b6102986103983660046130c4565b610a0a565b6102c06103ab3660046130e6565b6001600160a01b031660009081526098602052604090205490565b6103ce610a25565b005b6102c06103de366004612fec565b610a39565b6102c06103f13660046130e6565b61011f6020526000908152604090205481565b6097546001600160a01b0316610335565b6103ce610423366004613103565b610a5a565b610267610c89565b6103ce61043e366004612fec565b610c98565b6102c0610ce1565b6102c0610459366004612fec565b610d63565b610120546102c0565b61024a610475366004612fc0565b610e3c565b61024a610488366004612fc0565b610eb7565b61012254610335906001600160a01b031681565b6103ce6104af366004612fec565b610ec5565b6102c06110b7565b6102c06104ca36600461317a565b6110c2565b6103ce6104dd3660046130e6565b6110ed565b61012154610335906001600160a01b031681565b61011e546103359064010000000090046001600160a01b031681565b6102c07f333faabe8d5b573697f548cb3885d6a81cd1e2ac87d1775bfec70a290e8e4d6081565b60006001600160e01b0319821663041de68360e41b148061056a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060609b805461057f906131b3565b80601f01602080910402602001604051908101604052809291908181526020018280546105ab906131b3565b80156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b5050505050905090565b600033610610818585611166565b5060019392505050565b600061056a6106276110b7565b6101205461011e5463ffffffff168561065f565b60003361064985828561128b565b6106548585856112ff565b506001949350505050565b600080851180156106705750600084115b8015610682575060008363ffffffff16115b80156106975750620f424063ffffffff841611155b6106da5760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21034b7383aba399760891b60448201526064015b60405180910390fd5b816000036106ea57506000610760565b620f423f1963ffffffff84160161071757836107068387613203565b6107109190613230565b9050610760565b600080806107258786613244565b9050610736818888620f42406114aa565b9093509150600060ff831661074b858b613203565b901c90506107598982613257565b9450505050505b949350505050565b60003361061081858561077b83836110c2565b6107859190613244565b611166565b6000806107968361162a565b33600090815261011f60205260409020549091506107b5908290613257565b33600090815261011f6020526040902055610120546107d5908290613257565b61012055610121546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d919061326a565b5092915050565b600080851180156108755750600084115b8015610887575060008363ffffffff16115b801561089c5750620f424063ffffffff841611155b80156108a85750848211155b6108e65760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21034b7383aba399760891b60448201526064016106d1565b816000036108f657506000610760565b848203610904575082610760565b620f423f1963ffffffff84160161092057846107068386613203565b6000808061092e8589613257565b905061093f8882620f4240896114aa565b909350915060006109508489613203565b905060ff831688901b846109648284613257565b61096e9190613230565b9a9950505050505050505050565b609d8054610989906131b3565b80601f01602080910402602001604051908101604052809291908181526020018280546109b5906131b3565b8015610a025780601f106109d757610100808354040283529160200191610a02565b820191906000526020600020905b8154815290600101906020018083116109e557829003601f168201915b505050505081565b600080620f4240610a1b8486613244565b610760919061328c565b610a2d611732565b610a37600061178c565b565b600061056a610a466110b7565b6101205461011e5463ffffffff1685610864565b600054610100900460ff1615808015610a7a5750600054600160ff909116105b80610a945750303b158015610a94575060005460ff166001145b610af75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106d1565b6000805460ff191660011790558015610b1a576000805461ff0019166101001790555b610b23876117de565b610b2d848461180e565b61011e80546001600160a01b0380891664010000000002640100000000600160c01b03199092169190911790915561012280548483166001600160a01b031991821617909155610120869055610121805492881692909116821790556323b872dd610b953390565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018790526064016020604051808303816000875af1158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c919061326a565b5033600090815261011f6020526040902054610c29908590613244565b33600090815261011f60205260409020558015610c80576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6060609c805461057f906131b3565b610ca2338261182e565b7f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f33826000604051610cd6939291906132a0565b60405180910390a150565b61012054610121546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5491906132c1565b610d5e9190613257565b905090565b33600090815261011f6020526040812054610d7f908390613244565b33600081815261011f60209081526040808320949094556101215484516323b872dd60e01b815260048101949094523060248501526044840187905293516001600160a01b03909416936323b872dd936064808201949183900301908290875af1158015610df1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e15919061326a565b506000610e218361195a565b90508261012054610e329190613244565b6101205592915050565b60003381610e4a82866110c2565b905083811015610eaa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106d1565b6106548286868403611166565b6000336106108185856112ff565b6000610ecf610ce1565b905081600103610f5657610121546101225460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af1158015610f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f54919061326a565b505b816002036110025730600090815261011f6020526040902054610f7a908290613244565b30600090815261011f6020526040812091909155610f978261061a565b9050610fa330826119f5565b7f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff308284604051610fd6939291906132a0565b60405180910390a18161012054610fed9190613244565b610120556110003063deadbeef836112ff565b505b816003036110b357610121546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611053573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107791906132c1565b610120556000611086609a5490565b905060006110978261012054610a0a565b61011e805463ffffffff191663ffffffff831617905590505b50505b5050565b6000610d5e609a5490565b6001600160a01b03918216600090815260996020908152604080832093909416825291909152205490565b6110f5611732565b6001600160a01b03811661115a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d1565b6111638161178c565b50565b6001600160a01b0383166111c85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106d1565b6001600160a01b0382166112295760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106d1565b6001600160a01b0383811660008181526099602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061129784846110c2565b905060001981146110b057818110156112f25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106d1565b6110b08484848403611166565b6001600160a01b0383166113635760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106d1565b6001600160a01b0382166113c55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106d1565b6001600160a01b0383166000908152609860205260409020548181101561143d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106d1565b6001600160a01b0380851660008181526098602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061149d9086815260200190565b60405180910390a36110b0565b600080600160811b86106115005760405162461bcd60e51b815260206004820152601860248201527f626173654e2065786365656473206d61782076616c75652e000000000000000060448201526064016106d1565b848610156115505760405162461bcd60e51b815260206004820152601c60248201527f4261736573203c203120617265206e6f7420737570706f727465642e0000000060448201526064016106d1565b600080866115626001607f1b8a613203565b61156c9190613230565b905070015bf0a8b1457695355fb8ac404e7a79e38110156115975761159081611ab6565b91506115a3565b6115a08161202f565b91505b60008563ffffffff168763ffffffff16846115be9190613203565b6115c89190613230565b9050600160831b8110156115ed576115df8161211e565b607f94509450505050611621565b60006115f882612749565b905061161461160882607f6132da565b60ff1683901c8261280e565b9550935061162192505050565b94509492505050565b600080821161167b5760405162461bcd60e51b815260206004820152601860248201527f416d6f756e74206d757374206265206e6f6e2d7a65726f2e000000000000000060448201526064016106d1565b336000908152609860205260409020548211156116da5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e7320746f206275726e2e0000000060448201526064016106d1565b60006116e583610a39565b90506116f1338461182e565b7f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f338483604051611724939291906132a0565b60405180910390a192915050565b6097546001600160a01b03163314610a375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d1565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166118055760405162461bcd60e51b81526004016106d1906132f3565b61116381612e75565b61011e805463ffffffff191663ffffffff83161790556110b333836119f5565b6001600160a01b03821661188e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106d1565b6001600160a01b038216600090815260986020526040902054818110156119025760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106d1565b6001600160a01b03831660008181526098602090815260408083208686039055609a80548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161127e565b60008082116119ab5760405162461bcd60e51b815260206004820152601960248201527f4465706f736974206d757374206265206e6f6e2d7a65726f2e0000000000000060448201526064016106d1565b60006119b68361061a565b90506119c233826119f5565b7f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff338285604051611724939291906132a0565b6001600160a01b038216611a4b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106d1565b80609a6000828254611a5d9190613244565b90915550506001600160a01b0382166000818152609860209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610611b0f57611ae16001607e1b85613244565b93506fd3094c70f034de4b96ff7d5b6f99fcd8611b026001607f1b88613203565b611b0c9190613230565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610611b6257611b346001607d1b85613244565b93506fa45af1e1f40c333b3de1db4dd55f29a7611b556001607f1b88613203565b611b5f9190613230565b95505b6f910b022db7ae67ce76b441c27035c6a18610611bb557611b876001607c1b85613244565b93506f910b022db7ae67ce76b441c27035c6a1611ba86001607f1b88613203565b611bb29190613230565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610611c0857611bda6001607b1b85613244565b93506f88415abbe9a76bead8d00cf112e4d4a8611bfb6001607f1b88613203565b611c059190613230565b95505b6f84102b00893f64c705e841d5d4064bd38610611c5b57611c2d6001607a1b85613244565b93506f84102b00893f64c705e841d5d4064bd3611c4e6001607f1b88613203565b611c589190613230565b95505b6f8204055aaef1c8bd5c3259f4822735a28610611cae57611c80600160791b85613244565b93506f8204055aaef1c8bd5c3259f4822735a2611ca16001607f1b88613203565b611cab9190613230565b95505b6f810100ab00222d861931c15e39b44e998610611d0157611cd3600160781b85613244565b93506f810100ab00222d861931c15e39b44e99611cf46001607f1b88613203565b611cfe9190613230565b95505b6f808040155aabbbe9451521693554f7338610611d5457611d26600160771b85613244565b93506f808040155aabbbe9451521693554f733611d476001607f1b88613203565b611d519190613230565b95505b611d626001607f1b87613257565b92508291506001607f1b611d768380613203565b611d809190613230565b9050600160801b611d918482613257565b611d9b9084613203565b611da59190613230565b611daf9085613244565b93506001607f1b611dc08284613203565b611dca9190613230565b9150600160811b611deb846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa613257565b611df59084613203565b611dff9190613230565b611e099085613244565b93506001607f1b611e1a8284613203565b611e249190613230565b9150600360801b611e45846f99999999999999999999999999999999613257565b611e4f9084613203565b611e599190613230565b611e639085613244565b93506001607f1b611e748284613203565b611e7e9190613230565b9150600160821b611e9f846f92492492492492492492492492492492613257565b611ea99084613203565b611eb39190613230565b611ebd9085613244565b93506001607f1b611ece8284613203565b611ed89190613230565b9150600560801b611ef9846f8e38e38e38e38e38e38e38e38e38e38e613257565b611f039084613203565b611f0d9190613230565b611f179085613244565b93506001607f1b611f288284613203565b611f329190613230565b9150600360811b611f53846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b613257565b611f5d9084613203565b611f679190613230565b611f719085613244565b93506001607f1b611f828284613203565b611f8c9190613230565b9150600760801b611fad846f89d89d89d89d89d89d89d89d89d89d89613257565b611fb79084613203565b611fc19190613230565b611fcb9085613244565b93506001607f1b611fdc8284613203565b611fe69190613230565b9150600160831b612007846f88888888888888888888888888888888613257565b6120119084613203565b61201b9190613230565b6120259085613244565b9695505050505050565b60008082600160801b81106120745760006120566120516001607f1b84613230565b612ebe565b60ff811692831c92909150612070906001607f1b90613203565b9250505b6001607f1b8111156120e957607f5b60ff8116156120e7576001607f1b61209b8380613203565b6120a59190613230565b9150600160801b82106120d757600191821c916120c290826132da565b60ff166001901b836120d49190613244565b92505b6120e08161333e565b9050612083565b505b6f05b9de1d10bf4103d647b0955897ba806121146f03f80fe03f80fe03f80fe03f80fe03f884613203565b6107609190613230565b60008080806121316001607c1b8661328c565b91508190506001607f1b6121458280613203565b61214f9190613230565b9050612163816710e1b3be415a0000613203565b61216d9084613244565b92506001607f1b61217e8383613203565b6121889190613230565b905061219c816705a0913f6b1e0000613203565b6121a69084613244565b92506001607f1b6121b78383613203565b6121c19190613230565b90506121d581670168244fdac78000613203565b6121df9084613244565b92506001607f1b6121f08383613203565b6121fa9190613230565b905061220d81664807432bc18000613203565b6122179084613244565b92506001607f1b6122288383613203565b6122329190613230565b905061224581660c0135dca04000613203565b61224f9084613244565b92506001607f1b6122608383613203565b61226a9190613230565b905061227d816601b707b1cdc000613203565b6122879084613244565b92506001607f1b6122988383613203565b6122a29190613230565b90506122b4816536e0f639b800613203565b6122be9084613244565b92506001607f1b6122cf8383613203565b6122d99190613230565b90506122eb81650618fee9f800613203565b6122f59084613244565b92506001607f1b6123068383613203565b6123109190613230565b905061232181649c197dcc00613203565b61232b9084613244565b92506001607f1b61233c8383613203565b6123469190613230565b905061235781640e30dce400613203565b6123619084613244565b92506001607f1b6123728383613203565b61237c9190613230565b905061238d8164012ebd1300613203565b6123979084613244565b92506001607f1b6123a88383613203565b6123b29190613230565b90506123c2816317499f00613203565b6123cc9084613244565b92506001607f1b6123dd8383613203565b6123e79190613230565b90506123f7816301a9d480613203565b6124019084613244565b92506001607f1b6124128383613203565b61241c9190613230565b905061242b81621c6380613203565b6124359084613244565b92506001607f1b6124468383613203565b6124509190613230565b905061245f816201c638613203565b6124699084613244565b92506001607f1b61247a8383613203565b6124849190613230565b905061249281611ab8613203565b61249c9084613244565b92506001607f1b6124ad8383613203565b6124b79190613230565b90506124c58161017c613203565b6124cf9084613244565b92506001607f1b6124e08383613203565b6124ea9190613230565b90506124f7816014613203565b6125019084613244565b92506001607f1b6125128383613203565b61251c9190613230565b9050612529816001613203565b6125339084613244565b92506001607f1b8261254d6721c3677c82b4000086613230565b6125579190613244565b6125619190613244565b92506001607c1b8516156125a95770018ebef9eac820ae8682b9793ac6d1e77661259c847001c3d6a24ed82218787d624d3e5eba95f9613203565b6125a69190613230565b92505b6001607d1b8516156125ef577001368b2fc6f9609fe7aceb46aa619baed46125e28470018ebef9eac820ae8682b9793ac6d1e778613203565b6125ec9190613230565b92505b6001607e1b851615612634576fbc5ab1b16779be3575bd8f0520a9f21f612627847001368b2fc6f9609fe7aceb46aa619baed5613203565b6126319190613230565b92505b6001607f1b851615612678576f454aaa8efe072e7f6ddbab84b40a55c961266b846fbc5ab1b16779be3575bd8f0520a9f21e613203565b6126759190613230565b92505b600160801b8516156126bc576f0960aadc109e7a3bf4578099615711ea6126af846f454aaa8efe072e7f6ddbab84b40a55c5613203565b6126b99190613230565b92505b600160811b8516156126ff576e2bf84208204f5977f9a8cf01fdce3d6126f2846f0960aadc109e7a3bf4578099615711d7613203565b6126fc9190613230565b92505b600160821b851615612740576d03c6ab775dd0b95b4cbee7e65d11612733846e2bf84208204f5977f9a8cf01fdc307613203565b61273d9190613230565b92505b50909392505050565b60006020607f5b60ff811661275f83600161335b565b60ff1610156127b25760006002612776838561335b565b6127809190613374565b905084609e8260ff166080811061279957612799613396565b0154106127a8578092506127ac565b8091505b50612750565b83609e8260ff16608081106127c9576127c9613396565b0154106127d7579392505050565b83609e8360ff16608081106127ee576127ee613396565b0154106127fc575092915050565b6128046133ac565b5060009392505050565b6000828160ff84166128208380613203565b901c915061283e826f03442c4e6074a82f1797f72ac0000000613203565b6128489082613244565b905060ff84166128588684613203565b901c9150612876826f0116b96f757c380fb287fd0e40000000613203565b6128809082613244565b905060ff84166128908684613203565b901c91506128ad826e45ae5bdd5f0e03eca1ff4390000000613203565b6128b79082613244565b905060ff84166128c78684613203565b901c91506128e4826e0defabf91302cd95b9ffda50000000613203565b6128ee9082613244565b905060ff84166128fe8684613203565b901c915061291b826e02529ca9832b22439efff9b8000000613203565b6129259082613244565b905060ff84166129358684613203565b901c9150612951826d54f1cf12bd04e516b6da88000000613203565b61295b9082613244565b905060ff841661296b8684613203565b901c9150612987826d0a9e39e257a09ca2d6db51000000613203565b6129919082613244565b905060ff84166129a18684613203565b901c91506129bd826d012e066e7b839fa050c309000000613203565b6129c79082613244565b905060ff84166129d78684613203565b901c91506129f2826c1e33d7d926c329a1ad1a800000613203565b6129fc9082613244565b905060ff8416612a0c8684613203565b901c9150612a27826c02bee513bdb4a6b19b5f800000613203565b612a319082613244565b905060ff8416612a418684613203565b901c9150612a5b826b3a9316fa79b88eccf2a00000613203565b612a659082613244565b905060ff8416612a758684613203565b901c9150612a8f826b048177ebe1fa812375200000613203565b612a999082613244565b905060ff8416612aa98684613203565b901c9150612ac2826a5263fe90242dcbacf00000613203565b612acc9082613244565b905060ff8416612adc8684613203565b901c9150612af5826a057e22099c030d94100000613203565b612aff9082613244565b905060ff8416612b0f8684613203565b901c9150612b27826957e22099c030d9410000613203565b612b319082613244565b905060ff8416612b418684613203565b901c9150612b598269052b6b54569976310000613203565b612b639082613244565b905060ff8416612b738684613203565b901c9150612b8a82684985f67696bf748000613203565b612b949082613244565b905060ff8416612ba48684613203565b901c9150612bbb826803dea12ea99e498000613203565b612bc59082613244565b905060ff8416612bd58684613203565b901c9150612beb826731880f2214b6e000613203565b612bf59082613244565b905060ff8416612c058684613203565b901c9150612c1b8267025bcff56eb36000613203565b612c259082613244565b905060ff8416612c358684613203565b901c9150612c4a82661b722e10ab1000613203565b612c549082613244565b905060ff8416612c648684613203565b901c9150612c79826601317c70077000613203565b612c839082613244565b905060ff8416612c938684613203565b901c9150612ca782650cba84aafa00613203565b612cb19082613244565b905060ff8416612cc18684613203565b901c9150612cd4826482573a0a00613203565b612cde9082613244565b905060ff8416612cee8684613203565b901c9150612d01826405035ad900613203565b612d0b9082613244565b905060ff8416612d1b8684613203565b901c9150612d2d82632f881b00613203565b612d379082613244565b905060ff8416612d478684613203565b901c9150612d59826301b29340613203565b612d639082613244565b905060ff8416612d738684613203565b901c9150612d8482620efc40613203565b612d8e9082613244565b905060ff8416612d9e8684613203565b901c9150612dae82617fe0613203565b612db89082613244565b905060ff8416612dc88684613203565b901c9150612dd882610420613203565b612de29082613244565b905060ff8416612df28684613203565b901c9150612e01826021613203565b612e0b9082613244565b905060ff8416612e1b8684613203565b901c9150612e2a826001613203565b612e349082613244565b9050600160ff85161b85612e586f0688589cc0e9505e2f2fee558000000084613230565b612e629190613244565b612e6c9190613244565b95945050505050565b600054610100900460ff16612e9c5760405162461bcd60e51b81526004016106d1906132f3565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b60008082610100811015612ef2575b6001811115612eed57600190811c90612ee6908361335b565b9150612ecd565b61085d565b60805b60ff811615612f2457600160ff82161b8210612f19579182179160ff81169190911c905b60011c607f16612ef5565b505092915050565b600060208284031215612f3e57600080fd5b81356001600160e01b031981168114612f5657600080fd5b9392505050565b600060208083528351808285015260005b81811015612f8a57858101830151858201604001528201612f6e565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461116357600080fd5b60008060408385031215612fd357600080fd5b8235612fde81612fab565b946020939093013593505050565b600060208284031215612ffe57600080fd5b5035919050565b60008060006060848603121561301a57600080fd5b833561302581612fab565b9250602084013561303581612fab565b929592945050506040919091013590565b803563ffffffff8116811461305a57600080fd5b919050565b6000806000806080858703121561307557600080fd5b843593506020850135925061308c60408601613046565b9396929550929360600135925050565b60208101600383106130be57634e487b7160e01b600052602160045260246000fd5b91905290565b600080604083850312156130d757600080fd5b50508035926020909101359150565b6000602082840312156130f857600080fd5b8135612f5681612fab565b60008060008060008060c0878903121561311c57600080fd5b863561312781612fab565b9550602087013561313781612fab565b9450604087013561314781612fab565b93506060870135925061315c60808801613046565b915060a087013561316c81612fab565b809150509295509295509295565b6000806040838503121561318d57600080fd5b823561319881612fab565b915060208301356131a881612fab565b809150509250929050565b600181811c908216806131c757607f821691505b6020821081036131e757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761056a5761056a6131ed565b634e487b7160e01b600052601260045260246000fd5b60008261323f5761323f61321a565b500490565b8082018082111561056a5761056a6131ed565b8181038181111561056a5761056a6131ed565b60006020828403121561327c57600080fd5b81518015158114612f5657600080fd5b60008261329b5761329b61321a565b500690565b6001600160a01b039390931683526020830191909152604082015260600190565b6000602082840312156132d357600080fd5b5051919050565b60ff828116828216039081111561056a5761056a6131ed565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060ff821680613351576133516131ed565b6000190192915050565b60ff818116838216019081111561056a5761056a6131ed565b600060ff8316806133875761338761321a565b8060ff84160491505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fdfea2646970667358221220c6618228b7bf51a2db9719b708a49f8640baee313727269aeb8cf9c895225a3d64736f6c63430008110033",
    "sourceMap": "561:29:77:-:0;920:4221:71;561:29:77;;920:4221:71;561:29:77;;;-1:-1:-1;;;561:29:77;;;;;;;;:::i;:::-;;2210:156:71;;;;;;;;;;456:135:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;456:135:73;;;576:6;541:5;548:7;862:22:61;:20;;;:22;;:::i;:::-;936:32:36;4979:10:71;936:18:36;:32::i;:::-;2046:5:45;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:45;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;;;;;;4042:15:77;:54;-1:-1:-1;;;;;;4106:15:77;:54;-1:-1:-1;;;;;4170:15:77;:54;-1:-1:-1;;;;;4234:15:77;:54;-1:-1:-1;;;;;4298:15:77;:54;-1:-1:-1;;;;;4362:15:77;:54;-1:-1:-1;;;;;4426:15:77;:54;-1:-1:-1;;;;;4490:15:77;:54;-1:-1:-1;;;;;4554:15:77;:54;-1:-1:-1;;;;;4618:15:77;:54;-1:-1:-1;;;;;4682:15:77;:54;-1:-1:-1;;;;;4746:15:77;:54;-1:-1:-1;;;;;4810:15:77;:54;-1:-1:-1;;;;;4874:15:77;:54;-1:-1:-1;;;;;4938:15:77;:54;-1:-1:-1;;;;;5002:15:77;:54;-1:-1:-1;;;;;5066:15:77;:54;-1:-1:-1;;;;;5130:15:77;:54;-1:-1:-1;;;;;5194:15:77;:54;-1:-1:-1;;;;;5258:15:77;:54;-1:-1:-1;;;;;5322:15:77;:54;-1:-1:-1;;;;;5386:15:77;:54;-1:-1:-1;;;;;5450:15:77;:54;-1:-1:-1;;;;;5514:15:77;:54;-1:-1:-1;;;;;5578:15:77;:54;-1:-1:-1;;;;;5642:15:77;:54;-1:-1:-1;;;;;5706:15:77;:54;-1:-1:-1;;;;;5770:15:77;:54;-1:-1:-1;;;;;5834:15:77;:54;-1:-1:-1;;;;;5898:15:77;:54;-1:-1:-1;;;;;5962:15:77;:54;-1:-1:-1;;;;;6026:15:77;:54;-1:-1:-1;;;;;6090:15:77;:54;-1:-1:-1;;;;;6154:15:77;:54;-1:-1:-1;;;;;6218:15:77;:54;-1:-1:-1;;;;;6282:15:77;:54;-1:-1:-1;;;;;6346:15:77;:54;-1:-1:-1;;;;;6410:15:77;:54;-1:-1:-1;;;;;6474:15:77;:54;-1:-1:-1;;;;;6538:15:77;:54;-1:-1:-1;;;;;6602:15:77;:54;-1:-1:-1;;;;;6666:15:77;:54;-1:-1:-1;;;;;6730:15:77;:54;-1:-1:-1;;;;;6794:15:77;:54;-1:-1:-1;;;;;6858:15:77;:54;6940:36;6922:15;:54;7004:36;6986:15;:54;7068:36;7050:15;:54;7132:36;7114:15;:54;7196:36;7178:15;:54;7260:36;7242:15;:54;7324:36;7306:15;:54;7388:36;7370:15;:54;7452:36;7434:15;:54;7516:36;7498:15;:54;7580:36;7562:15;:54;7644:36;7626:15;:54;7708:36;7690:15;:54;7772:36;7754:15;:54;7836:36;7818:15;:54;7900:36;7882:15;:54;7964:36;7946:15;:54;8028:36;8010:15;:54;-1:-1:-1;;;;;8074:15:77;:54;8156:36;8138:15;:54;8220:36;8202:15;:54;8284:36;8266:15;:54;8348:36;8330:15;:54;8413:36;8394:16;:55;8478:36;8459:16;:55;8543:36;8524:16;:55;8608:36;8589:16;:55;8673:36;8654:16;:55;8738:36;8719:16;:55;8803:36;8784:16;:55;8868:36;8849:16;:55;8933:36;8914:16;:55;8998:36;8979:16;:55;9063:36;9044:16;:55;9128:36;9109:16;:55;9193:36;9174:16;:55;9258:36;9239:16;:55;9323:36;9304:16;:55;9388:36;9369:16;:55;9453:36;9434:16;:55;9518:36;9499:16;:55;9583:36;9564:16;:55;9648:36;9629:16;:55;9713:36;9694:16;:55;9778:36;9759:16;:55;9843:36;9824:16;:55;9908:36;9889:16;:55;9973:36;9954:16;:55;10038:36;10019:16;:55;10103:36;10084:16;:55;10168:36;10149:16;:55;459:12:74;:28;;-1:-1:-1;;459:28:74;;;;;;;;;;;;-1:-1:-1;2321:38:71::1;::::0;-1:-1:-1;2337:4:71::1;-1:-1:-1::0;;2321:7:71::1;:38::i;:::-;;920:4221:::0;;5939:280:22;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:22;;3069:2:80;5998:66:22;;;3051:21:80;3108:2;3088:18;;;3081:30;3147:34;3127:18;;;3120:62;-1:-1:-1;;;3198:18:80;;;3191:37;3245:19;;5998:66:22;;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:22;6140:15;6125:30;;;;;;6174:28;;3417:36:80;;;6174:28:22;;3405:2:80;3390:18;6174:28:22;;;;;;;6074:139;5939:280::o;2426:187:36:-;2518:6;;;-1:-1:-1;;;;;2534:17:36;;;-1:-1:-1;;;;;;2534:17:36;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;4444:197:45:-;4527:4;4979:10:71;4581:32:45;4979:10:71;4597:7:45;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:45;;4444:197;-1:-1:-1;;;4444:197:45:o;10457:340::-;-1:-1:-1;;;;;10558:19:45;;10550:68;;;;-1:-1:-1;;;10550:68:45;;3666:2:80;10550:68:45;;;3648:21:80;3705:2;3685:18;;;3678:30;3744:34;3724:18;;;3717:62;-1:-1:-1;;;3795:18:80;;;3788:34;3839:19;;10550:68:45;3464:400:80;10550:68:45;-1:-1:-1;;;;;10636:21:45;;10628:68;;;;-1:-1:-1;;;10628:68:45;;4071:2:80;10628:68:45;;;4053:21:80;4110:2;4090:18;;;4083:30;4149:34;4129:18;;;4122:62;-1:-1:-1;;;4200:18:80;;;4193:32;4242:19;;10628:68:45;3869:398:80;10628:68:45;-1:-1:-1;;;;;10707:18:45;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;4418:25:80;;;10758:32:45;;4391:18:80;10758:32:45;;;;;;;10457:340;;;:::o;14:127:80:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:80;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:80;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:80;;;2580:26;2531:89;-1:-1:-1;;1335:1:80;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:80;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:80;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:80;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:80:o;4272:177::-;920:4221:71;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102325760003560e01c80637cbed3e011610130578063a457c2d7116100b8578063dd62ed3e1161007c578063dd62ed3e146104bc578063f2fde38b146104cf578063f4325d67146104e2578063f851a440146104f6578063f8a2c98e1461051257600080fd5b8063a457c2d714610467578063a9059cbb1461047a578063c5f956af1461048d578063cb0aad36146104a1578063da12457a146104b457600080fd5b806395d89b41116100ff57806395d89b411461042857806396343886146104305780639db3ad7e14610443578063a0712d681461044b578063a10954fe1461045e57600080fd5b80637cbed3e0146103d05780638cf2b63e146103e35780638da5cb5b146104045780638e8ab69e1461041557600080fd5b806333a4ea06116101be57806349f9b0f71161018257806349f9b0f71461036f57806354fd4d5014610382578063630e90321461038a57806370a082311461039d578063715018a6146103c657600080fd5b806333a4ea061461030b57806339509351146103155780634162169f1461032857806341de68301461034d57806342966c681461035c57600080fd5b80630d8f9f7f116102055780630d8f9f7f146102ad57806318160ddd146102ce57806323b872dd146102d657806329a00e7c146102e9578063313ce567146102fc57600080fd5b806301ffc9a71461023757806306fdde031461025f578063095ea7b3146102745780630c7d5cd814610287575b600080fd5b61024a610245366004612f2c565b610539565b60405190151581526020015b60405180910390f35b610267610570565b6040516102569190612f5d565b61024a610282366004612fc0565b610602565b61011e546102989063ffffffff1681565b60405163ffffffff9091168152602001610256565b6102c06102bb366004612fec565b61061a565b604051908152602001610256565b609a546102c0565b61024a6102e4366004613005565b61063b565b6102c06102f736600461305f565b61065f565b60405160128152602001610256565b6102c06101235481565b61024a610323366004612fc0565b610768565b6065546001600160a01b03165b6040516001600160a01b039091168152602001610256565b6001604051610256919061309c565b6102c061036a366004612fec565b61078a565b6102c061037d36600461305f565b610864565b61026761097c565b6102986103983660046130c4565b610a0a565b6102c06103ab3660046130e6565b6001600160a01b031660009081526098602052604090205490565b6103ce610a25565b005b6102c06103de366004612fec565b610a39565b6102c06103f13660046130e6565b61011f6020526000908152604090205481565b6097546001600160a01b0316610335565b6103ce610423366004613103565b610a5a565b610267610c89565b6103ce61043e366004612fec565b610c98565b6102c0610ce1565b6102c0610459366004612fec565b610d63565b610120546102c0565b61024a610475366004612fc0565b610e3c565b61024a610488366004612fc0565b610eb7565b61012254610335906001600160a01b031681565b6103ce6104af366004612fec565b610ec5565b6102c06110b7565b6102c06104ca36600461317a565b6110c2565b6103ce6104dd3660046130e6565b6110ed565b61012154610335906001600160a01b031681565b61011e546103359064010000000090046001600160a01b031681565b6102c07f333faabe8d5b573697f548cb3885d6a81cd1e2ac87d1775bfec70a290e8e4d6081565b60006001600160e01b0319821663041de68360e41b148061056a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060609b805461057f906131b3565b80601f01602080910402602001604051908101604052809291908181526020018280546105ab906131b3565b80156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b5050505050905090565b600033610610818585611166565b5060019392505050565b600061056a6106276110b7565b6101205461011e5463ffffffff168561065f565b60003361064985828561128b565b6106548585856112ff565b506001949350505050565b600080851180156106705750600084115b8015610682575060008363ffffffff16115b80156106975750620f424063ffffffff841611155b6106da5760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21034b7383aba399760891b60448201526064015b60405180910390fd5b816000036106ea57506000610760565b620f423f1963ffffffff84160161071757836107068387613203565b6107109190613230565b9050610760565b600080806107258786613244565b9050610736818888620f42406114aa565b9093509150600060ff831661074b858b613203565b901c90506107598982613257565b9450505050505b949350505050565b60003361061081858561077b83836110c2565b6107859190613244565b611166565b6000806107968361162a565b33600090815261011f60205260409020549091506107b5908290613257565b33600090815261011f6020526040902055610120546107d5908290613257565b61012055610121546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d919061326a565b5092915050565b600080851180156108755750600084115b8015610887575060008363ffffffff16115b801561089c5750620f424063ffffffff841611155b80156108a85750848211155b6108e65760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21034b7383aba399760891b60448201526064016106d1565b816000036108f657506000610760565b848203610904575082610760565b620f423f1963ffffffff84160161092057846107068386613203565b6000808061092e8589613257565b905061093f8882620f4240896114aa565b909350915060006109508489613203565b905060ff831688901b846109648284613257565b61096e9190613230565b9a9950505050505050505050565b609d8054610989906131b3565b80601f01602080910402602001604051908101604052809291908181526020018280546109b5906131b3565b8015610a025780601f106109d757610100808354040283529160200191610a02565b820191906000526020600020905b8154815290600101906020018083116109e557829003601f168201915b505050505081565b600080620f4240610a1b8486613244565b610760919061328c565b610a2d611732565b610a37600061178c565b565b600061056a610a466110b7565b6101205461011e5463ffffffff1685610864565b600054610100900460ff1615808015610a7a5750600054600160ff909116105b80610a945750303b158015610a94575060005460ff166001145b610af75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106d1565b6000805460ff191660011790558015610b1a576000805461ff0019166101001790555b610b23876117de565b610b2d848461180e565b61011e80546001600160a01b0380891664010000000002640100000000600160c01b03199092169190911790915561012280548483166001600160a01b031991821617909155610120869055610121805492881692909116821790556323b872dd610b953390565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018790526064016020604051808303816000875af1158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c919061326a565b5033600090815261011f6020526040902054610c29908590613244565b33600090815261011f60205260409020558015610c80576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6060609c805461057f906131b3565b610ca2338261182e565b7f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f33826000604051610cd6939291906132a0565b60405180910390a150565b61012054610121546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5491906132c1565b610d5e9190613257565b905090565b33600090815261011f6020526040812054610d7f908390613244565b33600081815261011f60209081526040808320949094556101215484516323b872dd60e01b815260048101949094523060248501526044840187905293516001600160a01b03909416936323b872dd936064808201949183900301908290875af1158015610df1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e15919061326a565b506000610e218361195a565b90508261012054610e329190613244565b6101205592915050565b60003381610e4a82866110c2565b905083811015610eaa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106d1565b6106548286868403611166565b6000336106108185856112ff565b6000610ecf610ce1565b905081600103610f5657610121546101225460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af1158015610f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f54919061326a565b505b816002036110025730600090815261011f6020526040902054610f7a908290613244565b30600090815261011f6020526040812091909155610f978261061a565b9050610fa330826119f5565b7f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff308284604051610fd6939291906132a0565b60405180910390a18161012054610fed9190613244565b610120556110003063deadbeef836112ff565b505b816003036110b357610121546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611053573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107791906132c1565b610120556000611086609a5490565b905060006110978261012054610a0a565b61011e805463ffffffff191663ffffffff831617905590505b50505b5050565b6000610d5e609a5490565b6001600160a01b03918216600090815260996020908152604080832093909416825291909152205490565b6110f5611732565b6001600160a01b03811661115a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d1565b6111638161178c565b50565b6001600160a01b0383166111c85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106d1565b6001600160a01b0382166112295760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106d1565b6001600160a01b0383811660008181526099602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061129784846110c2565b905060001981146110b057818110156112f25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106d1565b6110b08484848403611166565b6001600160a01b0383166113635760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106d1565b6001600160a01b0382166113c55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106d1565b6001600160a01b0383166000908152609860205260409020548181101561143d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106d1565b6001600160a01b0380851660008181526098602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061149d9086815260200190565b60405180910390a36110b0565b600080600160811b86106115005760405162461bcd60e51b815260206004820152601860248201527f626173654e2065786365656473206d61782076616c75652e000000000000000060448201526064016106d1565b848610156115505760405162461bcd60e51b815260206004820152601c60248201527f4261736573203c203120617265206e6f7420737570706f727465642e0000000060448201526064016106d1565b600080866115626001607f1b8a613203565b61156c9190613230565b905070015bf0a8b1457695355fb8ac404e7a79e38110156115975761159081611ab6565b91506115a3565b6115a08161202f565b91505b60008563ffffffff168763ffffffff16846115be9190613203565b6115c89190613230565b9050600160831b8110156115ed576115df8161211e565b607f94509450505050611621565b60006115f882612749565b905061161461160882607f6132da565b60ff1683901c8261280e565b9550935061162192505050565b94509492505050565b600080821161167b5760405162461bcd60e51b815260206004820152601860248201527f416d6f756e74206d757374206265206e6f6e2d7a65726f2e000000000000000060448201526064016106d1565b336000908152609860205260409020548211156116da5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e7320746f206275726e2e0000000060448201526064016106d1565b60006116e583610a39565b90506116f1338461182e565b7f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f338483604051611724939291906132a0565b60405180910390a192915050565b6097546001600160a01b03163314610a375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d1565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166118055760405162461bcd60e51b81526004016106d1906132f3565b61116381612e75565b61011e805463ffffffff191663ffffffff83161790556110b333836119f5565b6001600160a01b03821661188e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106d1565b6001600160a01b038216600090815260986020526040902054818110156119025760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106d1565b6001600160a01b03831660008181526098602090815260408083208686039055609a80548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161127e565b60008082116119ab5760405162461bcd60e51b815260206004820152601960248201527f4465706f736974206d757374206265206e6f6e2d7a65726f2e0000000000000060448201526064016106d1565b60006119b68361061a565b90506119c233826119f5565b7f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff338285604051611724939291906132a0565b6001600160a01b038216611a4b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106d1565b80609a6000828254611a5d9190613244565b90915550506001600160a01b0382166000818152609860209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610611b0f57611ae16001607e1b85613244565b93506fd3094c70f034de4b96ff7d5b6f99fcd8611b026001607f1b88613203565b611b0c9190613230565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610611b6257611b346001607d1b85613244565b93506fa45af1e1f40c333b3de1db4dd55f29a7611b556001607f1b88613203565b611b5f9190613230565b95505b6f910b022db7ae67ce76b441c27035c6a18610611bb557611b876001607c1b85613244565b93506f910b022db7ae67ce76b441c27035c6a1611ba86001607f1b88613203565b611bb29190613230565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610611c0857611bda6001607b1b85613244565b93506f88415abbe9a76bead8d00cf112e4d4a8611bfb6001607f1b88613203565b611c059190613230565b95505b6f84102b00893f64c705e841d5d4064bd38610611c5b57611c2d6001607a1b85613244565b93506f84102b00893f64c705e841d5d4064bd3611c4e6001607f1b88613203565b611c589190613230565b95505b6f8204055aaef1c8bd5c3259f4822735a28610611cae57611c80600160791b85613244565b93506f8204055aaef1c8bd5c3259f4822735a2611ca16001607f1b88613203565b611cab9190613230565b95505b6f810100ab00222d861931c15e39b44e998610611d0157611cd3600160781b85613244565b93506f810100ab00222d861931c15e39b44e99611cf46001607f1b88613203565b611cfe9190613230565b95505b6f808040155aabbbe9451521693554f7338610611d5457611d26600160771b85613244565b93506f808040155aabbbe9451521693554f733611d476001607f1b88613203565b611d519190613230565b95505b611d626001607f1b87613257565b92508291506001607f1b611d768380613203565b611d809190613230565b9050600160801b611d918482613257565b611d9b9084613203565b611da59190613230565b611daf9085613244565b93506001607f1b611dc08284613203565b611dca9190613230565b9150600160811b611deb846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa613257565b611df59084613203565b611dff9190613230565b611e099085613244565b93506001607f1b611e1a8284613203565b611e249190613230565b9150600360801b611e45846f99999999999999999999999999999999613257565b611e4f9084613203565b611e599190613230565b611e639085613244565b93506001607f1b611e748284613203565b611e7e9190613230565b9150600160821b611e9f846f92492492492492492492492492492492613257565b611ea99084613203565b611eb39190613230565b611ebd9085613244565b93506001607f1b611ece8284613203565b611ed89190613230565b9150600560801b611ef9846f8e38e38e38e38e38e38e38e38e38e38e613257565b611f039084613203565b611f0d9190613230565b611f179085613244565b93506001607f1b611f288284613203565b611f329190613230565b9150600360811b611f53846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b613257565b611f5d9084613203565b611f679190613230565b611f719085613244565b93506001607f1b611f828284613203565b611f8c9190613230565b9150600760801b611fad846f89d89d89d89d89d89d89d89d89d89d89613257565b611fb79084613203565b611fc19190613230565b611fcb9085613244565b93506001607f1b611fdc8284613203565b611fe69190613230565b9150600160831b612007846f88888888888888888888888888888888613257565b6120119084613203565b61201b9190613230565b6120259085613244565b9695505050505050565b60008082600160801b81106120745760006120566120516001607f1b84613230565b612ebe565b60ff811692831c92909150612070906001607f1b90613203565b9250505b6001607f1b8111156120e957607f5b60ff8116156120e7576001607f1b61209b8380613203565b6120a59190613230565b9150600160801b82106120d757600191821c916120c290826132da565b60ff166001901b836120d49190613244565b92505b6120e08161333e565b9050612083565b505b6f05b9de1d10bf4103d647b0955897ba806121146f03f80fe03f80fe03f80fe03f80fe03f884613203565b6107609190613230565b60008080806121316001607c1b8661328c565b91508190506001607f1b6121458280613203565b61214f9190613230565b9050612163816710e1b3be415a0000613203565b61216d9084613244565b92506001607f1b61217e8383613203565b6121889190613230565b905061219c816705a0913f6b1e0000613203565b6121a69084613244565b92506001607f1b6121b78383613203565b6121c19190613230565b90506121d581670168244fdac78000613203565b6121df9084613244565b92506001607f1b6121f08383613203565b6121fa9190613230565b905061220d81664807432bc18000613203565b6122179084613244565b92506001607f1b6122288383613203565b6122329190613230565b905061224581660c0135dca04000613203565b61224f9084613244565b92506001607f1b6122608383613203565b61226a9190613230565b905061227d816601b707b1cdc000613203565b6122879084613244565b92506001607f1b6122988383613203565b6122a29190613230565b90506122b4816536e0f639b800613203565b6122be9084613244565b92506001607f1b6122cf8383613203565b6122d99190613230565b90506122eb81650618fee9f800613203565b6122f59084613244565b92506001607f1b6123068383613203565b6123109190613230565b905061232181649c197dcc00613203565b61232b9084613244565b92506001607f1b61233c8383613203565b6123469190613230565b905061235781640e30dce400613203565b6123619084613244565b92506001607f1b6123728383613203565b61237c9190613230565b905061238d8164012ebd1300613203565b6123979084613244565b92506001607f1b6123a88383613203565b6123b29190613230565b90506123c2816317499f00613203565b6123cc9084613244565b92506001607f1b6123dd8383613203565b6123e79190613230565b90506123f7816301a9d480613203565b6124019084613244565b92506001607f1b6124128383613203565b61241c9190613230565b905061242b81621c6380613203565b6124359084613244565b92506001607f1b6124468383613203565b6124509190613230565b905061245f816201c638613203565b6124699084613244565b92506001607f1b61247a8383613203565b6124849190613230565b905061249281611ab8613203565b61249c9084613244565b92506001607f1b6124ad8383613203565b6124b79190613230565b90506124c58161017c613203565b6124cf9084613244565b92506001607f1b6124e08383613203565b6124ea9190613230565b90506124f7816014613203565b6125019084613244565b92506001607f1b6125128383613203565b61251c9190613230565b9050612529816001613203565b6125339084613244565b92506001607f1b8261254d6721c3677c82b4000086613230565b6125579190613244565b6125619190613244565b92506001607c1b8516156125a95770018ebef9eac820ae8682b9793ac6d1e77661259c847001c3d6a24ed82218787d624d3e5eba95f9613203565b6125a69190613230565b92505b6001607d1b8516156125ef577001368b2fc6f9609fe7aceb46aa619baed46125e28470018ebef9eac820ae8682b9793ac6d1e778613203565b6125ec9190613230565b92505b6001607e1b851615612634576fbc5ab1b16779be3575bd8f0520a9f21f612627847001368b2fc6f9609fe7aceb46aa619baed5613203565b6126319190613230565b92505b6001607f1b851615612678576f454aaa8efe072e7f6ddbab84b40a55c961266b846fbc5ab1b16779be3575bd8f0520a9f21e613203565b6126759190613230565b92505b600160801b8516156126bc576f0960aadc109e7a3bf4578099615711ea6126af846f454aaa8efe072e7f6ddbab84b40a55c5613203565b6126b99190613230565b92505b600160811b8516156126ff576e2bf84208204f5977f9a8cf01fdce3d6126f2846f0960aadc109e7a3bf4578099615711d7613203565b6126fc9190613230565b92505b600160821b851615612740576d03c6ab775dd0b95b4cbee7e65d11612733846e2bf84208204f5977f9a8cf01fdc307613203565b61273d9190613230565b92505b50909392505050565b60006020607f5b60ff811661275f83600161335b565b60ff1610156127b25760006002612776838561335b565b6127809190613374565b905084609e8260ff166080811061279957612799613396565b0154106127a8578092506127ac565b8091505b50612750565b83609e8260ff16608081106127c9576127c9613396565b0154106127d7579392505050565b83609e8360ff16608081106127ee576127ee613396565b0154106127fc575092915050565b6128046133ac565b5060009392505050565b6000828160ff84166128208380613203565b901c915061283e826f03442c4e6074a82f1797f72ac0000000613203565b6128489082613244565b905060ff84166128588684613203565b901c9150612876826f0116b96f757c380fb287fd0e40000000613203565b6128809082613244565b905060ff84166128908684613203565b901c91506128ad826e45ae5bdd5f0e03eca1ff4390000000613203565b6128b79082613244565b905060ff84166128c78684613203565b901c91506128e4826e0defabf91302cd95b9ffda50000000613203565b6128ee9082613244565b905060ff84166128fe8684613203565b901c915061291b826e02529ca9832b22439efff9b8000000613203565b6129259082613244565b905060ff84166129358684613203565b901c9150612951826d54f1cf12bd04e516b6da88000000613203565b61295b9082613244565b905060ff841661296b8684613203565b901c9150612987826d0a9e39e257a09ca2d6db51000000613203565b6129919082613244565b905060ff84166129a18684613203565b901c91506129bd826d012e066e7b839fa050c309000000613203565b6129c79082613244565b905060ff84166129d78684613203565b901c91506129f2826c1e33d7d926c329a1ad1a800000613203565b6129fc9082613244565b905060ff8416612a0c8684613203565b901c9150612a27826c02bee513bdb4a6b19b5f800000613203565b612a319082613244565b905060ff8416612a418684613203565b901c9150612a5b826b3a9316fa79b88eccf2a00000613203565b612a659082613244565b905060ff8416612a758684613203565b901c9150612a8f826b048177ebe1fa812375200000613203565b612a999082613244565b905060ff8416612aa98684613203565b901c9150612ac2826a5263fe90242dcbacf00000613203565b612acc9082613244565b905060ff8416612adc8684613203565b901c9150612af5826a057e22099c030d94100000613203565b612aff9082613244565b905060ff8416612b0f8684613203565b901c9150612b27826957e22099c030d9410000613203565b612b319082613244565b905060ff8416612b418684613203565b901c9150612b598269052b6b54569976310000613203565b612b639082613244565b905060ff8416612b738684613203565b901c9150612b8a82684985f67696bf748000613203565b612b949082613244565b905060ff8416612ba48684613203565b901c9150612bbb826803dea12ea99e498000613203565b612bc59082613244565b905060ff8416612bd58684613203565b901c9150612beb826731880f2214b6e000613203565b612bf59082613244565b905060ff8416612c058684613203565b901c9150612c1b8267025bcff56eb36000613203565b612c259082613244565b905060ff8416612c358684613203565b901c9150612c4a82661b722e10ab1000613203565b612c549082613244565b905060ff8416612c648684613203565b901c9150612c79826601317c70077000613203565b612c839082613244565b905060ff8416612c938684613203565b901c9150612ca782650cba84aafa00613203565b612cb19082613244565b905060ff8416612cc18684613203565b901c9150612cd4826482573a0a00613203565b612cde9082613244565b905060ff8416612cee8684613203565b901c9150612d01826405035ad900613203565b612d0b9082613244565b905060ff8416612d1b8684613203565b901c9150612d2d82632f881b00613203565b612d379082613244565b905060ff8416612d478684613203565b901c9150612d59826301b29340613203565b612d639082613244565b905060ff8416612d738684613203565b901c9150612d8482620efc40613203565b612d8e9082613244565b905060ff8416612d9e8684613203565b901c9150612dae82617fe0613203565b612db89082613244565b905060ff8416612dc88684613203565b901c9150612dd882610420613203565b612de29082613244565b905060ff8416612df28684613203565b901c9150612e01826021613203565b612e0b9082613244565b905060ff8416612e1b8684613203565b901c9150612e2a826001613203565b612e349082613244565b9050600160ff85161b85612e586f0688589cc0e9505e2f2fee558000000084613230565b612e629190613244565b612e6c9190613244565b95945050505050565b600054610100900460ff16612e9c5760405162461bcd60e51b81526004016106d1906132f3565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b60008082610100811015612ef2575b6001811115612eed57600190811c90612ee6908361335b565b9150612ecd565b61085d565b60805b60ff811615612f2457600160ff82161b8210612f19579182179160ff81169190911c905b60011c607f16612ef5565b505092915050565b600060208284031215612f3e57600080fd5b81356001600160e01b031981168114612f5657600080fd5b9392505050565b600060208083528351808285015260005b81811015612f8a57858101830151858201604001528201612f6e565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461116357600080fd5b60008060408385031215612fd357600080fd5b8235612fde81612fab565b946020939093013593505050565b600060208284031215612ffe57600080fd5b5035919050565b60008060006060848603121561301a57600080fd5b833561302581612fab565b9250602084013561303581612fab565b929592945050506040919091013590565b803563ffffffff8116811461305a57600080fd5b919050565b6000806000806080858703121561307557600080fd5b843593506020850135925061308c60408601613046565b9396929550929360600135925050565b60208101600383106130be57634e487b7160e01b600052602160045260246000fd5b91905290565b600080604083850312156130d757600080fd5b50508035926020909101359150565b6000602082840312156130f857600080fd5b8135612f5681612fab565b60008060008060008060c0878903121561311c57600080fd5b863561312781612fab565b9550602087013561313781612fab565b9450604087013561314781612fab565b93506060870135925061315c60808801613046565b915060a087013561316c81612fab565b809150509295509295509295565b6000806040838503121561318d57600080fd5b823561319881612fab565b915060208301356131a881612fab565b809150509250929050565b600181811c908216806131c757607f821691505b6020821081036131e757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761056a5761056a6131ed565b634e487b7160e01b600052601260045260246000fd5b60008261323f5761323f61321a565b500490565b8082018082111561056a5761056a6131ed565b8181038181111561056a5761056a6131ed565b60006020828403121561327c57600080fd5b81518015158114612f5657600080fd5b60008261329b5761329b61321a565b500690565b6001600160a01b039390931683526020830191909152604082015260600190565b6000602082840312156132d357600080fd5b5051919050565b60ff828116828216039081111561056a5761056a6131ed565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060ff821680613351576133516131ed565b6000190192915050565b60ff818116838216019081111561056a5761056a6131ed565b600060ff8316806133875761338761321a565b8060ff84160491505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fdfea2646970667358221220c6618228b7bf51a2db9719b708a49f8640baee313727269aeb8cf9c895225a3d64736f6c63430008110033",
    "sourceMap": "920:4221:71:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1488:198:61;;;;;;:::i;:::-;;:::i;:::-;;;470:14:80;;463:22;445:41;;433:2;418:18;1488:198:61;;;;;;;;2158:98:45;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;:::i;:::-;;:::i;382:26:74:-;;;;;;;;;;;;1680:10:80;1668:23;;;1650:42;;1638:2;1623:18;382:26:74;1506:192:80;610:215:74;;;;;;:::i;:::-;;:::i;:::-;;;2034:25:80;;;2022:2;2007:18;610:215:74;1888:177:80;3255:106:45;3342:12;;3255:106;;5203:256;;;;;;:::i;:::-;;:::i;1145:1123:76:-;;;;;;:::i;:::-;;:::i;3104:91:45:-;;;3186:2;3235:36:80;;3223:2;3208:18;3104:91:45;3093:184:80;1430:18:71;;;;;;5854:234:45;;;;;;:::i;:::-;;:::i;1122:70:63:-;1181:4;;-1:-1:-1;;;;;1181:4:63;1122:70;;;-1:-1:-1;;;;;3460:32:80;;;3442:51;;3430:2;3415:18;1122:70:63;3282:217:80;1172:108:61;1253:20;1172:108;;;;;;:::i;2714:334:71:-;;;;;;:::i;:::-;;:::i;2953:1143:76:-;;;;;;:::i;:::-;;:::i;561:29:77:-;;;:::i;4565:275:71:-;;;;;;:::i;:::-;;:::i;3419:125:45:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:45;3493:7;3519:18;;;:9;:18;;;;;;;3419:125;1824:101:36;;;:::i;:::-;;831:217:74;;;;;;:::i;:::-;;:::i;1204:49:71:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1201:85:36;1273:6;;-1:-1:-1;;;;;1273:6:36;1201:85;;1586:613:71;;;;;;:::i;:::-;;:::i;2369:102:45:-;;;:::i;1749:132:73:-;;;;;;:::i;:::-;;:::i;3155:124:71:-;;;:::i;2372:336::-;;;;;;:::i;:::-;;:::i;3054:93::-;3133:7;;3054:93;;6575:427:45;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;1321:31:71:-;;;;;-1:-1:-1;;;;;1321:31:71;;;3287:1272;;;;;;:::i;:::-;;:::i;880:134:73:-;;;:::i;3987:149:45:-;;;;;;:::i;:::-;;:::i;2074:198:36:-;;;;;;:::i;:::-;;:::i;1290:25:71:-;;;;;-1:-1:-1;;;;;1290:25:71;;;1177:20;;;;;;;;-1:-1:-1;;;;;1177:20:71;;;1077:91;;1131:37;1077:91;;1488:198:61;1574:4;-1:-1:-1;;;;;;1597:41:61;;-1:-1:-1;;;1597:41:61;;:82;;-1:-1:-1;;;;;;;;;;1168:51:34;;;1642:37:61;1590:89;1488:198;-1:-1:-1;;1488:198:61:o;2158:98:45:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4979:10:71;4581:32:45;4979:10:71;4597:7:45;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:45;;4444:197;-1:-1:-1;;;4444:197:45:o;610:215:74:-;699:4;722:96;746:18;:16;:18::i;:::-;3133:7:71;;784:12:74;;;;798:19;722:23;:96::i;5203:256:45:-;5300:4;4979:10:71;5356:38:45;5372:4;4979:10:71;5387:6:45;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:45;;5203:256;-1:-1:-1;;;;5203:256:45:o;1145:1123:76:-;1320:7;1550:1;1540:7;:11;:34;;;;;1573:1;1555:15;:19;1540:34;:55;;;;;1594:1;1578:13;:17;;;1540:55;:93;;;;-1:-1:-1;466:7:76;1599:34;;;;;1540:93;1532:121;;;;-1:-1:-1;;;1532:121:76;;6783:2:80;1532:121:76;;;6765:21:80;6822:2;6802:18;;;6795:30;-1:-1:-1;;;6841:18:80;;;6834:45;6896:18;;1532:121:76;;;;;;;;;1712:14;1730:1;1712:19;1708:58;;-1:-1:-1;1754:1:76;1747:8;;1708:58;-1:-1:-1;;1823:34:76;;;;1819:112;;1905:15;1881:22;1889:14;1881:7;:22;:::i;:::-;1880:40;;;;:::i;:::-;1873:47;;;;1819:112;1940:14;;;2005:32;2022:15;2005:14;:32;:::i;:::-;1989:48;;2069:85;2088:5;2095:15;2112:13;466:7;2069:5;:85::i;:::-;2047:107;;-1:-1:-1;2047:107:76;-1:-1:-1;2164:22:76;2189:31;;;2190:16;2047:107;2190:7;:16;:::i;:::-;2189:31;;;-1:-1:-1;2237:24:76;2254:7;2189:31;2237:24;:::i;:::-;2230:31;;;;;;1145:1123;;;;;;;:::o;5854:234:45:-;5942:4;4979:10:71;5996:64:45;4979:10:71;6012:7:45;6049:10;6021:25;4979:10:71;6012:7:45;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2714:334:71:-;2757:4;2773:17;2793:24;2809:7;2793:15;:24::i;:::-;4979:10;2861:31;;;;:17;:31;;;;;;2773:44;;-1:-1:-1;2861:48:71;;2773:44;;2861:48;:::i;:::-;4979:10;2827:31;;;;:17;:31;;;;;:82;2929:7;;:24;;2940:12;;2929:24;:::i;:::-;2919:7;:34;2963:12;;-1:-1:-1;;;;;2963:12:71;:21;4979:10;2963:49;;-1:-1:-1;;;;;;2963:49:71;;;;;;;-1:-1:-1;;;;;7942:32:80;;;2963:49:71;;;7924:51:80;7991:18;;;7984:34;;;7897:18;;2963:49:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3029:12:71;2714:334;-1:-1:-1;;2714:334:71:o;2953:1143:76:-;3121:7;3188:1;3178:7;:11;:34;;;;;3211:1;3193:15;:19;3178:34;:55;;;;;3232:1;3216:13;:17;;;3178:55;:93;;;;-1:-1:-1;466:7:76;3237:34;;;;;3178:93;:119;;;;;3290:7;3275:11;:22;;3178:119;3170:147;;;;-1:-1:-1;;;3170:147:76;;6783:2:80;3170:147:76;;;6765:21:80;6822:2;6802:18;;;6795:30;-1:-1:-1;;;6841:18:80;;;6834:45;6896:18;;3170:147:76;6581:339:80;3170:147:76;3373:11;3388:1;3373:16;3369:55;;-1:-1:-1;3412:1:76;3405:8;;3369:55;3506:7;3491:11;:22;3487:75;;-1:-1:-1;3536:15:76;3529:22;;3487:75;-1:-1:-1;;3619:34:76;;;;3615:109;;3706:7;3677:27;3693:11;3677:15;:27;:::i;3615:109::-;3733:14;;;3798:21;3808:11;3798:7;:21;:::i;:::-;3782:37;;3851:77;3870:7;3879:5;466:7;3905:13;3851:5;:77::i;:::-;3829:99;;-1:-1:-1;3829:99:76;-1:-1:-1;3938:18:76;3959:22;3829:99;3959:15;:22;:::i;:::-;3938:43;-1:-1:-1;4012:28:76;;;;;;4082:6;4058:21;4012:28;3938:43;4058:21;:::i;:::-;4057:32;;;;:::i;:::-;4050:39;2953:1143;-1:-1:-1;;;;;;;;;;2953:1143:76:o;561:29:77:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4565:275:71:-;4646:6;;4749:7;4727:18;4737:8;4727:7;:18;:::i;:::-;4726:30;;;;:::i;1824:101:36:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;831:217:74:-;923:4;946:95;966:18;:16;:18::i;:::-;3133:7:71;;1004:12:74;;;;1018:22;946:19;:95::i;1586:613:71:-;3279:19:22;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:22;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:22;1713:19:30;:23;;;3387:66:22;;-1:-1:-1;3436:12:22;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:22;;8630:2:80;3325:201:22;;;8612:21:80;8669:2;8649:18;;;8642:30;8708:34;8688:18;;;8681:62;-1:-1:-1;;;8759:18:80;;;8752:44;8813:19;;3325:201:22;8428:410:80;3325:201:22;3536:12;:16;;-1:-1:-1;;3536:16:22;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:22;;;;;3562:65;1757:28:71::1;1780:4;1757:22;:28::i;:::-;1795:61;1825:15;1842:13;1795:29;:61::i;:::-;1867:5;:14:::0;;-1:-1:-1;;;;;1867:14:71;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;1867:14:71;;::::1;::::0;;;::::1;::::0;;;1891:15:::1;:34:::0;;;;::::1;-1:-1:-1::0;;;;;;1891:34:71;;::::1;;::::0;;;1946:7:::1;:25:::0;;;1981:12:::1;:35:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;2026:25:::1;2052:12;4979:10:::0;;4862:132;2052:12:::1;2026:71;::::0;-1:-1:-1;;;;;;2026:71:71::1;::::0;;;;;;-1:-1:-1;;;;;9101:15:80;;;2026:71:71::1;::::0;::::1;9083:34:80::0;2074:4:71::1;9133:18:80::0;;;9126:43;9185:18;;;9178:34;;;9018:18;;2026:71:71::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4979:10:71;2141:31:::1;::::0;;;:17:::1;:31;::::0;;;;;:51:::1;::::0;2176:15;;2141:51:::1;:::i;:::-;4979:10:::0;2107:31:::1;::::0;;;:17:::1;:31;::::0;;;;:85;3647:99:22;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:22;;;3721:14;;-1:-1:-1;3235:36:80;;3721:14:22;;3223:2:80;3208:18;3721:14:22;;;;;;;3647:99;3269:483;1586:613:71;;;;;;:::o;2369:102:45:-;2425:13;2457:7;2450:14;;;;;:::i;1749:132:73:-;1803:26;1809:10;1821:7;1803:5;:26::i;:::-;1844:30;1851:10;1863:7;1872:1;1844:30;;;;;;;;:::i;:::-;;;;;;;;1749:132;:::o;3155:124:71:-;3265:7;;3225:12;;:37;;-1:-1:-1;;;3225:37:71;;3256:4;3225:37;;;3442:51:80;3202:4:71;;3265:7;-1:-1:-1;;;;;3225:12:71;;:22;;3415:18:80;;3225:37:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;3218:54;;3155:124;:::o;2372:336::-;4979:10;2415:4;2465:31;;;:17;:31;;;;;;:41;;2499:7;;2465:41;:::i;:::-;4979:10;2431:31;;;;:17;:31;;;;;;;;:75;;;;2516:12;;:63;;-1:-1:-1;;;2516:63:71;;;;;9083:34:80;;;;2564:4:71;9133:18:80;;;9126:43;9185:18;;;9178:34;;;2516:63:71;;-1:-1:-1;;;;;2516:12:71;;;;:25;;9018:18:80;;;;;2516:63:71;;;;;;;;:12;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2589:17;2609:24;2625:7;2609:15;:24::i;:::-;2589:44;;2664:7;2653;;:19;;;;:::i;:::-;2643:7;:29;2689:12;2372:336;-1:-1:-1;;2372:336:71:o;6575:427:45:-;6668:4;4979:10:71;6668:4:45;6749:25;4979:10:71;6766:7:45;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:45;;10171:2:80;6784:85:45;;;10153:21:80;10210:2;10190:18;;;10183:30;10249:34;10229:18;;;10222:62;-1:-1:-1;;;10300:18:80;;;10293:35;10345:19;;6784:85:45;9969:401:80;6784:85:45;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;4979:10:71;3873:28:45;4979:10:71;3890:2:45;3894:6;3873:9;:28::i;3287:1272:71:-;3343:12;3358:16;:14;:16::i;:::-;3343:31;;3428:4;3436:1;3428:9;3425:98;;3465:12;;3487:15;;3465:47;;-1:-1:-1;;;3465:47:71;;-1:-1:-1;;;;;3487:15:71;;;3465:47;;;7924:51:80;7991:18;;;7984:34;;;3465:12:71;;;:21;;7897:18:80;;3465:47:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3425:98;3576:4;3584:1;3576:9;3573:676;;3712:4;3686:32;;;;:17;:32;;;;;;:42;;3721:7;;3686:42;:::i;:::-;3677:4;3651:32;;;;:17;:32;;;;;:77;;;;3836:32;3860:7;3836:23;:32::i;:::-;3816:52;;3882:34;3896:4;3903:12;3882:5;:34::i;:::-;3935:44;3950:4;3957:12;3971:7;3935:44;;;;;;;;:::i;:::-;;;;;;;;4049:7;4038;;:19;;;;:::i;:::-;4028:7;:29;4178:59;4196:4;4211:10;4224:12;4178:9;:59::i;:::-;3587:662;3573:676;4301:4;4309:1;4301:9;4297:255;;4336:12;;:37;;-1:-1:-1;;;4336:37:71;;4367:4;4336:37;;;3442:51:80;-1:-1:-1;;;;;4336:12:71;;;;:22;;3415:18:80;;4336:37:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4326:7;:47;4388:11;4402:13;3342:12:45;;;3255:106;4402:13:71;4388:27;;4429:22;4454:38;4476:6;4484:7;;4454:21;:38::i;:::-;569:12:74;:28;;-1:-1:-1;;569:28:74;;;;;;;4429:63:71;-1:-1:-1;4506:35:71;4312:240;;4297:255;3333:1226;3287:1272;:::o;880:134:73:-;938:4;961:13;3342:12:45;;;3255:106;3987:149;-1:-1:-1;;;;;4102:18:45;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:36:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:36;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:36;;10927:2:80;2154:73:36::1;::::0;::::1;10909:21:80::0;10966:2;10946:18;;;10939:30;11005:34;10985:18;;;10978:62;-1:-1:-1;;;11056:18:80;;;11049:36;11102:19;;2154:73:36::1;10725:402:80::0;2154:73:36::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;10457:340:45:-;-1:-1:-1;;;;;10558:19:45;;10550:68;;;;-1:-1:-1;;;10550:68:45;;11334:2:80;10550:68:45;;;11316:21:80;11373:2;11353:18;;;11346:30;11412:34;11392:18;;;11385:62;-1:-1:-1;;;11463:18:80;;;11456:34;11507:19;;10550:68:45;11132:400:80;10550:68:45;-1:-1:-1;;;;;10636:21:45;;10628:68;;;;-1:-1:-1;;;10628:68:45;;11739:2:80;10628:68:45;;;11721:21:80;11778:2;11758:18;;;11751:30;11817:34;11797:18;;;11790:62;-1:-1:-1;;;11868:18:80;;;11861:32;11910:19;;10628:68:45;11537:398:80;10628:68:45;-1:-1:-1;;;;;10707:18:45;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;2034:25:80;;;10758:32:45;;2007:18:80;10758:32:45;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:45;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:45;;12142:2:80;11297:68:45;;;12124:21:80;12181:2;12161:18;;;12154:30;12220:31;12200:18;;;12193:59;12269:18;;11297:68:45;11940:353:80;11297:68:45;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;7456:788::-;-1:-1:-1;;;;;7552:18:45;;7544:68;;;;-1:-1:-1;;;7544:68:45;;12500:2:80;7544:68:45;;;12482:21:80;12539:2;12519:18;;;12512:30;12578:34;12558:18;;;12551:62;-1:-1:-1;;;12629:18:80;;;12622:35;12674:19;;7544:68:45;12298:401:80;7544:68:45;-1:-1:-1;;;;;7630:16:45;;7622:64;;;;-1:-1:-1;;;7622:64:45;;12906:2:80;7622:64:45;;;12888:21:80;12945:2;12925:18;;;12918:30;12984:34;12964:18;;;12957:62;-1:-1:-1;;;13035:18:80;;;13028:33;13078:19;;7622:64:45;12704:399:80;7622:64:45;-1:-1:-1;;;;;7768:15:45;;7746:19;7768:15;;;:9;:15;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:45;;13310:2:80;7793:72:45;;;13292:21:80;13349:2;13329:18;;;13322:30;13388:34;13368:18;;;13361:62;-1:-1:-1;;;13439:18:80;;;13432:36;13485:19;;7793:72:45;13108:402:80;7793:72:45;-1:-1:-1;;;;;7899:15:45;;;;;;;:9;:15;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;;;;;7931:6;2034:25:80;;2022:2;2007:18;;1888:177;8163:26:45;;;;;;;;8200:37;9375:659;11597:892:77;11733:7;11742:5;-1:-1:-1;;;11771:6:77;:16;11763:53;;;;-1:-1:-1;;;11763:53:77;;13717:2:80;11763:53:77;;;13699:21:80;13756:2;13736:18;;;13729:30;13795:26;13775:18;;;13768:54;13839:18;;11763:53:77;13515:348:80;11763:53:77;11844:6;11834;:16;;11826:57;;;;-1:-1:-1;;;11826:57:77;;14070:2:80;11826:57:77;;;14052:21:80;14109:2;14089:18;;;14082:30;14148;14128:18;;;14121:58;14196:18;;11826:57:77;13868:352:80;11826:57:77;11894:15;;11953:6;11934:16;-1:-1:-1;;;11934:6:77;:16;:::i;:::-;:25;;;;:::i;:::-;11919:40;;1584:35;11973:4;:22;11969:136;;;12021:16;12032:4;12021:10;:16::i;:::-;12011:26;;11969:136;;;12078:16;12089:4;12078:10;:16::i;:::-;12068:26;;11969:136;12115:23;12159:5;12141:23;;12151:5;12141:15;;:7;:15;;;;:::i;:::-;:23;;;;:::i;:::-;12115:49;;-1:-1:-1;;;12178:15:77;:33;12174:309;;;12235:27;12246:15;12235:10;:27::i;:::-;771:3;12227:51;;;;;;;;;12174:309;12309:15;12327:42;12353:15;12327:25;:42::i;:::-;12309:60;-1:-1:-1;12391:69:77;12422:25;12309:60;771:3;12422:25;:::i;:::-;12402:46;;:15;:46;;12450:9;12391:10;:69::i;:::-;12383:89;-1:-1:-1;12462:9:77;-1:-1:-1;12383:89:77;;-1:-1:-1;;;12383:89:77;11597:892;;;;;;;;:::o;1348:395:73:-;1405:4;1439:1;1429:7;:11;1421:48;;;;-1:-1:-1;;;1421:48:73;;14583:2:80;1421:48:73;;;14565:21:80;14622:2;14602:18;;;14595:30;14661:26;14641:18;;;14634:54;14705:18;;1421:48:73;14381:348:80;1421:48:73;1497:10;3493:7:45;3519:18;;;:9;:18;;;;;;1512:7:73;-1:-1:-1;1487:32:73;1479:73;;;;-1:-1:-1;;;1479:73:73;;14936:2:80;1479:73:73;;;14918:21:80;14975:2;14955:18;;;14948:30;15014;14994:18;;;14987:58;15062:18;;1479:73:73;14734:352:80;1479:73:73;1563:17;1583:32;1607:7;1583:23;:32::i;:::-;1563:52;;1625:26;1631:10;1643:7;1625:5;:26::i;:::-;1666:41;1673:10;1685:7;1694:12;1666:41;;;;;;;;:::i;:::-;;;;;;;;1724:12;1348:395;-1:-1:-1;;1348:395:73:o;1359:130:36:-;1273:6;;-1:-1:-1;;;;;1273:6:36;4979:10:71;1422:23:36;1414:68;;;;-1:-1:-1;;;1414:68:36;;15293:2:80;1414:68:36;;;15275:21:80;;;15312:18;;;15305:30;15371:34;15351:18;;;15344:62;15423:18;;1414:68:36;15091:356:80;2426:187:36;2518:6;;;-1:-1:-1;;;;;2534:17:36;;;-1:-1:-1;;;;;;2534:17:36;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;1005:133:61:-;5374:13:22;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:22;;;;;;;:::i;:::-;1092:39:61::1;1126:4;1092:33;:39::i;689:185:73:-:0;569:12:74;:28;;-1:-1:-1;;569:28:74;;;;;;;833:33:73;839:10;851:14;833:5;:33::i;9375:659:45:-;-1:-1:-1;;;;;9458:21:45;;9450:67;;;;-1:-1:-1;;;9450:67:45;;16066:2:80;9450:67:45;;;16048:21:80;16105:2;16085:18;;;16078:30;16144:34;16124:18;;;16117:62;-1:-1:-1;;;16195:18:80;;;16188:31;16236:19;;9450:67:45;15864:397:80;9450:67:45;-1:-1:-1;;;;;9613:18:45;;9588:22;9613:18;;;:9;:18;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:45;;16468:2:80;9641:71:45;;;16450:21:80;16507:2;16487:18;;;16480:30;16546:34;16526:18;;;16519:62;-1:-1:-1;;;16597:18:80;;;16590:32;16639:19;;9641:71:45;16266:398:80;9641:71:45;-1:-1:-1;;;;;9746:18:45;;;;;;:9;:18;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;2034:25:80;;;9746:18:45;;;9931:37;;2007:18:80;9931:37:45;1888:177:80;1020:322:73;1078:4;1113:1;1102:8;:12;1094:50;;;;-1:-1:-1;;;1094:50:73;;16871:2:80;1094:50:73;;;16853:21:80;16910:2;16890:18;;;16883:30;16949:27;16929:18;;;16922:55;16994:18;;1094:50:73;16669:349:80;1094:50:73;1155:17;1175:33;1199:8;1175:23;:33::i;:::-;1155:53;;1218:31;1224:10;1236:12;1218:5;:31::i;:::-;1264:42;1271:10;1283:12;1297:8;1264:42;;;;;;;;:::i;8520:535:45:-;-1:-1:-1;;;;;8603:21:45;;8595:65;;;;-1:-1:-1;;;8595:65:45;;17225:2:80;8595:65:45;;;17207:21:80;17264:2;17244:18;;;17237:30;17303:33;17283:18;;;17276:61;17354:18;;8595:65:45;17023:355:80;8595:65:45;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:45;;;;;;:9;:18;;;;;;;;:28;;;;;;8952:37;2034:25:80;;;8952:37:45;;2007:18:80;8952:37:45;;;;;;;3333:1226:71;3287:1272;:::o;19582:2397:77:-;19636:7;;;;;19748:34;19743:39;;19739:143;;19785:41;-1:-1:-1;;;19785:41:77;;:::i;:::-;;-1:-1:-1;19846:34:77;19832:11;-1:-1:-1;;;19832:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;19828:52;;19739:143;19900:34;19895:1;:39;19891:143;;19937:41;-1:-1:-1;;;19937:41:77;;:::i;:::-;;-1:-1:-1;19998:34:77;19984:11;-1:-1:-1;;;19984:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;19980:52;;19891:143;20052:34;20047:1;:39;20043:143;;20089:41;-1:-1:-1;;;20089:41:77;;:::i;:::-;;-1:-1:-1;20150:34:77;20136:11;-1:-1:-1;;;20136:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20132:52;;20043:143;20204:34;20199:1;:39;20195:143;;20241:41;-1:-1:-1;;;20241:41:77;;:::i;:::-;;-1:-1:-1;20302:34:77;20288:11;-1:-1:-1;;;20288:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20284:52;;20195:143;20356:34;20351:1;:39;20347:143;;20393:41;-1:-1:-1;;;20393:41:77;;:::i;:::-;;-1:-1:-1;20454:34:77;20440:11;-1:-1:-1;;;20440:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20436:52;;20347:143;20508:34;20503:1;:39;20499:143;;20545:41;-1:-1:-1;;;20545:41:77;;:::i;:::-;;-1:-1:-1;20606:34:77;20592:11;-1:-1:-1;;;20592:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20588:52;;20499:143;20660:34;20655:1;:39;20651:143;;20697:41;-1:-1:-1;;;20697:41:77;;:::i;:::-;;-1:-1:-1;20758:34:77;20744:11;-1:-1:-1;;;20744:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20740:52;;20651:143;20812:34;20807:1;:39;20803:143;;20849:41;-1:-1:-1;;;20849:41:77;;:::i;:::-;;-1:-1:-1;20910:34:77;20896:11;-1:-1:-1;;;20896:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20892:52;;20803:143;20964:11;-1:-1:-1;;;20964:1:77;:11;:::i;:::-;20960:15;-1:-1:-1;20960:15:77;;-1:-1:-1;;;;20989:5:77;20960:15;;20989:5;:::i;:::-;:15;;;;:::i;:::-;20985:19;-1:-1:-1;;;;21026:39:77;21064:1;21069:35;21026:39;:::i;:::-;21021:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21014:90;;;;:::i;:::-;;-1:-1:-1;;;;21110:5:77;21114:1;21110;:5;:::i;:::-;:15;;;;:::i;:::-;21106:19;-1:-1:-1;;;;21147:39:77;21185:1;21147:35;:39;:::i;:::-;21142:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21135:90;;;;:::i;:::-;;-1:-1:-1;;;;21231:5:77;21235:1;21231;:5;:::i;:::-;:15;;;;:::i;:::-;21227:19;-1:-1:-1;;;;21268:39:77;21306:1;21268:35;:39;:::i;:::-;21263:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21256:90;;;;:::i;:::-;;-1:-1:-1;;;;21352:5:77;21356:1;21352;:5;:::i;:::-;:15;;;;:::i;:::-;21348:19;-1:-1:-1;;;;21389:39:77;21427:1;21389:35;:39;:::i;:::-;21384:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21377:90;;;;:::i;:::-;;-1:-1:-1;;;;21473:5:77;21477:1;21473;:5;:::i;:::-;:15;;;;:::i;:::-;21469:19;-1:-1:-1;;;;21510:39:77;21548:1;21510:35;:39;:::i;:::-;21505:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21498:90;;;;:::i;:::-;;-1:-1:-1;;;;21594:5:77;21598:1;21594;:5;:::i;:::-;:15;;;;:::i;:::-;21590:19;-1:-1:-1;;;;21631:39:77;21669:1;21631:35;:39;:::i;:::-;21626:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21619:90;;;;:::i;:::-;;-1:-1:-1;;;;21715:5:77;21719:1;21715;:5;:::i;:::-;:15;;;;:::i;:::-;21711:19;-1:-1:-1;;;;21752:39:77;21790:1;21752:35;:39;:::i;:::-;21747:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21740:90;;;;:::i;:::-;;-1:-1:-1;;;;21836:5:77;21840:1;21836;:5;:::i;:::-;:15;;;;:::i;:::-;21832:19;-1:-1:-1;;;;21873:39:77;21911:1;21873:35;:39;:::i;:::-;21868:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21861:90;;;;:::i;:::-;;19582:2397;-1:-1:-1;;;;;;19582:2397:77:o;12654:826::-;12709:7;;12765:2;-1:-1:-1;;;12873:12:77;;12869:152;;12901:11;12915:22;12925:11;-1:-1:-1;;;12925:1:77;:11;:::i;:::-;12915:9;:22::i;:::-;12951:11;;;;;;;12901:36;;-1:-1:-1;12995:15:77;;-1:-1:-1;;;1008:35:77;12995:15;:::i;:::-;12989:21;;12887:134;12869:152;-1:-1:-1;;;13126:1:77;:11;13122:297;;;771:3;13153:256;13183:5;;;;13153:256;;-1:-1:-1;;;13218:5:77;13222:1;;13218:5;:::i;:::-;13217:17;;;;:::i;:::-;13213:21;;-1:-1:-1;;;13273:1:77;:12;13269:126;;13315:1;13309:7;;;;13370:5;;:1;:5;:::i;:::-;13362:14;;628:1;13362:14;;13355:21;;;;;:::i;:::-;;;13269:126;13190:3;;;:::i;:::-;;;13153:256;;;;13122:297;1397:33;13436:19;1315:33;13436:3;:19;:::i;:::-;:37;;;;:::i;22150:2980::-;22204:7;;;;22296:38;-1:-1:-1;;;22296:1:77;:38;:::i;:::-;22292:42;-1:-1:-1;22292:42:77;;-1:-1:-1;;;;22348:5:77;22292:42;;22348:5;:::i;:::-;:15;;;;:::i;:::-;22344:19;-1:-1:-1;22372:22:77;22344:19;22376:18;22372:22;:::i;:::-;22365:29;;;;:::i;:::-;;-1:-1:-1;;;;22434:5:77;22438:1;22434;:5;:::i;:::-;:15;;;;:::i;:::-;22430:19;-1:-1:-1;22458:22:77;22430:19;22462:18;22458:22;:::i;:::-;22451:29;;;;:::i;:::-;;-1:-1:-1;;;;22520:5:77;22524:1;22520;:5;:::i;:::-;:15;;;;:::i;:::-;22516:19;-1:-1:-1;22544:22:77;22516:19;22548:18;22544:22;:::i;:::-;22537:29;;;;:::i;:::-;;-1:-1:-1;;;;22606:5:77;22610:1;22606;:5;:::i;:::-;:15;;;;:::i;:::-;22602:19;-1:-1:-1;22630:22:77;22602:19;22634:18;22630:22;:::i;:::-;22623:29;;;;:::i;:::-;;-1:-1:-1;;;;22692:5:77;22696:1;22692;:5;:::i;:::-;:15;;;;:::i;:::-;22688:19;-1:-1:-1;22716:22:77;22688:19;22720:18;22716:22;:::i;:::-;22709:29;;;;:::i;:::-;;-1:-1:-1;;;;22778:5:77;22782:1;22778;:5;:::i;:::-;:15;;;;:::i;:::-;22774:19;-1:-1:-1;22802:22:77;22774:19;22806:18;22802:22;:::i;:::-;22795:29;;;;:::i;:::-;;-1:-1:-1;;;;22864:5:77;22868:1;22864;:5;:::i;:::-;:15;;;;:::i;:::-;22860:19;-1:-1:-1;22888:22:77;22860:19;22892:18;22888:22;:::i;:::-;22881:29;;;;:::i;:::-;;-1:-1:-1;;;;22950:5:77;22954:1;22950;:5;:::i;:::-;:15;;;;:::i;:::-;22946:19;-1:-1:-1;22974:22:77;22946:19;22978:18;22974:22;:::i;:::-;22967:29;;;;:::i;:::-;;-1:-1:-1;;;;23036:5:77;23040:1;23036;:5;:::i;:::-;:15;;;;:::i;:::-;23032:19;-1:-1:-1;23060:22:77;23032:19;23064:18;23060:22;:::i;:::-;23053:29;;;;:::i;:::-;;-1:-1:-1;;;;23122:5:77;23126:1;23122;:5;:::i;:::-;:15;;;;:::i;:::-;23118:19;-1:-1:-1;23146:22:77;23118:19;23150:18;23146:22;:::i;:::-;23139:29;;;;:::i;:::-;;-1:-1:-1;;;;23208:5:77;23212:1;23208;:5;:::i;:::-;:15;;;;:::i;:::-;23204:19;-1:-1:-1;23232:22:77;23204:19;23236:18;23232:22;:::i;:::-;23225:29;;;;:::i;:::-;;-1:-1:-1;;;;23294:5:77;23298:1;23294;:5;:::i;:::-;:15;;;;:::i;:::-;23290:19;-1:-1:-1;23318:22:77;23290:19;23322:18;23318:22;:::i;:::-;23311:29;;;;:::i;:::-;;-1:-1:-1;;;;23380:5:77;23384:1;23380;:5;:::i;:::-;:15;;;;:::i;:::-;23376:19;-1:-1:-1;23404:22:77;23376:19;23408:18;23404:22;:::i;:::-;23397:29;;;;:::i;:::-;;-1:-1:-1;;;;23466:5:77;23470:1;23466;:5;:::i;:::-;:15;;;;:::i;:::-;23462:19;-1:-1:-1;23490:22:77;23462:19;23494:18;23490:22;:::i;:::-;23483:29;;;;:::i;:::-;;-1:-1:-1;;;;23552:5:77;23556:1;23552;:5;:::i;:::-;:15;;;;:::i;:::-;23548:19;-1:-1:-1;23576:22:77;23548:19;23580:18;23576:22;:::i;:::-;23569:29;;;;:::i;:::-;;-1:-1:-1;;;;23638:5:77;23642:1;23638;:5;:::i;:::-;:15;;;;:::i;:::-;23634:19;-1:-1:-1;23662:22:77;23634:19;23666:18;23662:22;:::i;:::-;23655:29;;;;:::i;:::-;;-1:-1:-1;;;;23724:5:77;23728:1;23724;:5;:::i;:::-;:15;;;;:::i;:::-;23720:19;-1:-1:-1;23748:22:77;23720:19;23752:18;23748:22;:::i;:::-;23741:29;;;;:::i;:::-;;-1:-1:-1;;;;23810:5:77;23814:1;23810;:5;:::i;:::-;:15;;;;:::i;:::-;23806:19;-1:-1:-1;23834:22:77;23806:19;23838:18;23834:22;:::i;:::-;23827:29;;;;:::i;:::-;;-1:-1:-1;;;;23896:5:77;23900:1;23896;:5;:::i;:::-;:15;;;;:::i;:::-;23892:19;-1:-1:-1;23920:22:77;23892:19;23924:18;23920:22;:::i;:::-;23913:29;;;;:::i;:::-;;-1:-1:-1;;;;24011:1:77;23984:24;23990:18;23913:29;23984:24;:::i;:::-;:28;;;;:::i;:::-;:38;;;;:::i;:::-;23978:44;-1:-1:-1;;;;24088:39:77;;24087:46;24083:137;;24185:35;24141:41;:3;24147:35;24141:41;:::i;:::-;:79;;;;:::i;:::-;24135:85;;24083:137;-1:-1:-1;;;24235:39:77;;24234:46;24230:137;;24332:35;24288:41;:3;24294:35;24288:41;:::i;:::-;:79;;;;:::i;:::-;24282:85;;24230:137;-1:-1:-1;;;24382:39:77;;24381:46;24377:137;;24479:35;24435:41;:3;24441:35;24435:41;:::i;:::-;:79;;;;:::i;:::-;24429:85;;24377:137;-1:-1:-1;;;24529:39:77;;24528:46;24524:137;;24626:35;24582:41;:3;24588:35;24582:41;:::i;:::-;:79;;;;:::i;:::-;24576:85;;24524:137;-1:-1:-1;;;24676:39:77;;24675:46;24671:137;;24773:35;24729:41;:3;24735:35;24729:41;:::i;:::-;:79;;;;:::i;:::-;24723:85;;24671:137;-1:-1:-1;;;24823:39:77;;24822:46;24818:137;;24920:35;24876:41;:3;24882:35;24876:41;:::i;:::-;:79;;;;:::i;:::-;24870:85;;24818:137;-1:-1:-1;;;24970:39:77;;24969:46;24965:137;;25067:35;25023:41;:3;25029:35;25023:41;:::i;:::-;:79;;;;:::i;:::-;25017:85;;24965:137;-1:-1:-1;25120:3:77;;22150:2980;-1:-1:-1;;;22150:2980:77:o;14488:508::-;14562:5;724:2;771:3;14652:179;14659:11;;;:6;:2;14664:1;14659:6;:::i;:::-;:11;;;14652:179;;;14686:9;14710:1;14699:7;14704:2;14699;:7;:::i;:::-;14698:13;;;;:::i;:::-;14686:25;;14749:2;14729:11;14741:3;14729:16;;;;;;;;;:::i;:::-;;;:22;14725:95;;14774:3;14769:8;;14725:95;;;14817:3;14812:8;;14725:95;14672:159;14652:179;;;14864:2;14845:11;14857:2;14845:15;;;;;;;;;:::i;:::-;;;:21;14841:48;;14887:2;14488:508;-1:-1:-1;;;14488:508:77:o;14841:48::-;14922:2;14903:11;14915:2;14903:15;;;;;;;;;:::i;:::-;;;:21;14899:48;;-1:-1:-1;14945:2:77;14488:508;-1:-1:-1;;14488:508:77:o;14899:48::-;14958:13;;:::i;:::-;-1:-1:-1;14988:1:77;;14488:508;-1:-1:-1;;;14488:508:77:o;15580:3826::-;15653:7;15685:2;15653:7;15728:23;;;15729:7;15685:2;;15729:7;:::i;:::-;15728:23;;;-1:-1:-1;15760:38:77;15728:23;15765:33;15760:38;:::i;:::-;15753:45;;;;:::i;:::-;;-1:-1:-1;15839:23:77;;;15840:7;15845:2;15840;:7;:::i;:::-;15839:23;;;-1:-1:-1;15871:38:77;15839:23;15876:33;15871:38;:::i;:::-;15864:45;;;;:::i;:::-;;-1:-1:-1;15950:23:77;;;15951:7;15956:2;15951;:7;:::i;:::-;15950:23;;;-1:-1:-1;15982:38:77;15950:23;15987:33;15982:38;:::i;:::-;15975:45;;;;:::i;:::-;;-1:-1:-1;16061:23:77;;;16062:7;16067:2;16062;:7;:::i;:::-;16061:23;;;-1:-1:-1;16093:38:77;16061:23;16098:33;16093:38;:::i;:::-;16086:45;;;;:::i;:::-;;-1:-1:-1;16172:23:77;;;16173:7;16178:2;16173;:7;:::i;:::-;16172:23;;;-1:-1:-1;16204:38:77;16172:23;16209:33;16204:38;:::i;:::-;16197:45;;;;:::i;:::-;;-1:-1:-1;16283:23:77;;;16284:7;16289:2;16284;:7;:::i;:::-;16283:23;;;-1:-1:-1;16315:38:77;16283:23;16320:33;16315:38;:::i;:::-;16308:45;;;;:::i;:::-;;-1:-1:-1;16394:23:77;;;16395:7;16400:2;16395;:7;:::i;:::-;16394:23;;;-1:-1:-1;16426:38:77;16394:23;16431:33;16426:38;:::i;:::-;16419:45;;;;:::i;:::-;;-1:-1:-1;16505:23:77;;;16506:7;16511:2;16506;:7;:::i;:::-;16505:23;;;-1:-1:-1;16537:38:77;16505:23;16542:33;16537:38;:::i;:::-;16530:45;;;;:::i;:::-;;-1:-1:-1;16616:23:77;;;16617:7;16622:2;16617;:7;:::i;:::-;16616:23;;;-1:-1:-1;16648:38:77;16616:23;16653:33;16648:38;:::i;:::-;16641:45;;;;:::i;:::-;;-1:-1:-1;16727:23:77;;;16728:7;16733:2;16728;:7;:::i;:::-;16727:23;;;-1:-1:-1;16759:38:77;16727:23;16764:33;16759:38;:::i;:::-;16752:45;;;;:::i;:::-;;-1:-1:-1;16838:23:77;;;16839:7;16844:2;16839;:7;:::i;:::-;16838:23;;;-1:-1:-1;16870:38:77;16838:23;16875:33;16870:38;:::i;:::-;16863:45;;;;:::i;:::-;;-1:-1:-1;16949:23:77;;;16950:7;16955:2;16950;:7;:::i;:::-;16949:23;;;-1:-1:-1;16981:38:77;16949:23;16986:33;16981:38;:::i;:::-;16974:45;;;;:::i;:::-;;-1:-1:-1;17060:23:77;;;17061:7;17066:2;17061;:7;:::i;:::-;17060:23;;;-1:-1:-1;17092:38:77;17060:23;17097:33;17092:38;:::i;:::-;17085:45;;;;:::i;:::-;;-1:-1:-1;17171:23:77;;;17172:7;17177:2;17172;:7;:::i;:::-;17171:23;;;-1:-1:-1;17203:38:77;17171:23;17208:33;17203:38;:::i;:::-;17196:45;;;;:::i;:::-;;-1:-1:-1;17282:23:77;;;17283:7;17288:2;17283;:7;:::i;:::-;17282:23;;;-1:-1:-1;17314:38:77;17282:23;17319:33;17314:38;:::i;:::-;17307:45;;;;:::i;:::-;;-1:-1:-1;17393:23:77;;;17394:7;17399:2;17394;:7;:::i;:::-;17393:23;;;-1:-1:-1;17425:38:77;17393:23;17430:33;17425:38;:::i;:::-;17418:45;;;;:::i;:::-;;-1:-1:-1;17504:23:77;;;17505:7;17510:2;17505;:7;:::i;:::-;17504:23;;;-1:-1:-1;17536:38:77;17504:23;17541:33;17536:38;:::i;:::-;17529:45;;;;:::i;:::-;;-1:-1:-1;17615:23:77;;;17616:7;17621:2;17616;:7;:::i;:::-;17615:23;;;-1:-1:-1;17647:38:77;17615:23;17652:33;17647:38;:::i;:::-;17640:45;;;;:::i;:::-;;-1:-1:-1;17726:23:77;;;17727:7;17732:2;17727;:7;:::i;:::-;17726:23;;;-1:-1:-1;17758:38:77;17726:23;17763:33;17758:38;:::i;:::-;17751:45;;;;:::i;:::-;;-1:-1:-1;17837:23:77;;;17838:7;17843:2;17838;:7;:::i;:::-;17837:23;;;-1:-1:-1;17869:38:77;17837:23;17874:33;17869:38;:::i;:::-;17862:45;;;;:::i;:::-;;-1:-1:-1;17948:23:77;;;17949:7;17954:2;17949;:7;:::i;:::-;17948:23;;;-1:-1:-1;17980:38:77;17948:23;17985:33;17980:38;:::i;:::-;17973:45;;;;:::i;:::-;;-1:-1:-1;18059:23:77;;;18060:7;18065:2;18060;:7;:::i;:::-;18059:23;;;-1:-1:-1;18091:38:77;18059:23;18096:33;18091:38;:::i;:::-;18084:45;;;;:::i;:::-;;-1:-1:-1;18170:23:77;;;18171:7;18176:2;18171;:7;:::i;:::-;18170:23;;;-1:-1:-1;18202:38:77;18170:23;18207:33;18202:38;:::i;:::-;18195:45;;;;:::i;:::-;;-1:-1:-1;18281:23:77;;;18282:7;18287:2;18282;:7;:::i;:::-;18281:23;;;-1:-1:-1;18313:38:77;18281:23;18318:33;18313:38;:::i;:::-;18306:45;;;;:::i;:::-;;-1:-1:-1;18392:23:77;;;18393:7;18398:2;18393;:7;:::i;:::-;18392:23;;;-1:-1:-1;18424:38:77;18392:23;18429:33;18424:38;:::i;:::-;18417:45;;;;:::i;:::-;;-1:-1:-1;18503:23:77;;;18504:7;18509:2;18504;:7;:::i;:::-;18503:23;;;-1:-1:-1;18535:38:77;18503:23;18540:33;18535:38;:::i;:::-;18528:45;;;;:::i;:::-;;-1:-1:-1;18614:23:77;;;18615:7;18620:2;18615;:7;:::i;:::-;18614:23;;;-1:-1:-1;18646:38:77;18614:23;18651:33;18646:38;:::i;:::-;18639:45;;;;:::i;:::-;;-1:-1:-1;18725:23:77;;;18726:7;18731:2;18726;:7;:::i;:::-;18725:23;;;-1:-1:-1;18757:38:77;18725:23;18762:33;18757:38;:::i;:::-;18750:45;;;;:::i;:::-;;-1:-1:-1;18836:23:77;;;18837:7;18842:2;18837;:7;:::i;:::-;18836:23;;;-1:-1:-1;18868:38:77;18836:23;18873:33;18868:38;:::i;:::-;18861:45;;;;:::i;:::-;;-1:-1:-1;18947:23:77;;;18948:7;18953:2;18948;:7;:::i;:::-;18947:23;;;-1:-1:-1;18979:38:77;18947:23;18984:33;18979:38;:::i;:::-;18972:45;;;;:::i;:::-;;-1:-1:-1;19058:23:77;;;19059:7;19064:2;19059;:7;:::i;:::-;19058:23;;;-1:-1:-1;19090:38:77;19058:23;19095:33;19090:38;:::i;:::-;19083:45;;;;:::i;:::-;;-1:-1:-1;19169:23:77;;;19170:7;19175:2;19170;:7;:::i;:::-;19169:23;;;-1:-1:-1;19201:38:77;19169:23;19206:33;19201:38;:::i;:::-;19194:45;;;;:::i;:::-;;-1:-1:-1;628:1:77;19331:17;;;;19325:2;19283:39;19289:33;19194:45;19283:39;:::i;:::-;:44;;;;:::i;:::-;:66;;;;:::i;:::-;19276:73;15580:3826;-1:-1:-1;;;;;15580:3826:77:o;932:108:63:-;5374:13:22;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:22;;;;;;;:::i;:::-;1022:4:63::1;:11:::0;;-1:-1:-1;;;;;;1022:11:63::1;-1:-1:-1::0;;;;;1022:11:63;;;::::1;::::0;;;::::1;::::0;;932:108::o;13595:532:77:-;13649:5;;13701:2;13722:3;13718:7;;13714:386;;;13777:80;13788:1;13784;:5;13777:80;;;13815:1;13809:7;;;;13834:8;;;;:::i;:::-;;;13777:80;;;13714:386;;;13938:3;13923:167;13943:5;;;;13923:167;;628:1;13987:8;;;;13981:15;;13977:99;;14049:8;;;;14020:7;;;;;;;;13977:99;13956:1;13950:7;;;13923:167;;;;-1:-1:-1;14117:3:77;13595:532;-1:-1:-1;;13595:532:77:o;14:286:80:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:80;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:80:o;497:548::-;609:4;638:2;667;656:9;649:21;699:6;693:13;742:6;737:2;726:9;722:18;715:34;767:1;777:140;791:6;788:1;785:13;777:140;;;886:14;;;882:23;;876:30;852:17;;;871:2;848:26;841:66;806:10;;777:140;;;781:3;966:1;961:2;952:6;941:9;937:22;933:31;926:42;1036:2;1029;1025:7;1020:2;1012:6;1008:15;1004:29;993:9;989:45;985:54;977:62;;;;497:548;;;;:::o;1050:131::-;-1:-1:-1;;;;;1125:31:80;;1115:42;;1105:70;;1171:1;1168;1161:12;1186:315;1254:6;1262;1315:2;1303:9;1294:7;1290:23;1286:32;1283:52;;;1331:1;1328;1321:12;1283:52;1370:9;1357:23;1389:31;1414:5;1389:31;:::i;:::-;1439:5;1491:2;1476:18;;;;1463:32;;-1:-1:-1;;;1186:315:80:o;1703:180::-;1762:6;1815:2;1803:9;1794:7;1790:23;1786:32;1783:52;;;1831:1;1828;1821:12;1783:52;-1:-1:-1;1854:23:80;;1703:180;-1:-1:-1;1703:180:80:o;2070:456::-;2147:6;2155;2163;2216:2;2204:9;2195:7;2191:23;2187:32;2184:52;;;2232:1;2229;2222:12;2184:52;2271:9;2258:23;2290:31;2315:5;2290:31;:::i;:::-;2340:5;-1:-1:-1;2397:2:80;2382:18;;2369:32;2410:33;2369:32;2410:33;:::i;:::-;2070:456;;2462:7;;-1:-1:-1;;;2516:2:80;2501:18;;;;2488:32;;2070:456::o;2531:163::-;2598:20;;2658:10;2647:22;;2637:33;;2627:61;;2684:1;2681;2674:12;2627:61;2531:163;;;:::o;2699:389::-;2784:6;2792;2800;2808;2861:3;2849:9;2840:7;2836:23;2832:33;2829:53;;;2878:1;2875;2868:12;2829:53;2914:9;2901:23;2891:33;;2971:2;2960:9;2956:18;2943:32;2933:42;;2994:37;3027:2;3016:9;3012:18;2994:37;:::i;:::-;2699:389;;;;-1:-1:-1;2984:47:80;;3078:2;3063:18;3050:32;;-1:-1:-1;;2699:389:80:o;3504:344::-;3652:2;3637:18;;3685:1;3674:13;;3664:144;;3730:10;3725:3;3721:20;3718:1;3711:31;3765:4;3762:1;3755:15;3793:4;3790:1;3783:15;3664:144;3817:25;;;3504:344;:::o;3853:248::-;3921:6;3929;3982:2;3970:9;3961:7;3957:23;3953:32;3950:52;;;3998:1;3995;3988:12;3950:52;-1:-1:-1;;4021:23:80;;;4091:2;4076:18;;;4063:32;;-1:-1:-1;3853:248:80:o;4106:247::-;4165:6;4218:2;4206:9;4197:7;4193:23;4189:32;4186:52;;;4234:1;4231;4224:12;4186:52;4273:9;4260:23;4292:31;4317:5;4292:31;:::i;4566:827::-;4683:6;4691;4699;4707;4715;4723;4776:3;4764:9;4755:7;4751:23;4747:33;4744:53;;;4793:1;4790;4783:12;4744:53;4832:9;4819:23;4851:31;4876:5;4851:31;:::i;:::-;4901:5;-1:-1:-1;4958:2:80;4943:18;;4930:32;4971:33;4930:32;4971:33;:::i;:::-;5023:7;-1:-1:-1;5082:2:80;5067:18;;5054:32;5095:33;5054:32;5095:33;:::i;:::-;5147:7;-1:-1:-1;5201:2:80;5186:18;;5173:32;;-1:-1:-1;5224:38:80;5257:3;5242:19;;5224:38;:::i;:::-;5214:48;;5314:3;5303:9;5299:19;5286:33;5328;5353:7;5328:33;:::i;:::-;5380:7;5370:17;;;4566:827;;;;;;;;:::o;5398:388::-;5466:6;5474;5527:2;5515:9;5506:7;5502:23;5498:32;5495:52;;;5543:1;5540;5533:12;5495:52;5582:9;5569:23;5601:31;5626:5;5601:31;:::i;:::-;5651:5;-1:-1:-1;5708:2:80;5693:18;;5680:32;5721:33;5680:32;5721:33;:::i;:::-;5773:7;5763:17;;;5398:388;;;;;:::o;6196:380::-;6275:1;6271:12;;;;6318;;;6339:61;;6393:4;6385:6;6381:17;6371:27;;6339:61;6446:2;6438:6;6435:14;6415:18;6412:38;6409:161;;6492:10;6487:3;6483:20;6480:1;6473:31;6527:4;6524:1;6517:15;6555:4;6552:1;6545:15;6409:161;;6196:380;;;:::o;6925:127::-;6986:10;6981:3;6977:20;6974:1;6967:31;7017:4;7014:1;7007:15;7041:4;7038:1;7031:15;7057:168;7130:9;;;7161;;7178:15;;;7172:22;;7158:37;7148:71;;7199:18;;:::i;7230:127::-;7291:10;7286:3;7282:20;7279:1;7272:31;7322:4;7319:1;7312:15;7346:4;7343:1;7336:15;7362:120;7402:1;7428;7418:35;;7433:18;;:::i;:::-;-1:-1:-1;7467:9:80;;7362:120::o;7487:125::-;7552:9;;;7573:10;;;7570:36;;;7586:18;;:::i;7617:128::-;7684:9;;;7705:11;;;7702:37;;;7719:18;;:::i;8029:277::-;8096:6;8149:2;8137:9;8128:7;8124:23;8120:32;8117:52;;;8165:1;8162;8155:12;8117:52;8197:9;8191:16;8250:5;8243:13;8236:21;8229:5;8226:32;8216:60;;8272:1;8269;8262:12;8311:112;8343:1;8369;8359:35;;8374:18;;:::i;:::-;-1:-1:-1;8408:9:80;;8311:112::o;9422:353::-;-1:-1:-1;;;;;9650:32:80;;;;9632:51;;9714:2;9699:18;;9692:34;;;;9757:2;9742:18;;9735:34;9620:2;9605:18;;9422:353::o;9780:184::-;9850:6;9903:2;9891:9;9882:7;9878:23;9874:32;9871:52;;;9919:1;9916;9909:12;9871:52;-1:-1:-1;9942:16:80;;9780:184;-1:-1:-1;9780:184:80:o;14225:151::-;14315:4;14308:12;;;14294;;;14290:31;;14333:14;;14330:40;;;14350:18;;:::i;15452:407::-;15654:2;15636:21;;;15693:2;15673:18;;;15666:30;15732:34;15727:2;15712:18;;15705:62;-1:-1:-1;;;15798:2:80;15783:18;;15776:41;15849:3;15834:19;;15452:407::o;17383:178::-;17420:3;17464:4;17457:5;17453:16;17488:7;17478:41;;17499:18;;:::i;:::-;-1:-1:-1;;17535:20:80;;17383:178;-1:-1:-1;;17383:178:80:o;17566:148::-;17654:4;17633:12;;;17647;;;17629:31;;17672:13;;17669:39;;;17688:18;;:::i;17719:165::-;17757:1;17791:4;17788:1;17784:12;17815:3;17805:37;;17822:18;;:::i;:::-;17874:3;17867:4;17864:1;17860:12;17856:22;17851:27;;;17719:165;;;;:::o;17889:127::-;17950:10;17945:3;17941:20;17938:1;17931:31;17981:4;17978:1;17971:15;18005:4;18002:1;17995:15;18021:127;18082:10;18077:3;18073:20;18070:1;18063:31;18113:4;18110:1;18103:15;18137:4;18134:1;18127:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ADMIN_EXECUTE_PERMISSION_ID()": "f8a2c98e",
    "admin()": "f851a440",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": "29a00e7c",
    "calculateReserveRatio(uint256,uint256)": "630e9032",
    "calculateSaleReturn(uint256,uint256,uint32,uint256)": "49f9b0f7",
    "continuousSupply()": "da12457a",
    "dao()": "4162169f",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getContinuousBurnRefund(uint256)": "7cbed3e0",
    "getContinuousMintReward(uint256)": "0d8f9f7f",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,address,address,uint256,uint32,address)": "8e8ab69e",
    "manageYieldSurplus(uint256)": "cb0aad36",
    "mint(uint256)": "a0712d68",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "pluginType()": "41de6830",
    "renounceOwnership()": "715018a6",
    "reserveBalance()": "a10954fe",
    "reserveRatio()": "0c7d5cd8",
    "reserveSurplus()": "9db3ad7e",
    "reserveToken()": "f4325d67",
    "sponsoredBurn(uint256)": "96343886",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "taxPct()": "33a4ea06",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "treasuryAddress()": "c5f956af",
    "userLockedBalance(address)": "8cf2b63e",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_EXECUTE_PERMISSION_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_depositAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePurchaseReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserve\",\"type\":\"uint256\"}],\"name\":\"calculateReserveRatio\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_sellAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"continuousSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_continuousTokenAmount\",\"type\":\"uint256\"}],\"name\":\"getContinuousBurnRefund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reserveTokenAmount\",\"type\":\"uint256\"}],\"name\":\"getContinuousMintReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IDAO\",\"name\":\"_dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reserveToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initialReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_treasuryAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mode\",\"type\":\"uint256\"}],\"name\":\"manageYieldSurplus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluginType\",\"outputs\":[{\"internalType\":\"enum IPlugin.PluginType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveRatio\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveSurplus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sponsoredBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxPct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLockedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"calculatePurchaseReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token), calculates the return for a given conversion (in the continuous token) Formula: Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)\",\"params\":{\"_depositAmount\":\"deposit amount, in reserve token\",\"_reserveBalance\":\"total reserve token balance\",\"_reserveRatio\":\"reserve ratio, represented in ppm, 1-1000000\",\"_supply\":\"continuous token total supply\"},\"returns\":{\"_0\":\"purchase return amount\"}},\"calculateSaleReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token), calculates the return for a given conversion (in the reserve token) Formula: Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))\",\"params\":{\"_reserveBalance\":\"total reserve token balance\",\"_reserveRatio\":\"constant reserve ratio, represented in ppm, 1-1000000\",\"_sellAmount\":\"sell amount, in the continuous token itself\",\"_supply\":\"continuous token total supply\"},\"returns\":{\"_0\":\"sale return amount\"}},\"continuousSupply()\":{\"details\":\"Abstract method that returns continuous token supply\"},\"dao()\":{\"returns\":{\"_0\":\"The DAO contract.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getContinuousBurnRefund(uint256)\":{\"details\":\"Given a continuous token amount, calculates the amount of reserve tokens returned.\"},\"getContinuousMintReward(uint256)\":{\"details\":\"Given a reserve token amount, calculates the amount of continuous tokens returned.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,address,address,uint256,uint32,address)\":{\"params\":{\"_admin\":\"The address of the admin.\",\"_dao\":\"The associated DAO.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"reserveBalance()\":{\"details\":\"Abstract method that returns reserve token balance\"},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceId\":\"The ID of the interface.\"},\"returns\":{\"_0\":\"Returns `true` if the interface is supported.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADMIN_EXECUTE_PERMISSION_ID()\":{\"notice\":\"The ID of the permission required to call the `execute` function.\"},\"dao()\":{\"notice\":\"Returns the DAO contract.\"},\"initialize(address,address,address,uint256,uint32,address)\":{\"notice\":\"Initializes the contract.\"},\"pluginType()\":{\"notice\":\"returns the plugin's type\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if this or the parent contract supports an interface by its ID.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SymbioticBondingCurve.sol\":\"SymbioticBondingCurvePlugin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aragon/osx/=lib/osx/packages/contracts/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":osx/=lib/osx/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/osx/packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x5da4fcc2ac043eebb78c8c278da86f0fa7ad71ec9ce35a398bcc60c25ba6c7c3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://22dfd57672c31d73f65db47e55b19bfbfba15e4d8e570b5a4fb17288eba0f245\",\"dweb:/ipfs/QmPcBckvXy3TXZzSLF7cc1dnfF77V1Y5Zh1JweZ3uZUKND\"]},\"lib/osx/packages/contracts/src/core/plugin/IPlugin.sol\":{\"keccak256\":\"0xff0e60999c7f9c78bc57d4ca7eb53e38bd4eefbfb152784e98f8cf7530aad3b8\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://aad36220d44f088e77a9b1e0d0cbe22b869e496e405f09b9366748dc6d482331\",\"dweb:/ipfs/QmSxXpiYvhMarfoG9zXPmmBY9jQQqMtsn72mLc6jdbN8Uc\"]},\"lib/osx/packages/contracts/src/core/plugin/PluginCloneable.sol\":{\"keccak256\":\"0xfdfce6920f7163cda9cd930762b225c64f50a9625d34f888fea9c771a12f777b\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://cc690f097210b301b04681de986de4ed83058d5baf712054e4cf040a33197c4a\",\"dweb:/ipfs/Qmb5ENaUrSoL1ttc2op9LQEWUQJww6kneN4FwLKPvJf7ca\"]},\"lib/osx/packages/contracts/src/core/plugin/PluginUUPSUpgradeable.sol\":{\"keccak256\":\"0xde1b9e29d70b9e9d731b7b66f649fd2ab3a5725c03c3114dede433bfabe61489\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6f41187ec3f3214394bdea2a61454da5da6f2cad1469dda8d355241d58e6b6df\",\"dweb:/ipfs/QmenJSxca9T5VkjfgKUtBChToh21n4TXEY1bY21KTMXQmd\"]},\"lib/osx/packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol\":{\"keccak256\":\"0x4d57aea8920987f368cc6d610a462fb929df38872b174e4fc15d3eaf8bb5e47c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e399447f5f219bffc0225f3189e153037e8113c1f3e165b49bb65c7973d9df09\",\"dweb:/ipfs/QmXanA1LgAn3rLqJLmUPcyi9FDcqnYbLk8UNZwM4Jgfbor\"]},\"lib/osx/packages/contracts/src/core/utils/auth.sol\":{\"keccak256\":\"0x5452788bbdaf93868177c15cefd71f57b5f83293d94a69d98d9505d4c9ec0015\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://33607f6e03e69014d0080a7fd5e1be93ff3a8b80d406b407d2094db4adaf85f2\",\"dweb:/ipfs/QmNxaCF8wTfNUd7Ck942dji6MecuT5HsDrFEwS83ZRgCre\"]},\"lib/osx/packages/contracts/src/token/ERC20/IERC20MintableUpgradeable.sol\":{\"keccak256\":\"0x67c5e5b94e83984da5427057e3945f1863c5d2a6f35fddd6abc1a11927167a46\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ae9d9bca9d15cb4ea1bc00d384d0c1eded9109887b482bbe9765b0e46f1ba618\",\"dweb:/ipfs/QmXkPGCDAP92ZXSGesQUSA197ZcEonQ8nQaK4iPyvwCFXi\"]},\"lib/osx/packages/contracts/src/utils/Proxy.sol\":{\"keccak256\":\"0x4850fcd37ce5e3747d067fd0d50bd9df2b9a1a5c18d19b9d18861191c1943e03\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e5b685c89e687f6a83c0dd3a54de555f209edb170ec2951b1f529a8e15b6c929\",\"dweb:/ipfs/Qma4N68QwZJeLiZzUdUZw4Nnj6vaavoQSNBa7roWLvZGwc\"]},\"src/SymbioticBondingCurve.sol\":{\"keccak256\":\"0xcb70cc0ddb45826428c9057291d09109ba2dcdf4ab2a7b15db05db21128ab156\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://9e4622e3b4d080124dfd2ae034be7a8b51c6a1b989a5a884e9146b77e11501a9\",\"dweb:/ipfs/QmfC3KFqd33ezfKHBmhmmCYAGVYWWLFNvo3qr4UB7eSNd2\"]},\"src/bonding_curve/ContinuousToken.sol\":{\"keccak256\":\"0x6b28714177cceefa644c7bdea4e8a6957aa87e164f101268a23e9db1d41b1d56\",\"urls\":[\"bzz-raw://e8f5d2e593a4f139e7f42d88d207707e4db153af5c70636281a7212d55f2caf8\",\"dweb:/ipfs/QmPGe1ZyWYm9bhTs8GzSNUQDAFXVdxT2QnnVHXAPPLz9JY\"]},\"src/bonding_curve/curves/BancorBondingCurve.sol\":{\"keccak256\":\"0x3d6662e74bf6da274154623c7cd7cebac4fb2eb6de7e3dffaf8103da17437a10\",\"urls\":[\"bzz-raw://6542f113d17b4d69cceaa648a462ba2141755fa3650da1fcfcdda2a54c088b87\",\"dweb:/ipfs/QmUfd95zDhAErTGScvsVZbDcgm2foaERgBTa83HbRT7gCR\"]},\"src/bonding_curve/interfaces/IBondingCurve.sol\":{\"keccak256\":\"0xb932c2a0a51f2369e06395efc957783430b59305601226a502afcbac8d91f8a6\",\"urls\":[\"bzz-raw://7155be7b60dc0b18a9afd7977976ec98690799764a44ec3231a25397db03d6e5\",\"dweb:/ipfs/QmQfmt6e7ytJYCfYZbJDYbQxR2HJDGVanNhLrdNvirAUiD\"]},\"src/bonding_curve/math/BancorFormula.sol\":{\"keccak256\":\"0x59e638caadaf1166b3dd40b0752352e89621b56b306b34ba19719abcf5995590\",\"urls\":[\"bzz-raw://b28e76f9d0115382858ac69b2dc0c0562c273d7e44853a8eefeeeb4a1d4c8dea\",\"dweb:/ipfs/QmWSEgXHnarghcBzTvP6XywV665oSvW7DWEzDS7sYJ4FBm\"]},\"src/bonding_curve/math/Power.sol\":{\"keccak256\":\"0xa7a2edc79e4f53d393903bfedea50e09c492d17dddc7c422dc965c4cea05c544\",\"urls\":[\"bzz-raw://c6804e8a3b0550767f98ed788d284741f86d8bb50690c8321708a3a8eedebb23\",\"dweb:/ipfs/QmaJJWY1RHnYXDKKzpEi2DJ4rDTRZvBQYYqrTTKVcLPUSx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "refund",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN_EXECUTE_PERMISSION_ID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_supply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_reserveBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_reserveRatio",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "_depositAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculatePurchaseReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_supply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_reserve",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateReserveRatio",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_supply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_reserveBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_reserveRatio",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "_sellAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateSaleReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "continuousSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dao",
          "outputs": [
            {
              "internalType": "contract IDAO",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_continuousTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getContinuousBurnRefund",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_reserveTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getContinuousMintReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IDAO",
              "name": "_dao",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_reserveToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_initialReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_reserveRatio",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "_treasuryAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "mode",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "manageYieldSurplus"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "pluginType",
          "outputs": [
            {
              "internalType": "enum IPlugin.PluginType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reserveBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reserveRatio",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reserveSurplus",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reserveToken",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sponsoredBurn"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "taxPct",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "treasuryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userLockedBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": {
            "details": "given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token), calculates the return for a given conversion (in the continuous token) Formula: Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)",
            "params": {
              "_depositAmount": "deposit amount, in reserve token",
              "_reserveBalance": "total reserve token balance",
              "_reserveRatio": "reserve ratio, represented in ppm, 1-1000000",
              "_supply": "continuous token total supply"
            },
            "returns": {
              "_0": "purchase return amount"
            }
          },
          "calculateSaleReturn(uint256,uint256,uint32,uint256)": {
            "details": "given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token), calculates the return for a given conversion (in the reserve token) Formula: Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))",
            "params": {
              "_reserveBalance": "total reserve token balance",
              "_reserveRatio": "constant reserve ratio, represented in ppm, 1-1000000",
              "_sellAmount": "sell amount, in the continuous token itself",
              "_supply": "continuous token total supply"
            },
            "returns": {
              "_0": "sale return amount"
            }
          },
          "continuousSupply()": {
            "details": "Abstract method that returns continuous token supply"
          },
          "dao()": {
            "returns": {
              "_0": "The DAO contract."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getContinuousBurnRefund(uint256)": {
            "details": "Given a continuous token amount, calculates the amount of reserve tokens returned."
          },
          "getContinuousMintReward(uint256)": {
            "details": "Given a reserve token amount, calculates the amount of continuous tokens returned."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(address,address,address,uint256,uint32,address)": {
            "params": {
              "_admin": "The address of the admin.",
              "_dao": "The associated DAO."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "reserveBalance()": {
            "details": "Abstract method that returns reserve token balance"
          },
          "supportsInterface(bytes4)": {
            "params": {
              "_interfaceId": "The ID of the interface."
            },
            "returns": {
              "_0": "Returns `true` if the interface is supported."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ADMIN_EXECUTE_PERMISSION_ID()": {
            "notice": "The ID of the permission required to call the `execute` function."
          },
          "dao()": {
            "notice": "Returns the DAO contract."
          },
          "initialize(address,address,address,uint256,uint32,address)": {
            "notice": "Initializes the contract."
          },
          "pluginType()": {
            "notice": "returns the plugin's type"
          },
          "supportsInterface(bytes4)": {
            "notice": "Checks if this or the parent contract supports an interface by its ID."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aragon/osx/=lib/osx/packages/contracts/src/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":osx/=lib/osx/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SymbioticBondingCurve.sol": "SymbioticBondingCurvePlugin"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999",
        "urls": [
          "bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb",
          "dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
        "urls": [
          "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
          "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/osx/packages/contracts/src/core/dao/IDAO.sol": {
        "keccak256": "0x5da4fcc2ac043eebb78c8c278da86f0fa7ad71ec9ce35a398bcc60c25ba6c7c3",
        "urls": [
          "bzz-raw://22dfd57672c31d73f65db47e55b19bfbfba15e4d8e570b5a4fb17288eba0f245",
          "dweb:/ipfs/QmPcBckvXy3TXZzSLF7cc1dnfF77V1Y5Zh1JweZ3uZUKND"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/plugin/IPlugin.sol": {
        "keccak256": "0xff0e60999c7f9c78bc57d4ca7eb53e38bd4eefbfb152784e98f8cf7530aad3b8",
        "urls": [
          "bzz-raw://aad36220d44f088e77a9b1e0d0cbe22b869e496e405f09b9366748dc6d482331",
          "dweb:/ipfs/QmSxXpiYvhMarfoG9zXPmmBY9jQQqMtsn72mLc6jdbN8Uc"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/plugin/PluginCloneable.sol": {
        "keccak256": "0xfdfce6920f7163cda9cd930762b225c64f50a9625d34f888fea9c771a12f777b",
        "urls": [
          "bzz-raw://cc690f097210b301b04681de986de4ed83058d5baf712054e4cf040a33197c4a",
          "dweb:/ipfs/Qmb5ENaUrSoL1ttc2op9LQEWUQJww6kneN4FwLKPvJf7ca"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/plugin/PluginUUPSUpgradeable.sol": {
        "keccak256": "0xde1b9e29d70b9e9d731b7b66f649fd2ab3a5725c03c3114dede433bfabe61489",
        "urls": [
          "bzz-raw://6f41187ec3f3214394bdea2a61454da5da6f2cad1469dda8d355241d58e6b6df",
          "dweb:/ipfs/QmenJSxca9T5VkjfgKUtBChToh21n4TXEY1bY21KTMXQmd"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/plugin/dao-authorizable/DaoAuthorizableUpgradeable.sol": {
        "keccak256": "0x4d57aea8920987f368cc6d610a462fb929df38872b174e4fc15d3eaf8bb5e47c",
        "urls": [
          "bzz-raw://e399447f5f219bffc0225f3189e153037e8113c1f3e165b49bb65c7973d9df09",
          "dweb:/ipfs/QmXanA1LgAn3rLqJLmUPcyi9FDcqnYbLk8UNZwM4Jgfbor"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/core/utils/auth.sol": {
        "keccak256": "0x5452788bbdaf93868177c15cefd71f57b5f83293d94a69d98d9505d4c9ec0015",
        "urls": [
          "bzz-raw://33607f6e03e69014d0080a7fd5e1be93ff3a8b80d406b407d2094db4adaf85f2",
          "dweb:/ipfs/QmNxaCF8wTfNUd7Ck942dji6MecuT5HsDrFEwS83ZRgCre"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/token/ERC20/IERC20MintableUpgradeable.sol": {
        "keccak256": "0x67c5e5b94e83984da5427057e3945f1863c5d2a6f35fddd6abc1a11927167a46",
        "urls": [
          "bzz-raw://ae9d9bca9d15cb4ea1bc00d384d0c1eded9109887b482bbe9765b0e46f1ba618",
          "dweb:/ipfs/QmXkPGCDAP92ZXSGesQUSA197ZcEonQ8nQaK4iPyvwCFXi"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/osx/packages/contracts/src/utils/Proxy.sol": {
        "keccak256": "0x4850fcd37ce5e3747d067fd0d50bd9df2b9a1a5c18d19b9d18861191c1943e03",
        "urls": [
          "bzz-raw://e5b685c89e687f6a83c0dd3a54de555f209edb170ec2951b1f529a8e15b6c929",
          "dweb:/ipfs/Qma4N68QwZJeLiZzUdUZw4Nnj6vaavoQSNBa7roWLvZGwc"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/SymbioticBondingCurve.sol": {
        "keccak256": "0xcb70cc0ddb45826428c9057291d09109ba2dcdf4ab2a7b15db05db21128ab156",
        "urls": [
          "bzz-raw://9e4622e3b4d080124dfd2ae034be7a8b51c6a1b989a5a884e9146b77e11501a9",
          "dweb:/ipfs/QmfC3KFqd33ezfKHBmhmmCYAGVYWWLFNvo3qr4UB7eSNd2"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/bonding_curve/ContinuousToken.sol": {
        "keccak256": "0x6b28714177cceefa644c7bdea4e8a6957aa87e164f101268a23e9db1d41b1d56",
        "urls": [
          "bzz-raw://e8f5d2e593a4f139e7f42d88d207707e4db153af5c70636281a7212d55f2caf8",
          "dweb:/ipfs/QmPGe1ZyWYm9bhTs8GzSNUQDAFXVdxT2QnnVHXAPPLz9JY"
        ],
        "license": null
      },
      "src/bonding_curve/curves/BancorBondingCurve.sol": {
        "keccak256": "0x3d6662e74bf6da274154623c7cd7cebac4fb2eb6de7e3dffaf8103da17437a10",
        "urls": [
          "bzz-raw://6542f113d17b4d69cceaa648a462ba2141755fa3650da1fcfcdda2a54c088b87",
          "dweb:/ipfs/QmUfd95zDhAErTGScvsVZbDcgm2foaERgBTa83HbRT7gCR"
        ],
        "license": null
      },
      "src/bonding_curve/interfaces/IBondingCurve.sol": {
        "keccak256": "0xb932c2a0a51f2369e06395efc957783430b59305601226a502afcbac8d91f8a6",
        "urls": [
          "bzz-raw://7155be7b60dc0b18a9afd7977976ec98690799764a44ec3231a25397db03d6e5",
          "dweb:/ipfs/QmQfmt6e7ytJYCfYZbJDYbQxR2HJDGVanNhLrdNvirAUiD"
        ],
        "license": null
      },
      "src/bonding_curve/math/BancorFormula.sol": {
        "keccak256": "0x59e638caadaf1166b3dd40b0752352e89621b56b306b34ba19719abcf5995590",
        "urls": [
          "bzz-raw://b28e76f9d0115382858ac69b2dc0c0562c273d7e44853a8eefeeeb4a1d4c8dea",
          "dweb:/ipfs/QmWSEgXHnarghcBzTvP6XywV665oSvW7DWEzDS7sYJ4FBm"
        ],
        "license": null
      },
      "src/bonding_curve/math/Power.sol": {
        "keccak256": "0xa7a2edc79e4f53d393903bfedea50e09c492d17dddc7c422dc965c4cea05c544",
        "urls": [
          "bzz-raw://c6804e8a3b0550767f98ed788d284741f86d8bb50690c8321708a3a8eedebb23",
          "dweb:/ipfs/QmaJJWY1RHnYXDKKzpEi2DJ4rDTRZvBQYYqrTTKVcLPUSx"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SymbioticBondingCurve.sol",
    "id": 49564,
    "exportedSymbols": {
      "BancorBondingCurve": [
        49894
      ],
      "BancorFormula": [
        50120
      ],
      "Clones": [
        45040
      ],
      "Context": [
        46485
      ],
      "ContextUpgradeable": [
        44565
      ],
      "ContinuousToken": [
        49815
      ],
      "ERC165Upgradeable": [
        44790
      ],
      "ERC20": [
        46030
      ],
      "IBondingCurve": [
        49913
      ],
      "IDAO": [
        47732
      ],
      "IERC20": [
        46108
      ],
      "IERC20Metadata": [
        46133
      ],
      "IERC20MintableUpgradeable": [
        49117
      ],
      "IERC20Upgradeable": [
        43763
      ],
      "Ownable": [
        44915
      ],
      "PluginCloneable": [
        48591
      ],
      "PluginUUPSUpgradeable": [
        48710
      ],
      "Power": [
        52312
      ],
      "SymbioticBondingCurvePlugin": [
        49563
      ],
      "console": [
        21489
      ],
      "createERC1967Proxy": [
        49141
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:5104:71",
    "nodes": [
      {
        "id": 49143,
        "nodeType": "PragmaDirective",
        "src": "42:23:71",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 49144,
        "nodeType": "ImportDirective",
        "src": "67:31:71",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49564,
        "sourceUnit": 21490,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49146,
        "nodeType": "ImportDirective",
        "src": "101:64:71",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49564,
        "sourceUnit": 45041,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49145,
              "name": "Clones",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45040,
              "src": "109:6:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49148,
        "nodeType": "ImportDirective",
        "src": "166:112:71",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49564,
        "sourceUnit": 44791,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49147,
              "name": "ERC165Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44790,
              "src": "174:17:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49150,
        "nodeType": "ImportDirective",
        "src": "279:104:71",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49564,
        "sourceUnit": 43764,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49149,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43763,
              "src": "287:17:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49152,
        "nodeType": "ImportDirective",
        "src": "385:51:71",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/core/dao/IDAO.sol",
        "file": "@aragon/osx/core/dao/IDAO.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49564,
        "sourceUnit": 47733,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49151,
              "name": "IDAO",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47732,
              "src": "393:4:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49154,
        "nodeType": "ImportDirective",
        "src": "437:88:71",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/core/plugin/PluginUUPSUpgradeable.sol",
        "file": "@aragon/osx/core/plugin/PluginUUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49564,
        "sourceUnit": 48711,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49153,
              "name": "PluginUUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48710,
              "src": "445:21:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49157,
        "nodeType": "ImportDirective",
        "src": "526:82:71",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/core/plugin/PluginCloneable.sol",
        "file": "@aragon/osx/core/plugin/PluginCloneable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49564,
        "sourceUnit": 48592,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49155,
              "name": "PluginCloneable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48591,
              "src": "534:15:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 49156,
              "name": "IDAO",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47732,
              "src": "551:4:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49159,
        "nodeType": "ImportDirective",
        "src": "609:96:71",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/token/ERC20/IERC20MintableUpgradeable.sol",
        "file": "@aragon/osx/token/ERC20/IERC20MintableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49564,
        "sourceUnit": 49118,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49158,
              "name": "IERC20MintableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49117,
              "src": "617:25:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49161,
        "nodeType": "ImportDirective",
        "src": "706:63:71",
        "nodes": [],
        "absolutePath": "lib/osx/packages/contracts/src/utils/Proxy.sol",
        "file": "@aragon/osx/utils/Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49564,
        "sourceUnit": 49142,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49160,
              "name": "createERC1967Proxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49141,
              "src": "714:18:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49163,
        "nodeType": "ImportDirective",
        "src": "771:100:71",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49564,
        "sourceUnit": 44566,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49162,
              "name": "ContextUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44565,
              "src": "779:18:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49164,
        "nodeType": "ImportDirective",
        "src": "873:45:71",
        "nodes": [],
        "absolutePath": "src/bonding_curve/ContinuousToken.sol",
        "file": "./bonding_curve/ContinuousToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49564,
        "sourceUnit": 49816,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49563,
        "nodeType": "ContractDefinition",
        "src": "920:4221:71",
        "nodes": [
          {
            "id": 49174,
            "nodeType": "VariableDeclaration",
            "src": "1077:91:71",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 49169,
              "nodeType": "StructuredDocumentation",
              "src": "997:77:71",
              "text": "@notice The ID of the permission required to call the `execute` function."
            },
            "functionSelector": "f8a2c98e",
            "mutability": "constant",
            "name": "ADMIN_EXECUTE_PERMISSION_ID",
            "nameLocation": "1101:27:71",
            "scope": 49563,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 49170,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1077:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e5f455845435554455f5045524d495353494f4e",
                  "id": 49172,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1141:26:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_333faabe8d5b573697f548cb3885d6a81cd1e2ac87d1775bfec70a290e8e4d60",
                    "typeString": "literal_string \"ADMIN_EXECUTE_PERMISSION\""
                  },
                  "value": "ADMIN_EXECUTE_PERMISSION"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_333faabe8d5b573697f548cb3885d6a81cd1e2ac87d1775bfec70a290e8e4d60",
                    "typeString": "literal_string \"ADMIN_EXECUTE_PERMISSION\""
                  }
                ],
                "id": 49171,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1131:9:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 49173,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1131:37:71",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49176,
            "nodeType": "VariableDeclaration",
            "src": "1177:20:71",
            "nodes": [],
            "constant": false,
            "functionSelector": "f851a440",
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "1192:5:71",
            "scope": 49563,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49175,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1177:7:71",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49180,
            "nodeType": "VariableDeclaration",
            "src": "1204:49:71",
            "nodes": [],
            "constant": false,
            "functionSelector": "8cf2b63e",
            "mutability": "mutable",
            "name": "userLockedBalance",
            "nameLocation": "1236:17:71",
            "scope": 49563,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 49179,
              "keyType": {
                "id": 49177,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1212:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1204:24:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 49178,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1223:4:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 49182,
            "nodeType": "VariableDeclaration",
            "src": "1259:24:71",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "reserve",
            "nameLocation": "1276:7:71",
            "scope": 49563,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 49181,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1259:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49185,
            "nodeType": "VariableDeclaration",
            "src": "1290:25:71",
            "nodes": [],
            "constant": false,
            "functionSelector": "f4325d67",
            "mutability": "mutable",
            "name": "reserveToken",
            "nameLocation": "1303:12:71",
            "scope": 49563,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$46030",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 49184,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49183,
                "name": "ERC20",
                "nameLocations": [
                  "1290:5:71"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46030,
                "src": "1290:5:71"
              },
              "referencedDeclaration": 46030,
              "src": "1290:5:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46030",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49187,
            "nodeType": "VariableDeclaration",
            "src": "1321:31:71",
            "nodes": [],
            "constant": false,
            "functionSelector": "c5f956af",
            "mutability": "mutable",
            "name": "treasuryAddress",
            "nameLocation": "1337:15:71",
            "scope": 49563,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49186,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1321:7:71",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49189,
            "nodeType": "VariableDeclaration",
            "src": "1430:18:71",
            "nodes": [],
            "constant": false,
            "functionSelector": "33a4ea06",
            "mutability": "mutable",
            "name": "taxPct",
            "nameLocation": "1442:6:71",
            "scope": 49563,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 49188,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1430:4:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49261,
            "nodeType": "FunctionDefinition",
            "src": "1586:613:71",
            "nodes": [],
            "body": {
              "id": 49260,
              "nodeType": "Block",
              "src": "1747:452:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49209,
                        "name": "_dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49193,
                        "src": "1780:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDAO_$47732",
                          "typeString": "contract IDAO"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IDAO_$47732",
                          "typeString": "contract IDAO"
                        }
                      ],
                      "id": 49208,
                      "name": "__PluginCloneable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48556,
                      "src": "1757:22:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IDAO_$47732_$returns$__$",
                        "typeString": "function (contract IDAO)"
                      }
                    },
                    "id": 49210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1757:28:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49211,
                  "nodeType": "ExpressionStatement",
                  "src": "1757:28:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49213,
                        "name": "_initialReserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49199,
                        "src": "1825:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49214,
                        "name": "_reserveRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49201,
                        "src": "1842:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 49212,
                      "name": "__ContinuousToken__initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49703,
                      "src": "1795:29:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                        "typeString": "function (uint256,uint32)"
                      }
                    },
                    "id": 49215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1795:61:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49216,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:61:71"
                },
                {
                  "expression": {
                    "id": 49219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49217,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49176,
                      "src": "1867:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49218,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49195,
                      "src": "1875:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1867:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 49220,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:14:71"
                },
                {
                  "expression": {
                    "id": 49223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49221,
                      "name": "treasuryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49187,
                      "src": "1891:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49222,
                      "name": "_treasuryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49203,
                      "src": "1909:16:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1891:34:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 49224,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:34:71"
                },
                {
                  "expression": {
                    "id": 49227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49225,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49182,
                      "src": "1946:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49226,
                      "name": "_initialReserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49199,
                      "src": "1956:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1946:25:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49228,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:25:71"
                },
                {
                  "expression": {
                    "id": 49233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49229,
                      "name": "reserveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49185,
                      "src": "1981:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$46030",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49231,
                          "name": "_reserveToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49197,
                          "src": "2002:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 49230,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46030,
                        "src": "1996:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$46030_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 49232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1996:20:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$46030",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1981:35:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$46030",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 49234,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:35:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 49238,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            49550
                          ],
                          "referencedDeclaration": 49550,
                          "src": "2052:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 49239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2052:12:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 49242,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2074:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                              "typeString": "contract SymbioticBondingCurvePlugin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                              "typeString": "contract SymbioticBondingCurvePlugin"
                            }
                          ],
                          "id": 49241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2066:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49240,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2066:7:71",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2066:13:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49244,
                        "name": "_initialReserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49199,
                        "src": "2081:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49235,
                        "name": "reserveToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49185,
                        "src": "2026:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$46030",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 49237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2039:12:71",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45643,
                      "src": "2026:25:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 49245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2026:71:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49246,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:71:71"
                },
                {
                  "expression": {
                    "id": 49258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49247,
                        "name": "userLockedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49180,
                        "src": "2107:17:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 49250,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 49248,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            49550
                          ],
                          "referencedDeclaration": 49550,
                          "src": "2125:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 49249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2125:12:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2107:31:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 49251,
                          "name": "userLockedBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49180,
                          "src": "2141:17:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 49254,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49252,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              49550
                            ],
                            "referencedDeclaration": 49550,
                            "src": "2159:10:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 49253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2159:12:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2141:31:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "id": 49255,
                            "name": "_initialReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49199,
                            "src": "2176:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 49256,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2175:17:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2141:51:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2107:85:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49259,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:85:71"
                }
              ]
            },
            "documentation": {
              "id": 49190,
              "nodeType": "StructuredDocumentation",
              "src": "1456:125:71",
              "text": "@notice Initializes the contract.\n @param _dao The associated DAO.\n @param _admin The address of the admin."
            },
            "functionSelector": "8e8ab69e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 49206,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49205,
                  "name": "initializer",
                  "nameLocations": [
                    "1735:11:71"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43288,
                  "src": "1735:11:71"
                },
                "nodeType": "ModifierInvocation",
                "src": "1735:11:71"
              }
            ],
            "name": "initialize",
            "nameLocation": "1595:10:71",
            "parameters": {
              "id": 49204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49193,
                  "mutability": "mutable",
                  "name": "_dao",
                  "nameLocation": "1611:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 49261,
                  "src": "1606:9:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDAO_$47732",
                    "typeString": "contract IDAO"
                  },
                  "typeName": {
                    "id": 49192,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49191,
                      "name": "IDAO",
                      "nameLocations": [
                        "1606:4:71"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47732,
                      "src": "1606:4:71"
                    },
                    "referencedDeclaration": 47732,
                    "src": "1606:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDAO_$47732",
                      "typeString": "contract IDAO"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49195,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1625:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 49261,
                  "src": "1617:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49197,
                  "mutability": "mutable",
                  "name": "_reserveToken",
                  "nameLocation": "1641:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 49261,
                  "src": "1633:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1633:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49199,
                  "mutability": "mutable",
                  "name": "_initialReserve",
                  "nameLocation": "1661:15:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 49261,
                  "src": "1656:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49198,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1656:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49201,
                  "mutability": "mutable",
                  "name": "_reserveRatio",
                  "nameLocation": "1685:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 49261,
                  "src": "1678:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 49200,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49203,
                  "mutability": "mutable",
                  "name": "_treasuryAddress",
                  "nameLocation": "1708:16:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 49261,
                  "src": "1700:24:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1605:120:71"
            },
            "returnParameters": {
              "id": 49207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1747:0:71"
            },
            "scope": 49563,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49281,
            "nodeType": "FunctionDefinition",
            "src": "2210:156:71",
            "nodes": [],
            "body": {
              "id": 49280,
              "nodeType": "Block",
              "src": "2278:88:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49271,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2337:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                              "typeString": "contract SymbioticBondingCurvePlugin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                              "typeString": "contract SymbioticBondingCurvePlugin"
                            }
                          ],
                          "id": 49270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2329:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49269,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2329:7:71",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2329:13:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2349:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 49274,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2349:4:71",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 49273,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2344:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2344:10:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 49277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2355:3:71",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2344:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49268,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45610,
                      "src": "2321:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 49278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2321:38:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49279,
                  "nodeType": "ExpressionStatement",
                  "src": "2321:38:71"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "53796d62696f746963426f6e64696e674375727665506c7567696e",
                    "id": 49264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2240:29:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cb89f86aa7320c01d43f487b23f39c995e75ea49942716bdc8f716c7e9affb40",
                      "typeString": "literal_string \"SymbioticBondingCurvePlugin\""
                    },
                    "value": "SymbioticBondingCurvePlugin"
                  },
                  {
                    "hexValue": "534243",
                    "id": 49265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2271:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c6bd34552b0e78476814d380c2d3a3872d1385d8d5b08b12e7ebcfc93181aab5",
                      "typeString": "literal_string \"SBC\""
                    },
                    "value": "SBC"
                  }
                ],
                "id": 49266,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 49263,
                  "name": "ContinuousToken",
                  "nameLocations": [
                    "2224:15:71"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49815,
                  "src": "2224:15:71"
                },
                "nodeType": "ModifierInvocation",
                "src": "2224:53:71"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 49262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2221:2:71"
            },
            "returnParameters": {
              "id": 49267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2278:0:71"
            },
            "scope": 49563,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49328,
            "nodeType": "FunctionDefinition",
            "src": "2372:336:71",
            "nodes": [],
            "body": {
              "id": 49327,
              "nodeType": "Block",
              "src": "2421:287:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49288,
                        "name": "userLockedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49180,
                        "src": "2431:17:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 49291,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 49289,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            49550
                          ],
                          "referencedDeclaration": 49550,
                          "src": "2449:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 49290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2449:12:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2431:31:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 49292,
                          "name": "userLockedBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49180,
                          "src": "2465:17:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 49295,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49293,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              49550
                            ],
                            "referencedDeclaration": 49550,
                            "src": "2483:10:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 49294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2483:12:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2465:31:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 49296,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49283,
                        "src": "2499:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2465:41:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2431:75:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49299,
                  "nodeType": "ExpressionStatement",
                  "src": "2431:75:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 49303,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            49550
                          ],
                          "referencedDeclaration": 49550,
                          "src": "2542:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 49304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2542:12:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 49307,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2564:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                              "typeString": "contract SymbioticBondingCurvePlugin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                              "typeString": "contract SymbioticBondingCurvePlugin"
                            }
                          ],
                          "id": 49306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2556:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49305,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2556:7:71",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2556:13:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49309,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49283,
                        "src": "2571:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49300,
                        "name": "reserveToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49185,
                        "src": "2516:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$46030",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 49302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2529:12:71",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45643,
                      "src": "2516:25:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 49310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2516:63:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49311,
                  "nodeType": "ExpressionStatement",
                  "src": "2516:63:71"
                },
                {
                  "assignments": [
                    49313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49313,
                      "mutability": "mutable",
                      "name": "amountMinted",
                      "nameLocation": "2594:12:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 49327,
                      "src": "2589:17:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49312,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2589:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49317,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49315,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49283,
                        "src": "2625:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49314,
                      "name": "_continuousMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49749,
                      "src": "2609:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 49316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2609:24:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2589:44:71"
                },
                {
                  "expression": {
                    "id": 49323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49318,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49182,
                      "src": "2643:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49319,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49182,
                        "src": "2653:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "id": 49320,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49283,
                            "src": "2664:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 49321,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2663:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2653:19:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2643:29:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49324,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:29:71"
                },
                {
                  "expression": {
                    "id": 49325,
                    "name": "amountMinted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49313,
                    "src": "2689:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 49287,
                  "id": 49326,
                  "nodeType": "Return",
                  "src": "2682:19:71"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2381:4:71",
            "parameters": {
              "id": 49284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49283,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2391:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 49328,
                  "src": "2386:12:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49282,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2385:14:71"
            },
            "returnParameters": {
              "id": 49287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49328,
                  "src": "2415:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49285,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2415:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2414:6:71"
            },
            "scope": 49563,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49372,
            "nodeType": "FunctionDefinition",
            "src": "2714:334:71",
            "nodes": [],
            "body": {
              "id": 49371,
              "nodeType": "Block",
              "src": "2763:285:71",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49336,
                      "mutability": "mutable",
                      "name": "refundAmount",
                      "nameLocation": "2778:12:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 49371,
                      "src": "2773:17:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49335,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2773:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49340,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49338,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49330,
                        "src": "2809:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49337,
                      "name": "_continuousBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49795,
                      "src": "2793:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 49339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2793:24:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2773:44:71"
                },
                {
                  "expression": {
                    "id": 49352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49341,
                        "name": "userLockedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49180,
                        "src": "2827:17:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 49344,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 49342,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            49550
                          ],
                          "referencedDeclaration": 49550,
                          "src": "2845:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 49343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2845:12:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2827:31:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 49345,
                          "name": "userLockedBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49180,
                          "src": "2861:17:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 49348,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49346,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              49550
                            ],
                            "referencedDeclaration": 49550,
                            "src": "2879:10:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 49347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2879:12:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2861:31:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "components": [
                          {
                            "id": 49349,
                            "name": "refundAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49336,
                            "src": "2896:12:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 49350,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2895:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2861:48:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2827:82:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49353,
                  "nodeType": "ExpressionStatement",
                  "src": "2827:82:71"
                },
                {
                  "expression": {
                    "id": 49359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49354,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49182,
                      "src": "2919:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49355,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49182,
                        "src": "2929:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "components": [
                          {
                            "id": 49356,
                            "name": "refundAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49336,
                            "src": "2940:12:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 49357,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2939:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2929:24:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2919:34:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49360,
                  "nodeType": "ExpressionStatement",
                  "src": "2919:34:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 49364,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            49550
                          ],
                          "referencedDeclaration": 49550,
                          "src": "2985:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 49365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2985:12:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49366,
                        "name": "refundAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49336,
                        "src": "2999:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49361,
                        "name": "reserveToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49185,
                        "src": "2963:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$46030",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 49363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2976:8:71",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45567,
                      "src": "2963:21:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 49367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2963:49:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49368,
                  "nodeType": "ExpressionStatement",
                  "src": "2963:49:71"
                },
                {
                  "expression": {
                    "id": 49369,
                    "name": "refundAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49336,
                    "src": "3029:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 49334,
                  "id": 49370,
                  "nodeType": "Return",
                  "src": "3022:19:71"
                }
              ]
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2723:4:71",
            "parameters": {
              "id": 49331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49330,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2733:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 49372,
                  "src": "2728:12:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49329,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2728:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2727:14:71"
            },
            "returnParameters": {
              "id": 49334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49333,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49372,
                  "src": "2757:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49332,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2756:6:71"
            },
            "scope": 49563,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49381,
            "nodeType": "FunctionDefinition",
            "src": "3054:93:71",
            "nodes": [],
            "body": {
              "id": 49380,
              "nodeType": "Block",
              "src": "3116:31:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49378,
                    "name": "reserve",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49182,
                    "src": "3133:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 49377,
                  "id": 49379,
                  "nodeType": "Return",
                  "src": "3126:14:71"
                }
              ]
            },
            "baseFunctions": [
              49893
            ],
            "functionSelector": "a10954fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reserveBalance",
            "nameLocation": "3063:14:71",
            "overrides": {
              "id": 49374,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3080:8:71"
            },
            "parameters": {
              "id": 49373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3077:2:71"
            },
            "returnParameters": {
              "id": 49377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49376,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49381,
                  "src": "3110:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49375,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3109:6:71"
            },
            "scope": 49563,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49397,
            "nodeType": "FunctionDefinition",
            "src": "3155:124:71",
            "nodes": [],
            "body": {
              "id": 49396,
              "nodeType": "Block",
              "src": "3208:71:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49390,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3256:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                "typeString": "contract SymbioticBondingCurvePlugin"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                "typeString": "contract SymbioticBondingCurvePlugin"
                              }
                            ],
                            "id": 49389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3248:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49388,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3248:7:71",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3248:13:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49386,
                          "name": "reserveToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49185,
                          "src": "3225:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$46030",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 49387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3238:9:71",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45542,
                        "src": "3225:22:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3225:37:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 49393,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49182,
                      "src": "3265:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3225:47:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 49385,
                  "id": 49395,
                  "nodeType": "Return",
                  "src": "3218:54:71"
                }
              ]
            },
            "functionSelector": "9db3ad7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reserveSurplus",
            "nameLocation": "3164:14:71",
            "parameters": {
              "id": 49382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3178:2:71"
            },
            "returnParameters": {
              "id": 49385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49384,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49397,
                  "src": "3202:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49383,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3202:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3201:6:71"
            },
            "scope": 49563,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49514,
            "nodeType": "FunctionDefinition",
            "src": "3287:1272:71",
            "nodes": [],
            "body": {
              "id": 49513,
              "nodeType": "Block",
              "src": "3333:1226:71",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49403,
                      "mutability": "mutable",
                      "name": "surplus",
                      "nameLocation": "3348:7:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 49513,
                      "src": "3343:12:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49402,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3343:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49406,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49404,
                      "name": "reserveSurplus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49397,
                      "src": "3358:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 49405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3358:16:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3343:31:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49407,
                      "name": "mode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49399,
                      "src": "3428:4:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 49408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3436:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3428:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49418,
                  "nodeType": "IfStatement",
                  "src": "3425:98:71",
                  "trueBody": {
                    "id": 49417,
                    "nodeType": "Block",
                    "src": "3438:85:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49413,
                              "name": "treasuryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49187,
                              "src": "3487:15:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 49414,
                              "name": "surplus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49403,
                              "src": "3504:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 49410,
                              "name": "reserveToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49185,
                              "src": "3465:12:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$46030",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 49412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3478:8:71",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45567,
                            "src": "3465:21:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 49415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3465:47:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 49416,
                        "nodeType": "ExpressionStatement",
                        "src": "3465:47:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49419,
                      "name": "mode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49399,
                      "src": "3576:4:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 49420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3584:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3576:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49481,
                  "nodeType": "IfStatement",
                  "src": "3573:676:71",
                  "trueBody": {
                    "id": 49480,
                    "nodeType": "Block",
                    "src": "3587:662:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 49436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 49422,
                              "name": "userLockedBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49180,
                              "src": "3651:17:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 49427,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 49425,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3677:4:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                    "typeString": "contract SymbioticBondingCurvePlugin"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                    "typeString": "contract SymbioticBondingCurvePlugin"
                                  }
                                ],
                                "id": 49424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3669:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 49423,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3669:7:71",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3669:13:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3651:32:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 49435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 49428,
                                "name": "userLockedBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49180,
                                "src": "3686:17:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 49433,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 49431,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3712:4:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                      "typeString": "contract SymbioticBondingCurvePlugin"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                      "typeString": "contract SymbioticBondingCurvePlugin"
                                    }
                                  ],
                                  "id": 49430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3704:7:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 49429,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3704:7:71",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 49432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3704:13:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3686:32:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 49434,
                              "name": "surplus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49403,
                              "src": "3721:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3686:42:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3651:77:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49437,
                        "nodeType": "ExpressionStatement",
                        "src": "3651:77:71"
                      },
                      {
                        "assignments": [
                          49439
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 49439,
                            "mutability": "mutable",
                            "name": "rewardAmount",
                            "nameLocation": "3821:12:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 49480,
                            "src": "3816:17:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 49438,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3816:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 49443,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 49441,
                              "name": "surplus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49403,
                              "src": "3860:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 49440,
                            "name": "getContinuousMintReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49863,
                            "src": "3836:23:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 49442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3836:32:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3816:52:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 49447,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3896:4:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                    "typeString": "contract SymbioticBondingCurvePlugin"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                    "typeString": "contract SymbioticBondingCurvePlugin"
                                  }
                                ],
                                "id": 49446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3888:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 49445,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3888:7:71",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3888:13:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 49449,
                              "name": "rewardAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49439,
                              "src": "3903:12:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 49444,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45847,
                            "src": "3882:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 49450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3882:34:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49451,
                        "nodeType": "ExpressionStatement",
                        "src": "3882:34:71"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 49455,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3950:4:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                    "typeString": "contract SymbioticBondingCurvePlugin"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                    "typeString": "contract SymbioticBondingCurvePlugin"
                                  }
                                ],
                                "id": 49454,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3942:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 49453,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3942:7:71",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3942:13:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 49457,
                              "name": "rewardAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49439,
                              "src": "3957:12:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 49458,
                              "name": "surplus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49403,
                              "src": "3971:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 49452,
                            "name": "Minted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49662,
                            "src": "3935:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 49459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3935:44:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49460,
                        "nodeType": "EmitStatement",
                        "src": "3930:49:71"
                      },
                      {
                        "expression": {
                          "id": 49466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 49461,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49182,
                            "src": "4028:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 49465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49462,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49182,
                              "src": "4038:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "id": 49463,
                                  "name": "surplus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49403,
                                  "src": "4049:7:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 49464,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4048:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4038:19:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4028:29:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49467,
                        "nodeType": "ExpressionStatement",
                        "src": "4028:29:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 49471,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4196:4:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                    "typeString": "contract SymbioticBondingCurvePlugin"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                    "typeString": "contract SymbioticBondingCurvePlugin"
                                  }
                                ],
                                "id": 49470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4188:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 49469,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4188:7:71",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4188:13:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30786465616462656566",
                                  "id": 49475,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4211:10:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3735928559_by_1",
                                    "typeString": "int_const 3735928559"
                                  },
                                  "value": "0xdeadbeef"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_3735928559_by_1",
                                    "typeString": "int_const 3735928559"
                                  }
                                ],
                                "id": 49474,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4203:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 49473,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4203:7:71",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4203:19:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 49477,
                              "name": "rewardAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49439,
                              "src": "4224:12:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 49468,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45790,
                            "src": "4178:9:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 49478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4178:59:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49479,
                        "nodeType": "ExpressionStatement",
                        "src": "4178:59:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49482,
                      "name": "mode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49399,
                      "src": "4301:4:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 49483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4309:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "4301:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49512,
                  "nodeType": "IfStatement",
                  "src": "4297:255:71",
                  "trueBody": {
                    "id": 49511,
                    "nodeType": "Block",
                    "src": "4312:240:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 49493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 49485,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49182,
                            "src": "4326:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 49490,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "4367:4:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                      "typeString": "contract SymbioticBondingCurvePlugin"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SymbioticBondingCurvePlugin_$49563",
                                      "typeString": "contract SymbioticBondingCurvePlugin"
                                    }
                                  ],
                                  "id": 49489,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4359:7:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 49488,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4359:7:71",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 49491,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4359:13:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 49486,
                                "name": "reserveToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49185,
                                "src": "4336:12:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$46030",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 49487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4349:9:71",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45542,
                              "src": "4336:22:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 49492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4336:37:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4326:47:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49494,
                        "nodeType": "ExpressionStatement",
                        "src": "4326:47:71"
                      },
                      {
                        "assignments": [
                          49496
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 49496,
                            "mutability": "mutable",
                            "name": "supply",
                            "nameLocation": "4393:6:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 49511,
                            "src": "4388:11:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 49495,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4388:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 49499,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49497,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45528,
                            "src": "4402:11:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 49498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4402:13:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4388:27:71"
                      },
                      {
                        "assignments": [
                          49501
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 49501,
                            "mutability": "mutable",
                            "name": "newReserveRatio",
                            "nameLocation": "4436:15:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 49511,
                            "src": "4429:22:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 49500,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4429:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 49506,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 49503,
                              "name": "supply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49496,
                              "src": "4476:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 49504,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49182,
                              "src": "4484:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 49502,
                            "name": "calculateReserveRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49538,
                            "src": "4454:21:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint32_$",
                              "typeString": "function (uint256,uint256) view returns (uint32)"
                            }
                          },
                          "id": 49505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4454:38:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4429:63:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49508,
                              "name": "newReserveRatio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49501,
                              "src": "4525:15:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 49507,
                            "name": "updateReserveRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49845,
                            "src": "4506:18:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$returns$__$",
                              "typeString": "function (uint32)"
                            }
                          },
                          "id": 49509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4506:35:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49510,
                        "nodeType": "ExpressionStatement",
                        "src": "4506:35:71"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "cb0aad36",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "manageYieldSurplus",
            "nameLocation": "3296:18:71",
            "parameters": {
              "id": 49400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49399,
                  "mutability": "mutable",
                  "name": "mode",
                  "nameLocation": "3320:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 49514,
                  "src": "3315:9:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49398,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3314:11:71"
            },
            "returnParameters": {
              "id": 49401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3333:0:71"
            },
            "scope": 49563,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49538,
            "nodeType": "FunctionDefinition",
            "src": "4565:275:71",
            "nodes": [],
            "body": {
              "id": 49537,
              "nodeType": "Block",
              "src": "4654:186:71",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49524,
                      "mutability": "mutable",
                      "name": "newReserveRatio",
                      "nameLocation": "4701:15:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 49537,
                      "src": "4694:22:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 49523,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4694:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49534,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 49529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 49527,
                                "name": "_supply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49516,
                                "src": "4727:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 49528,
                                "name": "_reserve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49518,
                                "src": "4737:8:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4727:18:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 49530,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4726:20:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "31303030303030",
                          "id": 49531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4749:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "src": "4726:30:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4719:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 49525,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4719:6:71",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 49533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4719:38:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4694:63:71"
                },
                {
                  "expression": {
                    "id": 49535,
                    "name": "newReserveRatio",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49524,
                    "src": "4818:15:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 49522,
                  "id": 49536,
                  "nodeType": "Return",
                  "src": "4811:22:71"
                }
              ]
            },
            "functionSelector": "630e9032",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateReserveRatio",
            "nameLocation": "4574:21:71",
            "parameters": {
              "id": 49519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49516,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "4601:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 49538,
                  "src": "4596:12:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49515,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4596:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49518,
                  "mutability": "mutable",
                  "name": "_reserve",
                  "nameLocation": "4615:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 49538,
                  "src": "4610:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49517,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4610:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4595:29:71"
            },
            "returnParameters": {
              "id": 49522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49521,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49538,
                  "src": "4646:6:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 49520,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4646:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4645:8:71"
            },
            "scope": 49563,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49550,
            "nodeType": "FunctionDefinition",
            "src": "4862:132:71",
            "nodes": [],
            "body": {
              "id": 49549,
              "nodeType": "Block",
              "src": "4962:32:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 49546,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4979:3:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 49547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4983:6:71",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4979:10:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 49545,
                  "id": 49548,
                  "nodeType": "Return",
                  "src": "4972:17:71"
                }
              ]
            },
            "baseFunctions": [
              44550,
              46475
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "4871:10:71",
            "overrides": {
              "id": 49542,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 49540,
                  "name": "Context",
                  "nameLocations": [
                    "4915:7:71"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46485,
                  "src": "4915:7:71"
                },
                {
                  "id": 49541,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "4924:18:71"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44565,
                  "src": "4924:18:71"
                }
              ],
              "src": "4906:37:71"
            },
            "parameters": {
              "id": 49539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4881:2:71"
            },
            "returnParameters": {
              "id": 49545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49550,
                  "src": "4953:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4953:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4952:9:71"
            },
            "scope": 49563,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 49562,
            "nodeType": "FunctionDefinition",
            "src": "5000:139:71",
            "nodes": [],
            "body": {
              "id": 49561,
              "nodeType": "Block",
              "src": "5107:32:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 49558,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5124:3:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 49559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5128:4:71",
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "5124:8:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 49557,
                  "id": 49560,
                  "nodeType": "Return",
                  "src": "5117:15:71"
                }
              ]
            },
            "baseFunctions": [
              44559,
              46484
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "5009:8:71",
            "overrides": {
              "id": 49554,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 49552,
                  "name": "Context",
                  "nameLocations": [
                    "5052:7:71"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46485,
                  "src": "5052:7:71"
                },
                {
                  "id": 49553,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "5061:18:71"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44565,
                  "src": "5061:18:71"
                }
              ],
              "src": "5043:37:71"
            },
            "parameters": {
              "id": 49551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5017:2:71"
            },
            "returnParameters": {
              "id": 49557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49556,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49562,
                  "src": "5091:14:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49555,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5091:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5090:16:71"
            },
            "scope": 49563,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49165,
              "name": "PluginCloneable",
              "nameLocations": [
                "960:15:71"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48591,
              "src": "960:15:71"
            },
            "id": 49166,
            "nodeType": "InheritanceSpecifier",
            "src": "960:15:71"
          },
          {
            "baseName": {
              "id": 49167,
              "name": "ContinuousToken",
              "nameLocations": [
                "977:15:71"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49815,
              "src": "977:15:71"
            },
            "id": 49168,
            "nodeType": "InheritanceSpecifier",
            "src": "977:15:71"
          }
        ],
        "canonicalName": "SymbioticBondingCurvePlugin",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49563,
          49815,
          49894,
          50120,
          52312,
          49913,
          46030,
          46133,
          46108,
          44915,
          46485,
          48591,
          48775,
          44565,
          44790,
          44802,
          43386,
          48517
        ],
        "name": "SymbioticBondingCurvePlugin",
        "nameLocation": "929:27:71",
        "scope": 49564,
        "usedErrors": []
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 71
}