{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_depositAmount",
          "type": "uint256"
        }
      ],
      "name": "calculatePurchaseReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_sellAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSaleReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "561:29:77:-:0;384:3714:76;561:29:77;;384:3714:76;561:29:77;;;-1:-1:-1;;;561:29:77;;-1:-1:-1;;561:29:77;;-1:-1:-1;561:29:77;:::i;:::-;;384:3714:76;;;;;;;;;-1:-1:-1;;;;;;4042:15:77;:54;-1:-1:-1;;;;;4106:15:77;:54;-1:-1:-1;;;;;4170:15:77;:54;-1:-1:-1;;;;;4234:15:77;:54;-1:-1:-1;;;;;4298:15:77;:54;-1:-1:-1;;;;;4362:15:77;:54;-1:-1:-1;;;;;4426:15:77;:54;-1:-1:-1;;;;;4490:15:77;:54;-1:-1:-1;;;;;4554:15:77;:54;-1:-1:-1;;;;;4618:15:77;:54;-1:-1:-1;;;;;4682:15:77;:54;-1:-1:-1;;;;;4746:15:77;:54;-1:-1:-1;;;;;4810:15:77;:54;-1:-1:-1;;;;;4874:15:77;:54;-1:-1:-1;;;;;4938:15:77;:54;-1:-1:-1;;;;;5002:15:77;:54;-1:-1:-1;;;;;5066:15:77;:54;-1:-1:-1;;;;;5130:15:77;:54;-1:-1:-1;;;;;5194:15:77;:54;-1:-1:-1;;;;;5258:15:77;:54;-1:-1:-1;;;;;5322:15:77;:54;-1:-1:-1;;;;;5386:15:77;:54;-1:-1:-1;;;;;5450:15:77;:54;-1:-1:-1;;;;;5514:15:77;:54;-1:-1:-1;;;;;5578:15:77;:54;-1:-1:-1;;;;;5642:15:77;:54;-1:-1:-1;;;;;5706:15:77;:54;-1:-1:-1;;;;;5770:15:77;:54;-1:-1:-1;;;;;5834:15:77;:54;-1:-1:-1;;;;;5898:15:77;:54;-1:-1:-1;;;;;5962:15:77;:54;-1:-1:-1;;;;;6026:15:77;:54;-1:-1:-1;;;;;6090:15:77;:54;-1:-1:-1;;;;;6154:15:77;:54;-1:-1:-1;;;;;6218:15:77;:54;-1:-1:-1;;;;;6282:15:77;:54;-1:-1:-1;;;;;6346:15:77;:54;-1:-1:-1;;;;;6410:15:77;:54;-1:-1:-1;;;;;6474:15:77;:54;-1:-1:-1;;;;;6538:15:77;:54;-1:-1:-1;;;;;6602:15:77;:54;-1:-1:-1;;;;;6666:15:77;:54;-1:-1:-1;;;;;6730:15:77;:54;-1:-1:-1;;;;;6794:15:77;:54;-1:-1:-1;;;;;6858:15:77;:54;6940:36;6922:15;:54;7004:36;6986:15;:54;7068:36;7050:15;:54;7132:36;7114:15;:54;7196:36;7178:15;:54;7260:36;7242:15;:54;7324:36;7306:15;:54;7388:36;7370:15;:54;7452:36;7434:15;:54;7516:36;7498:15;:54;7580:36;7562:15;:54;7644:36;7626:15;:54;7708:36;7690:15;:54;7772:36;7754:15;:54;7836:36;7818:15;:54;7900:36;7882:15;:54;7964:36;7946:15;:54;8028:36;8010:15;:54;-1:-1:-1;;;;;8074:15:77;:54;8156:36;8138:15;:54;8220:36;8202:15;:54;8284:36;8266:15;:54;8348:36;8330:15;:54;8413:36;8394:16;:55;8478:36;8459:16;:55;8543:36;8524:16;:55;8608:36;8589:16;:55;8673:36;8654:16;:55;8738:36;8719:16;:55;8803:36;8784:16;:55;8868:36;8849:16;:55;8933:36;8914:16;:55;8998:36;8979:16;:55;9063:36;9044:16;:55;9128:36;9109:16;:55;9193:36;9174:16;:55;9258:36;9239:16;:55;9323:36;9304:16;:55;9388:36;9369:16;:55;9453:36;9434:16;:55;9518:36;9499:16;:55;9583:36;9564:16;:55;9648:36;9629:16;:55;9713:36;9694:16;:55;9778:36;9759:16;:55;9843:36;9824:16;:55;9908:36;9889:16;:55;9973:36;9954:16;:55;10038:36;10019:16;:55;10103:36;10084:16;:55;10168:36;10149:16;:55;384:3714:76;;14:127:80;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:80;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:80;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:80;;;2580:26;2531:89;-1:-1:-1;;1335:1:80;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:80;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:80;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:80;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:80:o;2735:127::-;384:3714:76;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806329a00e7c1461004657806349f9b0f71461006c57806354fd4d501461007f575b600080fd5b6100596100543660046118f3565b610094565b6040519081526020015b60405180910390f35b61005961007a3660046118f3565b61019d565b6100876102b5565b604051610063919061193b565b600080851180156100a55750600084115b80156100b7575060008363ffffffff16115b80156100cc5750620f424063ffffffff841611155b61010f5760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21034b7383aba399760891b60448201526064015b60405180910390fd5b8160000361011f57506000610195565b620f423f1963ffffffff84160161014c578361013b838761199f565b61014591906119cc565b9050610195565b6000808061015a87866119e0565b905061016b818888620f4240610343565b9093509150600060ff8316610180858b61199f565b901c905061018e89826119f3565b9450505050505b949350505050565b600080851180156101ae5750600084115b80156101c0575060008363ffffffff16115b80156101d55750620f424063ffffffff841611155b80156101e15750848211155b61021f5760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21034b7383aba399760891b6044820152606401610106565b8160000361022f57506000610195565b84820361023d575082610195565b620f423f1963ffffffff841601610259578461013b838661199f565b6000808061026785896119f3565b90506102788882620f424089610343565b90935091506000610289848961199f565b905060ff831688901b8461029d82846119f3565b6102a791906119cc565b9a9950505050505050505050565b600080546102c290611a06565b80601f01602080910402602001604051908101604052809291908181526020018280546102ee90611a06565b801561033b5780601f106103105761010080835404028352916020019161033b565b820191906000526020600020905b81548152906001019060200180831161031e57829003601f168201915b505050505081565b600080600160811b86106103995760405162461bcd60e51b815260206004820152601860248201527f626173654e2065786365656473206d61782076616c75652e00000000000000006044820152606401610106565b848610156103e95760405162461bcd60e51b815260206004820152601c60248201527f4261736573203c203120617265206e6f7420737570706f727465642e000000006044820152606401610106565b600080866103fb6001607f1b8a61199f565b61040591906119cc565b905070015bf0a8b1457695355fb8ac404e7a79e381101561043057610429816104c3565b915061043c565b61043981610a3c565b91505b60008563ffffffff168763ffffffff1684610457919061199f565b61046191906119cc565b9050600160831b8110156104865761047881610b2b565b607f945094505050506104ba565b600061049182611156565b90506104ad6104a182607f611a40565b60ff1683901c8261121b565b955093506104ba92505050565b94509492505050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd8861061051c576104ee6001607e1b856119e0565b93506fd3094c70f034de4b96ff7d5b6f99fcd861050f6001607f1b8861199f565b61051991906119cc565b95505b6fa45af1e1f40c333b3de1db4dd55f29a7861061056f576105416001607d1b856119e0565b93506fa45af1e1f40c333b3de1db4dd55f29a76105626001607f1b8861199f565b61056c91906119cc565b95505b6f910b022db7ae67ce76b441c27035c6a186106105c2576105946001607c1b856119e0565b93506f910b022db7ae67ce76b441c27035c6a16105b56001607f1b8861199f565b6105bf91906119cc565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610610615576105e76001607b1b856119e0565b93506f88415abbe9a76bead8d00cf112e4d4a86106086001607f1b8861199f565b61061291906119cc565b95505b6f84102b00893f64c705e841d5d4064bd386106106685761063a6001607a1b856119e0565b93506f84102b00893f64c705e841d5d4064bd361065b6001607f1b8861199f565b61066591906119cc565b95505b6f8204055aaef1c8bd5c3259f4822735a286106106bb5761068d600160791b856119e0565b93506f8204055aaef1c8bd5c3259f4822735a26106ae6001607f1b8861199f565b6106b891906119cc565b95505b6f810100ab00222d861931c15e39b44e99861061070e576106e0600160781b856119e0565b93506f810100ab00222d861931c15e39b44e996107016001607f1b8861199f565b61070b91906119cc565b95505b6f808040155aabbbe9451521693554f733861061076157610733600160771b856119e0565b93506f808040155aabbbe9451521693554f7336107546001607f1b8861199f565b61075e91906119cc565b95505b61076f6001607f1b876119f3565b92508291506001607f1b610783838061199f565b61078d91906119cc565b9050600160801b61079e84826119f3565b6107a8908461199f565b6107b291906119cc565b6107bc90856119e0565b93506001607f1b6107cd828461199f565b6107d791906119cc565b9150600160811b6107f8846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6119f3565b610802908461199f565b61080c91906119cc565b61081690856119e0565b93506001607f1b610827828461199f565b61083191906119cc565b9150600360801b610852846f999999999999999999999999999999996119f3565b61085c908461199f565b61086691906119cc565b61087090856119e0565b93506001607f1b610881828461199f565b61088b91906119cc565b9150600160821b6108ac846f924924924924924924924924924924926119f3565b6108b6908461199f565b6108c091906119cc565b6108ca90856119e0565b93506001607f1b6108db828461199f565b6108e591906119cc565b9150600560801b610906846f8e38e38e38e38e38e38e38e38e38e38e6119f3565b610910908461199f565b61091a91906119cc565b61092490856119e0565b93506001607f1b610935828461199f565b61093f91906119cc565b9150600360811b610960846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b6119f3565b61096a908461199f565b61097491906119cc565b61097e90856119e0565b93506001607f1b61098f828461199f565b61099991906119cc565b9150600760801b6109ba846f89d89d89d89d89d89d89d89d89d89d896119f3565b6109c4908461199f565b6109ce91906119cc565b6109d890856119e0565b93506001607f1b6109e9828461199f565b6109f391906119cc565b9150600160831b610a14846f888888888888888888888888888888886119f3565b610a1e908461199f565b610a2891906119cc565b610a3290856119e0565b9695505050505050565b60008082600160801b8110610a81576000610a63610a5e6001607f1b846119cc565b611884565b60ff811692831c92909150610a7d906001607f1b9061199f565b9250505b6001607f1b811115610af657607f5b60ff811615610af4576001607f1b610aa8838061199f565b610ab291906119cc565b9150600160801b8210610ae457600191821c91610acf9082611a40565b60ff166001901b83610ae191906119e0565b92505b610aed81611a59565b9050610a90565b505b6f05b9de1d10bf4103d647b0955897ba80610b216f03f80fe03f80fe03f80fe03f80fe03f88461199f565b61019591906119cc565b6000808080610b3e6001607c1b86611a76565b91508190506001607f1b610b52828061199f565b610b5c91906119cc565b9050610b70816710e1b3be415a000061199f565b610b7a90846119e0565b92506001607f1b610b8b838361199f565b610b9591906119cc565b9050610ba9816705a0913f6b1e000061199f565b610bb390846119e0565b92506001607f1b610bc4838361199f565b610bce91906119cc565b9050610be281670168244fdac7800061199f565b610bec90846119e0565b92506001607f1b610bfd838361199f565b610c0791906119cc565b9050610c1a81664807432bc1800061199f565b610c2490846119e0565b92506001607f1b610c35838361199f565b610c3f91906119cc565b9050610c5281660c0135dca0400061199f565b610c5c90846119e0565b92506001607f1b610c6d838361199f565b610c7791906119cc565b9050610c8a816601b707b1cdc00061199f565b610c9490846119e0565b92506001607f1b610ca5838361199f565b610caf91906119cc565b9050610cc1816536e0f639b80061199f565b610ccb90846119e0565b92506001607f1b610cdc838361199f565b610ce691906119cc565b9050610cf881650618fee9f80061199f565b610d0290846119e0565b92506001607f1b610d13838361199f565b610d1d91906119cc565b9050610d2e81649c197dcc0061199f565b610d3890846119e0565b92506001607f1b610d49838361199f565b610d5391906119cc565b9050610d6481640e30dce40061199f565b610d6e90846119e0565b92506001607f1b610d7f838361199f565b610d8991906119cc565b9050610d9a8164012ebd130061199f565b610da490846119e0565b92506001607f1b610db5838361199f565b610dbf91906119cc565b9050610dcf816317499f0061199f565b610dd990846119e0565b92506001607f1b610dea838361199f565b610df491906119cc565b9050610e04816301a9d48061199f565b610e0e90846119e0565b92506001607f1b610e1f838361199f565b610e2991906119cc565b9050610e3881621c638061199f565b610e4290846119e0565b92506001607f1b610e53838361199f565b610e5d91906119cc565b9050610e6c816201c63861199f565b610e7690846119e0565b92506001607f1b610e87838361199f565b610e9191906119cc565b9050610e9f81611ab861199f565b610ea990846119e0565b92506001607f1b610eba838361199f565b610ec491906119cc565b9050610ed28161017c61199f565b610edc90846119e0565b92506001607f1b610eed838361199f565b610ef791906119cc565b9050610f0481601461199f565b610f0e90846119e0565b92506001607f1b610f1f838361199f565b610f2991906119cc565b9050610f3681600161199f565b610f4090846119e0565b92506001607f1b82610f5a6721c3677c82b40000866119cc565b610f6491906119e0565b610f6e91906119e0565b92506001607c1b851615610fb65770018ebef9eac820ae8682b9793ac6d1e776610fa9847001c3d6a24ed82218787d624d3e5eba95f961199f565b610fb391906119cc565b92505b6001607d1b851615610ffc577001368b2fc6f9609fe7aceb46aa619baed4610fef8470018ebef9eac820ae8682b9793ac6d1e77861199f565b610ff991906119cc565b92505b6001607e1b851615611041576fbc5ab1b16779be3575bd8f0520a9f21f611034847001368b2fc6f9609fe7aceb46aa619baed561199f565b61103e91906119cc565b92505b6001607f1b851615611085576f454aaa8efe072e7f6ddbab84b40a55c9611078846fbc5ab1b16779be3575bd8f0520a9f21e61199f565b61108291906119cc565b92505b600160801b8516156110c9576f0960aadc109e7a3bf4578099615711ea6110bc846f454aaa8efe072e7f6ddbab84b40a55c561199f565b6110c691906119cc565b92505b600160811b85161561110c576e2bf84208204f5977f9a8cf01fdce3d6110ff846f0960aadc109e7a3bf4578099615711d761199f565b61110991906119cc565b92505b600160821b85161561114d576d03c6ab775dd0b95b4cbee7e65d11611140846e2bf84208204f5977f9a8cf01fdc30761199f565b61114a91906119cc565b92505b50909392505050565b60006020607f5b60ff811661116c836001611a8a565b60ff1610156111bf57600060026111838385611a8a565b61118d9190611aa3565b90508460018260ff16608081106111a6576111a6611ac5565b0154106111b5578092506111b9565b8091505b5061115d565b8360018260ff16608081106111d6576111d6611ac5565b0154106111e4579392505050565b8360018360ff16608081106111fb576111fb611ac5565b015410611209575092915050565b611211611adb565b5060009392505050565b6000828160ff841661122d838061199f565b901c915061124b826f03442c4e6074a82f1797f72ac000000061199f565b61125590826119e0565b905060ff8416611265868461199f565b901c9150611283826f0116b96f757c380fb287fd0e4000000061199f565b61128d90826119e0565b905060ff841661129d868461199f565b901c91506112ba826e45ae5bdd5f0e03eca1ff439000000061199f565b6112c490826119e0565b905060ff84166112d4868461199f565b901c91506112f1826e0defabf91302cd95b9ffda5000000061199f565b6112fb90826119e0565b905060ff841661130b868461199f565b901c9150611328826e02529ca9832b22439efff9b800000061199f565b61133290826119e0565b905060ff8416611342868461199f565b901c915061135e826d54f1cf12bd04e516b6da8800000061199f565b61136890826119e0565b905060ff8416611378868461199f565b901c9150611394826d0a9e39e257a09ca2d6db5100000061199f565b61139e90826119e0565b905060ff84166113ae868461199f565b901c91506113ca826d012e066e7b839fa050c30900000061199f565b6113d490826119e0565b905060ff84166113e4868461199f565b901c91506113ff826c1e33d7d926c329a1ad1a80000061199f565b61140990826119e0565b905060ff8416611419868461199f565b901c9150611434826c02bee513bdb4a6b19b5f80000061199f565b61143e90826119e0565b905060ff841661144e868461199f565b901c9150611468826b3a9316fa79b88eccf2a0000061199f565b61147290826119e0565b905060ff8416611482868461199f565b901c915061149c826b048177ebe1fa81237520000061199f565b6114a690826119e0565b905060ff84166114b6868461199f565b901c91506114cf826a5263fe90242dcbacf0000061199f565b6114d990826119e0565b905060ff84166114e9868461199f565b901c9150611502826a057e22099c030d9410000061199f565b61150c90826119e0565b905060ff841661151c868461199f565b901c9150611534826957e22099c030d941000061199f565b61153e90826119e0565b905060ff841661154e868461199f565b901c91506115668269052b6b5456997631000061199f565b61157090826119e0565b905060ff8416611580868461199f565b901c915061159782684985f67696bf74800061199f565b6115a190826119e0565b905060ff84166115b1868461199f565b901c91506115c8826803dea12ea99e49800061199f565b6115d290826119e0565b905060ff84166115e2868461199f565b901c91506115f8826731880f2214b6e00061199f565b61160290826119e0565b905060ff8416611612868461199f565b901c91506116288267025bcff56eb3600061199f565b61163290826119e0565b905060ff8416611642868461199f565b901c915061165782661b722e10ab100061199f565b61166190826119e0565b905060ff8416611671868461199f565b901c9150611686826601317c7007700061199f565b61169090826119e0565b905060ff84166116a0868461199f565b901c91506116b482650cba84aafa0061199f565b6116be90826119e0565b905060ff84166116ce868461199f565b901c91506116e1826482573a0a0061199f565b6116eb90826119e0565b905060ff84166116fb868461199f565b901c915061170e826405035ad90061199f565b61171890826119e0565b905060ff8416611728868461199f565b901c915061173a82632f881b0061199f565b61174490826119e0565b905060ff8416611754868461199f565b901c9150611766826301b2934061199f565b61177090826119e0565b905060ff8416611780868461199f565b901c915061179182620efc4061199f565b61179b90826119e0565b905060ff84166117ab868461199f565b901c91506117bb82617fe061199f565b6117c590826119e0565b905060ff84166117d5868461199f565b901c91506117e58261042061199f565b6117ef90826119e0565b905060ff84166117ff868461199f565b901c915061180e82602161199f565b61181890826119e0565b905060ff8416611828868461199f565b901c915061183782600161199f565b61184190826119e0565b9050600160ff85161b856118656f0688589cc0e9505e2f2fee5580000000846119cc565b61186f91906119e0565b61187991906119e0565b925050505b92915050565b600080826101008110156118b8575b60018111156118b357600190811c906118ac9083611a8a565b9150611893565b6118ec565b60805b60ff8116156118ea57600160ff82161b82106118df579182179160ff81169190911c905b60011c607f166118bb565b505b5092915050565b6000806000806080858703121561190957600080fd5b8435935060208501359250604085013563ffffffff8116811461192b57600080fd5b9396929550929360600135925050565b600060208083528351808285015260005b818110156119685785810183015185820160400152820161194c565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761187e5761187e611989565b634e487b7160e01b600052601260045260246000fd5b6000826119db576119db6119b6565b500490565b8082018082111561187e5761187e611989565b8181038181111561187e5761187e611989565b600181811c90821680611a1a57607f821691505b602082108103611a3a57634e487b7160e01b600052602260045260246000fd5b50919050565b60ff828116828216039081111561187e5761187e611989565b600060ff821680611a6c57611a6c611989565b6000190192915050565b600082611a8557611a856119b6565b500690565b60ff818116838216019081111561187e5761187e611989565b600060ff831680611ab657611ab66119b6565b8060ff84160491505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fdfea2646970667358221220872664a6e6419dde69f2fc40f5209cd6b2ed51bab34b56b3a17685445e5adf4564736f6c63430008110033",
    "sourceMap": "384:3714:76:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1145:1123;;;;;;:::i;:::-;;:::i;:::-;;;646:25:80;;;634:2;619:18;1145:1123:76;;;;;;;;2953:1143;;;;;;:::i;:::-;;:::i;561:29:77:-;;;:::i;:::-;;;;;;;:::i;1145:1123:76:-;1320:7;1550:1;1540:7;:11;:34;;;;;1573:1;1555:15;:19;1540:34;:55;;;;;1594:1;1578:13;:17;;;1540:55;:93;;;;-1:-1:-1;466:7:76;1599:34;;;;;1540:93;1532:121;;;;-1:-1:-1;;;1532:121:76;;1437:2:80;1532:121:76;;;1419:21:80;1476:2;1456:18;;;1449:30;-1:-1:-1;;;1495:18:80;;;1488:45;1550:18;;1532:121:76;;;;;;;;;1712:14;1730:1;1712:19;1708:58;;-1:-1:-1;1754:1:76;1747:8;;1708:58;-1:-1:-1;;1823:34:76;;;;1819:112;;1905:15;1881:22;1889:14;1881:7;:22;:::i;:::-;1880:40;;;;:::i;:::-;1873:47;;;;1819:112;1940:14;;;2005:32;2022:15;2005:14;:32;:::i;:::-;1989:48;;2069:85;2088:5;2095:15;2112:13;466:7;2069:5;:85::i;:::-;2047:107;;-1:-1:-1;2047:107:76;-1:-1:-1;2164:22:76;2189:31;;;2190:16;2047:107;2190:7;:16;:::i;:::-;2189:31;;;-1:-1:-1;2237:24:76;2254:7;2189:31;2237:24;:::i;:::-;2230:31;;;;;;1145:1123;;;;;;;:::o;2953:1143::-;3121:7;3188:1;3178:7;:11;:34;;;;;3211:1;3193:15;:19;3178:34;:55;;;;;3232:1;3216:13;:17;;;3178:55;:93;;;;-1:-1:-1;466:7:76;3237:34;;;;;3178:93;:119;;;;;3290:7;3275:11;:22;;3178:119;3170:147;;;;-1:-1:-1;;;3170:147:76;;1437:2:80;3170:147:76;;;1419:21:80;1476:2;1456:18;;;1449:30;-1:-1:-1;;;1495:18:80;;;1488:45;1550:18;;3170:147:76;1235:339:80;3170:147:76;3373:11;3388:1;3373:16;3369:55;;-1:-1:-1;3412:1:76;3405:8;;3369:55;3506:7;3491:11;:22;3487:75;;-1:-1:-1;3536:15:76;3529:22;;3487:75;-1:-1:-1;;3619:34:76;;;;3615:109;;3706:7;3677:27;3693:11;3677:15;:27;:::i;3615:109::-;3733:14;;;3798:21;3808:11;3798:7;:21;:::i;:::-;3782:37;;3851:77;3870:7;3879:5;466:7;3905:13;3851:5;:77::i;:::-;3829:99;;-1:-1:-1;3829:99:76;-1:-1:-1;3938:18:76;3959:22;3829:99;3959:15;:22;:::i;:::-;3938:43;-1:-1:-1;4012:28:76;;;;;;4082:6;4058:21;4012:28;3938:43;4058:21;:::i;:::-;4057:32;;;;:::i;:::-;4050:39;2953:1143;-1:-1:-1;;;;;;;;;;2953:1143:76:o;561:29:77:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11597:892::-;11733:7;11742:5;-1:-1:-1;;;11771:6:77;:16;11763:53;;;;-1:-1:-1;;;11763:53:77;;2991:2:80;11763:53:77;;;2973:21:80;3030:2;3010:18;;;3003:30;3069:26;3049:18;;;3042:54;3113:18;;11763:53:77;2789:348:80;11763:53:77;11844:6;11834;:16;;11826:57;;;;-1:-1:-1;;;11826:57:77;;3344:2:80;11826:57:77;;;3326:21:80;3383:2;3363:18;;;3356:30;3422;3402:18;;;3395:58;3470:18;;11826:57:77;3142:352:80;11826:57:77;11894:15;;11953:6;11934:16;-1:-1:-1;;;11934:6:77;:16;:::i;:::-;:25;;;;:::i;:::-;11919:40;;1584:35;11973:4;:22;11969:136;;;12021:16;12032:4;12021:10;:16::i;:::-;12011:26;;11969:136;;;12078:16;12089:4;12078:10;:16::i;:::-;12068:26;;11969:136;12115:23;12159:5;12141:23;;12151:5;12141:15;;:7;:15;;;;:::i;:::-;:23;;;;:::i;:::-;12115:49;;-1:-1:-1;;;12178:15:77;:33;12174:309;;;12235:27;12246:15;12235:10;:27::i;:::-;771:3;12227:51;;;;;;;;;12174:309;12309:15;12327:42;12353:15;12327:25;:42::i;:::-;12309:60;-1:-1:-1;12391:69:77;12422:25;12309:60;771:3;12422:25;:::i;:::-;12402:46;;:15;:46;;12450:9;12391:10;:69::i;:::-;12383:89;-1:-1:-1;12462:9:77;-1:-1:-1;12383:89:77;;-1:-1:-1;;;12383:89:77;11597:892;;;;;;;;:::o;19582:2397::-;19636:7;;;;;19748:34;19743:39;;19739:143;;19785:41;-1:-1:-1;;;19785:41:77;;:::i;:::-;;-1:-1:-1;19846:34:77;19832:11;-1:-1:-1;;;19832:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;19828:52;;19739:143;19900:34;19895:1;:39;19891:143;;19937:41;-1:-1:-1;;;19937:41:77;;:::i;:::-;;-1:-1:-1;19998:34:77;19984:11;-1:-1:-1;;;19984:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;19980:52;;19891:143;20052:34;20047:1;:39;20043:143;;20089:41;-1:-1:-1;;;20089:41:77;;:::i;:::-;;-1:-1:-1;20150:34:77;20136:11;-1:-1:-1;;;20136:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20132:52;;20043:143;20204:34;20199:1;:39;20195:143;;20241:41;-1:-1:-1;;;20241:41:77;;:::i;:::-;;-1:-1:-1;20302:34:77;20288:11;-1:-1:-1;;;20288:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20284:52;;20195:143;20356:34;20351:1;:39;20347:143;;20393:41;-1:-1:-1;;;20393:41:77;;:::i;:::-;;-1:-1:-1;20454:34:77;20440:11;-1:-1:-1;;;20440:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20436:52;;20347:143;20508:34;20503:1;:39;20499:143;;20545:41;-1:-1:-1;;;20545:41:77;;:::i;:::-;;-1:-1:-1;20606:34:77;20592:11;-1:-1:-1;;;20592:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20588:52;;20499:143;20660:34;20655:1;:39;20651:143;;20697:41;-1:-1:-1;;;20697:41:77;;:::i;:::-;;-1:-1:-1;20758:34:77;20744:11;-1:-1:-1;;;20744:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20740:52;;20651:143;20812:34;20807:1;:39;20803:143;;20849:41;-1:-1:-1;;;20849:41:77;;:::i;:::-;;-1:-1:-1;20910:34:77;20896:11;-1:-1:-1;;;20896:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20892:52;;20803:143;20964:11;-1:-1:-1;;;20964:1:77;:11;:::i;:::-;20960:15;-1:-1:-1;20960:15:77;;-1:-1:-1;;;;20989:5:77;20960:15;;20989:5;:::i;:::-;:15;;;;:::i;:::-;20985:19;-1:-1:-1;;;;21026:39:77;21064:1;21069:35;21026:39;:::i;:::-;21021:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21014:90;;;;:::i;:::-;;-1:-1:-1;;;;21110:5:77;21114:1;21110;:5;:::i;:::-;:15;;;;:::i;:::-;21106:19;-1:-1:-1;;;;21147:39:77;21185:1;21147:35;:39;:::i;:::-;21142:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21135:90;;;;:::i;:::-;;-1:-1:-1;;;;21231:5:77;21235:1;21231;:5;:::i;:::-;:15;;;;:::i;:::-;21227:19;-1:-1:-1;;;;21268:39:77;21306:1;21268:35;:39;:::i;:::-;21263:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21256:90;;;;:::i;:::-;;-1:-1:-1;;;;21352:5:77;21356:1;21352;:5;:::i;:::-;:15;;;;:::i;:::-;21348:19;-1:-1:-1;;;;21389:39:77;21427:1;21389:35;:39;:::i;:::-;21384:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21377:90;;;;:::i;:::-;;-1:-1:-1;;;;21473:5:77;21477:1;21473;:5;:::i;:::-;:15;;;;:::i;:::-;21469:19;-1:-1:-1;;;;21510:39:77;21548:1;21510:35;:39;:::i;:::-;21505:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21498:90;;;;:::i;:::-;;-1:-1:-1;;;;21594:5:77;21598:1;21594;:5;:::i;:::-;:15;;;;:::i;:::-;21590:19;-1:-1:-1;;;;21631:39:77;21669:1;21631:35;:39;:::i;:::-;21626:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21619:90;;;;:::i;:::-;;-1:-1:-1;;;;21715:5:77;21719:1;21715;:5;:::i;:::-;:15;;;;:::i;:::-;21711:19;-1:-1:-1;;;;21752:39:77;21790:1;21752:35;:39;:::i;:::-;21747:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21740:90;;;;:::i;:::-;;-1:-1:-1;;;;21836:5:77;21840:1;21836;:5;:::i;:::-;:15;;;;:::i;:::-;21832:19;-1:-1:-1;;;;21873:39:77;21911:1;21873:35;:39;:::i;:::-;21868:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21861:90;;;;:::i;:::-;;19582:2397;-1:-1:-1;;;;;;19582:2397:77:o;12654:826::-;12709:7;;12765:2;-1:-1:-1;;;12873:12:77;;12869:152;;12901:11;12915:22;12925:11;-1:-1:-1;;;12925:1:77;:11;:::i;:::-;12915:9;:22::i;:::-;12951:11;;;;;;;12901:36;;-1:-1:-1;12995:15:77;;-1:-1:-1;;;1008:35:77;12995:15;:::i;:::-;12989:21;;12887:134;12869:152;-1:-1:-1;;;13126:1:77;:11;13122:297;;;771:3;13153:256;13183:5;;;;13153:256;;-1:-1:-1;;;13218:5:77;13222:1;;13218:5;:::i;:::-;13217:17;;;;:::i;:::-;13213:21;;-1:-1:-1;;;13273:1:77;:12;13269:126;;13315:1;13309:7;;;;13370:5;;:1;:5;:::i;:::-;13362:14;;628:1;13362:14;;13355:21;;;;;:::i;:::-;;;13269:126;13190:3;;;:::i;:::-;;;13153:256;;;;13122:297;1397:33;13436:19;1315:33;13436:3;:19;:::i;:::-;:37;;;;:::i;22150:2980::-;22204:7;;;;22296:38;-1:-1:-1;;;22296:1:77;:38;:::i;:::-;22292:42;-1:-1:-1;22292:42:77;;-1:-1:-1;;;;22348:5:77;22292:42;;22348:5;:::i;:::-;:15;;;;:::i;:::-;22344:19;-1:-1:-1;22372:22:77;22344:19;22376:18;22372:22;:::i;:::-;22365:29;;;;:::i;:::-;;-1:-1:-1;;;;22434:5:77;22438:1;22434;:5;:::i;:::-;:15;;;;:::i;:::-;22430:19;-1:-1:-1;22458:22:77;22430:19;22462:18;22458:22;:::i;:::-;22451:29;;;;:::i;:::-;;-1:-1:-1;;;;22520:5:77;22524:1;22520;:5;:::i;:::-;:15;;;;:::i;:::-;22516:19;-1:-1:-1;22544:22:77;22516:19;22548:18;22544:22;:::i;:::-;22537:29;;;;:::i;:::-;;-1:-1:-1;;;;22606:5:77;22610:1;22606;:5;:::i;:::-;:15;;;;:::i;:::-;22602:19;-1:-1:-1;22630:22:77;22602:19;22634:18;22630:22;:::i;:::-;22623:29;;;;:::i;:::-;;-1:-1:-1;;;;22692:5:77;22696:1;22692;:5;:::i;:::-;:15;;;;:::i;:::-;22688:19;-1:-1:-1;22716:22:77;22688:19;22720:18;22716:22;:::i;:::-;22709:29;;;;:::i;:::-;;-1:-1:-1;;;;22778:5:77;22782:1;22778;:5;:::i;:::-;:15;;;;:::i;:::-;22774:19;-1:-1:-1;22802:22:77;22774:19;22806:18;22802:22;:::i;:::-;22795:29;;;;:::i;:::-;;-1:-1:-1;;;;22864:5:77;22868:1;22864;:5;:::i;:::-;:15;;;;:::i;:::-;22860:19;-1:-1:-1;22888:22:77;22860:19;22892:18;22888:22;:::i;:::-;22881:29;;;;:::i;:::-;;-1:-1:-1;;;;22950:5:77;22954:1;22950;:5;:::i;:::-;:15;;;;:::i;:::-;22946:19;-1:-1:-1;22974:22:77;22946:19;22978:18;22974:22;:::i;:::-;22967:29;;;;:::i;:::-;;-1:-1:-1;;;;23036:5:77;23040:1;23036;:5;:::i;:::-;:15;;;;:::i;:::-;23032:19;-1:-1:-1;23060:22:77;23032:19;23064:18;23060:22;:::i;:::-;23053:29;;;;:::i;:::-;;-1:-1:-1;;;;23122:5:77;23126:1;23122;:5;:::i;:::-;:15;;;;:::i;:::-;23118:19;-1:-1:-1;23146:22:77;23118:19;23150:18;23146:22;:::i;:::-;23139:29;;;;:::i;:::-;;-1:-1:-1;;;;23208:5:77;23212:1;23208;:5;:::i;:::-;:15;;;;:::i;:::-;23204:19;-1:-1:-1;23232:22:77;23204:19;23236:18;23232:22;:::i;:::-;23225:29;;;;:::i;:::-;;-1:-1:-1;;;;23294:5:77;23298:1;23294;:5;:::i;:::-;:15;;;;:::i;:::-;23290:19;-1:-1:-1;23318:22:77;23290:19;23322:18;23318:22;:::i;:::-;23311:29;;;;:::i;:::-;;-1:-1:-1;;;;23380:5:77;23384:1;23380;:5;:::i;:::-;:15;;;;:::i;:::-;23376:19;-1:-1:-1;23404:22:77;23376:19;23408:18;23404:22;:::i;:::-;23397:29;;;;:::i;:::-;;-1:-1:-1;;;;23466:5:77;23470:1;23466;:5;:::i;:::-;:15;;;;:::i;:::-;23462:19;-1:-1:-1;23490:22:77;23462:19;23494:18;23490:22;:::i;:::-;23483:29;;;;:::i;:::-;;-1:-1:-1;;;;23552:5:77;23556:1;23552;:5;:::i;:::-;:15;;;;:::i;:::-;23548:19;-1:-1:-1;23576:22:77;23548:19;23580:18;23576:22;:::i;:::-;23569:29;;;;:::i;:::-;;-1:-1:-1;;;;23638:5:77;23642:1;23638;:5;:::i;:::-;:15;;;;:::i;:::-;23634:19;-1:-1:-1;23662:22:77;23634:19;23666:18;23662:22;:::i;:::-;23655:29;;;;:::i;:::-;;-1:-1:-1;;;;23724:5:77;23728:1;23724;:5;:::i;:::-;:15;;;;:::i;:::-;23720:19;-1:-1:-1;23748:22:77;23720:19;23752:18;23748:22;:::i;:::-;23741:29;;;;:::i;:::-;;-1:-1:-1;;;;23810:5:77;23814:1;23810;:5;:::i;:::-;:15;;;;:::i;:::-;23806:19;-1:-1:-1;23834:22:77;23806:19;23838:18;23834:22;:::i;:::-;23827:29;;;;:::i;:::-;;-1:-1:-1;;;;23896:5:77;23900:1;23896;:5;:::i;:::-;:15;;;;:::i;:::-;23892:19;-1:-1:-1;23920:22:77;23892:19;23924:18;23920:22;:::i;:::-;23913:29;;;;:::i;:::-;;-1:-1:-1;;;;24011:1:77;23984:24;23990:18;23913:29;23984:24;:::i;:::-;:28;;;;:::i;:::-;:38;;;;:::i;:::-;23978:44;-1:-1:-1;;;;24088:39:77;;24087:46;24083:137;;24185:35;24141:41;:3;24147:35;24141:41;:::i;:::-;:79;;;;:::i;:::-;24135:85;;24083:137;-1:-1:-1;;;24235:39:77;;24234:46;24230:137;;24332:35;24288:41;:3;24294:35;24288:41;:::i;:::-;:79;;;;:::i;:::-;24282:85;;24230:137;-1:-1:-1;;;24382:39:77;;24381:46;24377:137;;24479:35;24435:41;:3;24441:35;24435:41;:::i;:::-;:79;;;;:::i;:::-;24429:85;;24377:137;-1:-1:-1;;;24529:39:77;;24528:46;24524:137;;24626:35;24582:41;:3;24588:35;24582:41;:::i;:::-;:79;;;;:::i;:::-;24576:85;;24524:137;-1:-1:-1;;;24676:39:77;;24675:46;24671:137;;24773:35;24729:41;:3;24735:35;24729:41;:::i;:::-;:79;;;;:::i;:::-;24723:85;;24671:137;-1:-1:-1;;;24823:39:77;;24822:46;24818:137;;24920:35;24876:41;:3;24882:35;24876:41;:::i;:::-;:79;;;;:::i;:::-;24870:85;;24818:137;-1:-1:-1;;;24970:39:77;;24969:46;24965:137;;25067:35;25023:41;:3;25029:35;25023:41;:::i;:::-;:79;;;;:::i;:::-;25017:85;;24965:137;-1:-1:-1;25120:3:77;;22150:2980;-1:-1:-1;;;22150:2980:77:o;14488:508::-;14562:5;724:2;771:3;14652:179;14659:11;;;:6;:2;14664:1;14659:6;:::i;:::-;:11;;;14652:179;;;14686:9;14710:1;14699:7;14704:2;14699;:7;:::i;:::-;14698:13;;;;:::i;:::-;14686:25;;14749:2;14729:11;14741:3;14729:16;;;;;;;;;:::i;:::-;;;:22;14725:95;;14774:3;14769:8;;14725:95;;;14817:3;14812:8;;14725:95;14672:159;14652:179;;;14864:2;14845:11;14857:2;14845:15;;;;;;;;;:::i;:::-;;;:21;14841:48;;14887:2;14488:508;-1:-1:-1;;;14488:508:77:o;14841:48::-;14922:2;14903:11;14915:2;14903:15;;;;;;;;;:::i;:::-;;;:21;14899:48;;-1:-1:-1;14945:2:77;14488:508;-1:-1:-1;;14488:508:77:o;14899:48::-;14958:13;;:::i;:::-;-1:-1:-1;14988:1:77;;14488:508;-1:-1:-1;;;14488:508:77:o;15580:3826::-;15653:7;15685:2;15653:7;15728:23;;;15729:7;15685:2;;15729:7;:::i;:::-;15728:23;;;-1:-1:-1;15760:38:77;15728:23;15765:33;15760:38;:::i;:::-;15753:45;;;;:::i;:::-;;-1:-1:-1;15839:23:77;;;15840:7;15845:2;15840;:7;:::i;:::-;15839:23;;;-1:-1:-1;15871:38:77;15839:23;15876:33;15871:38;:::i;:::-;15864:45;;;;:::i;:::-;;-1:-1:-1;15950:23:77;;;15951:7;15956:2;15951;:7;:::i;:::-;15950:23;;;-1:-1:-1;15982:38:77;15950:23;15987:33;15982:38;:::i;:::-;15975:45;;;;:::i;:::-;;-1:-1:-1;16061:23:77;;;16062:7;16067:2;16062;:7;:::i;:::-;16061:23;;;-1:-1:-1;16093:38:77;16061:23;16098:33;16093:38;:::i;:::-;16086:45;;;;:::i;:::-;;-1:-1:-1;16172:23:77;;;16173:7;16178:2;16173;:7;:::i;:::-;16172:23;;;-1:-1:-1;16204:38:77;16172:23;16209:33;16204:38;:::i;:::-;16197:45;;;;:::i;:::-;;-1:-1:-1;16283:23:77;;;16284:7;16289:2;16284;:7;:::i;:::-;16283:23;;;-1:-1:-1;16315:38:77;16283:23;16320:33;16315:38;:::i;:::-;16308:45;;;;:::i;:::-;;-1:-1:-1;16394:23:77;;;16395:7;16400:2;16395;:7;:::i;:::-;16394:23;;;-1:-1:-1;16426:38:77;16394:23;16431:33;16426:38;:::i;:::-;16419:45;;;;:::i;:::-;;-1:-1:-1;16505:23:77;;;16506:7;16511:2;16506;:7;:::i;:::-;16505:23;;;-1:-1:-1;16537:38:77;16505:23;16542:33;16537:38;:::i;:::-;16530:45;;;;:::i;:::-;;-1:-1:-1;16616:23:77;;;16617:7;16622:2;16617;:7;:::i;:::-;16616:23;;;-1:-1:-1;16648:38:77;16616:23;16653:33;16648:38;:::i;:::-;16641:45;;;;:::i;:::-;;-1:-1:-1;16727:23:77;;;16728:7;16733:2;16728;:7;:::i;:::-;16727:23;;;-1:-1:-1;16759:38:77;16727:23;16764:33;16759:38;:::i;:::-;16752:45;;;;:::i;:::-;;-1:-1:-1;16838:23:77;;;16839:7;16844:2;16839;:7;:::i;:::-;16838:23;;;-1:-1:-1;16870:38:77;16838:23;16875:33;16870:38;:::i;:::-;16863:45;;;;:::i;:::-;;-1:-1:-1;16949:23:77;;;16950:7;16955:2;16950;:7;:::i;:::-;16949:23;;;-1:-1:-1;16981:38:77;16949:23;16986:33;16981:38;:::i;:::-;16974:45;;;;:::i;:::-;;-1:-1:-1;17060:23:77;;;17061:7;17066:2;17061;:7;:::i;:::-;17060:23;;;-1:-1:-1;17092:38:77;17060:23;17097:33;17092:38;:::i;:::-;17085:45;;;;:::i;:::-;;-1:-1:-1;17171:23:77;;;17172:7;17177:2;17172;:7;:::i;:::-;17171:23;;;-1:-1:-1;17203:38:77;17171:23;17208:33;17203:38;:::i;:::-;17196:45;;;;:::i;:::-;;-1:-1:-1;17282:23:77;;;17283:7;17288:2;17283;:7;:::i;:::-;17282:23;;;-1:-1:-1;17314:38:77;17282:23;17319:33;17314:38;:::i;:::-;17307:45;;;;:::i;:::-;;-1:-1:-1;17393:23:77;;;17394:7;17399:2;17394;:7;:::i;:::-;17393:23;;;-1:-1:-1;17425:38:77;17393:23;17430:33;17425:38;:::i;:::-;17418:45;;;;:::i;:::-;;-1:-1:-1;17504:23:77;;;17505:7;17510:2;17505;:7;:::i;:::-;17504:23;;;-1:-1:-1;17536:38:77;17504:23;17541:33;17536:38;:::i;:::-;17529:45;;;;:::i;:::-;;-1:-1:-1;17615:23:77;;;17616:7;17621:2;17616;:7;:::i;:::-;17615:23;;;-1:-1:-1;17647:38:77;17615:23;17652:33;17647:38;:::i;:::-;17640:45;;;;:::i;:::-;;-1:-1:-1;17726:23:77;;;17727:7;17732:2;17727;:7;:::i;:::-;17726:23;;;-1:-1:-1;17758:38:77;17726:23;17763:33;17758:38;:::i;:::-;17751:45;;;;:::i;:::-;;-1:-1:-1;17837:23:77;;;17838:7;17843:2;17838;:7;:::i;:::-;17837:23;;;-1:-1:-1;17869:38:77;17837:23;17874:33;17869:38;:::i;:::-;17862:45;;;;:::i;:::-;;-1:-1:-1;17948:23:77;;;17949:7;17954:2;17949;:7;:::i;:::-;17948:23;;;-1:-1:-1;17980:38:77;17948:23;17985:33;17980:38;:::i;:::-;17973:45;;;;:::i;:::-;;-1:-1:-1;18059:23:77;;;18060:7;18065:2;18060;:7;:::i;:::-;18059:23;;;-1:-1:-1;18091:38:77;18059:23;18096:33;18091:38;:::i;:::-;18084:45;;;;:::i;:::-;;-1:-1:-1;18170:23:77;;;18171:7;18176:2;18171;:7;:::i;:::-;18170:23;;;-1:-1:-1;18202:38:77;18170:23;18207:33;18202:38;:::i;:::-;18195:45;;;;:::i;:::-;;-1:-1:-1;18281:23:77;;;18282:7;18287:2;18282;:7;:::i;:::-;18281:23;;;-1:-1:-1;18313:38:77;18281:23;18318:33;18313:38;:::i;:::-;18306:45;;;;:::i;:::-;;-1:-1:-1;18392:23:77;;;18393:7;18398:2;18393;:7;:::i;:::-;18392:23;;;-1:-1:-1;18424:38:77;18392:23;18429:33;18424:38;:::i;:::-;18417:45;;;;:::i;:::-;;-1:-1:-1;18503:23:77;;;18504:7;18509:2;18504;:7;:::i;:::-;18503:23;;;-1:-1:-1;18535:38:77;18503:23;18540:33;18535:38;:::i;:::-;18528:45;;;;:::i;:::-;;-1:-1:-1;18614:23:77;;;18615:7;18620:2;18615;:7;:::i;:::-;18614:23;;;-1:-1:-1;18646:38:77;18614:23;18651:33;18646:38;:::i;:::-;18639:45;;;;:::i;:::-;;-1:-1:-1;18725:23:77;;;18726:7;18731:2;18726;:7;:::i;:::-;18725:23;;;-1:-1:-1;18757:38:77;18725:23;18762:33;18757:38;:::i;:::-;18750:45;;;;:::i;:::-;;-1:-1:-1;18836:23:77;;;18837:7;18842:2;18837;:7;:::i;:::-;18836:23;;;-1:-1:-1;18868:38:77;18836:23;18873:33;18868:38;:::i;:::-;18861:45;;;;:::i;:::-;;-1:-1:-1;18947:23:77;;;18948:7;18953:2;18948;:7;:::i;:::-;18947:23;;;-1:-1:-1;18979:38:77;18947:23;18984:33;18979:38;:::i;:::-;18972:45;;;;:::i;:::-;;-1:-1:-1;19058:23:77;;;19059:7;19064:2;19059;:7;:::i;:::-;19058:23;;;-1:-1:-1;19090:38:77;19058:23;19095:33;19090:38;:::i;:::-;19083:45;;;;:::i;:::-;;-1:-1:-1;19169:23:77;;;19170:7;19175:2;19170;:7;:::i;:::-;19169:23;;;-1:-1:-1;19201:38:77;19169:23;19206:33;19201:38;:::i;:::-;19194:45;;;;:::i;:::-;;-1:-1:-1;628:1:77;19331:17;;;;19325:2;19283:39;19289:33;19194:45;19283:39;:::i;:::-;:44;;;;:::i;:::-;:66;;;;:::i;:::-;19276:73;;;;15580:3826;;;;;:::o;13595:532::-;13649:5;;13701:2;13722:3;13718:7;;13714:386;;;13777:80;13788:1;13784;:5;13777:80;;;13815:1;13809:7;;;;13834:8;;;;:::i;:::-;;;13777:80;;;13714:386;;;13938:3;13923:167;13943:5;;;;13923:167;;628:1;13987:8;;;;13981:15;;13977:99;;14049:8;;;;14020:7;;;;;;;;13977:99;13956:1;13950:7;;;13923:167;;;;13714:386;-1:-1:-1;14117:3:77;13595:532;-1:-1:-1;;13595:532:77:o;14:481:80:-;99:6;107;115;123;176:3;164:9;155:7;151:23;147:33;144:53;;;193:1;190;183:12;144:53;229:9;216:23;206:33;;286:2;275:9;271:18;258:32;248:42;;340:2;329:9;325:18;312:32;384:10;377:5;373:22;366:5;363:33;353:61;;410:1;407;400:12;353:61;14:481;;;;-1:-1:-1;433:5:80;;485:2;470:18;457:32;;-1:-1:-1;;14:481:80:o;682:548::-;794:4;823:2;852;841:9;834:21;884:6;878:13;927:6;922:2;911:9;907:18;900:34;952:1;962:140;976:6;973:1;970:13;962:140;;;1071:14;;;1067:23;;1061:30;1037:17;;;1056:2;1033:26;1026:66;991:10;;962:140;;;966:3;1151:1;1146:2;1137:6;1126:9;1122:22;1118:31;1111:42;1221:2;1214;1210:7;1205:2;1197:6;1193:15;1189:29;1178:9;1174:45;1170:54;1162:62;;;;682:548;;;;:::o;1579:127::-;1640:10;1635:3;1631:20;1628:1;1621:31;1671:4;1668:1;1661:15;1695:4;1692:1;1685:15;1711:168;1784:9;;;1815;;1832:15;;;1826:22;;1812:37;1802:71;;1853:18;;:::i;1884:127::-;1945:10;1940:3;1936:20;1933:1;1926:31;1976:4;1973:1;1966:15;2000:4;1997:1;1990:15;2016:120;2056:1;2082;2072:35;;2087:18;;:::i;:::-;-1:-1:-1;2121:9:80;;2016:120::o;2141:125::-;2206:9;;;2227:10;;;2224:36;;;2240:18;;:::i;2271:128::-;2338:9;;;2359:11;;;2356:37;;;2373:18;;:::i;2404:380::-;2483:1;2479:12;;;;2526;;;2547:61;;2601:4;2593:6;2589:17;2579:27;;2547:61;2654:2;2646:6;2643:14;2623:18;2620:38;2617:161;;2700:10;2695:3;2691:20;2688:1;2681:31;2735:4;2732:1;2725:15;2763:4;2760:1;2753:15;2617:161;;2404:380;;;:::o;3499:151::-;3589:4;3582:12;;;3568;;;3564:31;;3607:14;;3604:40;;;3624:18;;:::i;3655:178::-;3692:3;3736:4;3729:5;3725:16;3760:7;3750:41;;3771:18;;:::i;:::-;-1:-1:-1;;3807:20:80;;3655:178;-1:-1:-1;;3655:178:80:o;3838:112::-;3870:1;3896;3886:35;;3901:18;;:::i;:::-;-1:-1:-1;3935:9:80;;3838:112::o;3955:148::-;4043:4;4022:12;;;4036;;;4018:31;;4061:13;;4058:39;;;4077:18;;:::i;4108:165::-;4146:1;4180:4;4177:1;4173:12;4204:3;4194:37;;4211:18;;:::i;:::-;4263:3;4256:4;4253:1;4249:12;4245:22;4240:27;;;4108:165;;;;:::o;4278:127::-;4339:10;4334:3;4330:20;4327:1;4320:31;4370:4;4367:1;4360:15;4394:4;4391:1;4384:15;4410:127;4471:10;4466:3;4462:20;4459:1;4452:31;4502:4;4499:1;4492:15;4526:4;4523:1;4516:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": "29a00e7c",
    "calculateSaleReturn(uint256,uint256,uint32,uint256)": "49f9b0f7",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_depositAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePurchaseReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_sellAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculatePurchaseReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token), calculates the return for a given conversion (in the continuous token) Formula: Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)\",\"params\":{\"_depositAmount\":\"deposit amount, in reserve token\",\"_reserveBalance\":\"total reserve token balance\",\"_reserveRatio\":\"reserve ratio, represented in ppm, 1-1000000\",\"_supply\":\"continuous token total supply\"},\"returns\":{\"_0\":\"purchase return amount\"}},\"calculateSaleReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token), calculates the return for a given conversion (in the reserve token) Formula: Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))\",\"params\":{\"_reserveBalance\":\"total reserve token balance\",\"_reserveRatio\":\"constant reserve ratio, represented in ppm, 1-1000000\",\"_sellAmount\":\"sell amount, in the continuous token itself\",\"_supply\":\"continuous token total supply\"},\"returns\":{\"_0\":\"sale return amount\"}}},\"title\":\"Bancor formula by Bancor Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements; and to You under the Apache License, Version 2.0. \\\"\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/bonding_curve/math/BancorFormula.sol\":\"BancorFormula\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aragon/osx/=lib/osx/packages/contracts/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":osx/=lib/osx/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"src/bonding_curve/math/BancorFormula.sol\":{\"keccak256\":\"0x59e638caadaf1166b3dd40b0752352e89621b56b306b34ba19719abcf5995590\",\"urls\":[\"bzz-raw://b28e76f9d0115382858ac69b2dc0c0562c273d7e44853a8eefeeeb4a1d4c8dea\",\"dweb:/ipfs/QmWSEgXHnarghcBzTvP6XywV665oSvW7DWEzDS7sYJ4FBm\"]},\"src/bonding_curve/math/Power.sol\":{\"keccak256\":\"0xa7a2edc79e4f53d393903bfedea50e09c492d17dddc7c422dc965c4cea05c544\",\"urls\":[\"bzz-raw://c6804e8a3b0550767f98ed788d284741f86d8bb50690c8321708a3a8eedebb23\",\"dweb:/ipfs/QmaJJWY1RHnYXDKKzpEi2DJ4rDTRZvBQYYqrTTKVcLPUSx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_supply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_reserveBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_reserveRatio",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "_depositAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculatePurchaseReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_supply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_reserveBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_reserveRatio",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "_sellAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateSaleReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": {
            "details": "given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token), calculates the return for a given conversion (in the continuous token) Formula: Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)",
            "params": {
              "_depositAmount": "deposit amount, in reserve token",
              "_reserveBalance": "total reserve token balance",
              "_reserveRatio": "reserve ratio, represented in ppm, 1-1000000",
              "_supply": "continuous token total supply"
            },
            "returns": {
              "_0": "purchase return amount"
            }
          },
          "calculateSaleReturn(uint256,uint256,uint32,uint256)": {
            "details": "given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token), calculates the return for a given conversion (in the reserve token) Formula: Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))",
            "params": {
              "_reserveBalance": "total reserve token balance",
              "_reserveRatio": "constant reserve ratio, represented in ppm, 1-1000000",
              "_sellAmount": "sell amount, in the continuous token itself",
              "_supply": "continuous token total supply"
            },
            "returns": {
              "_0": "sale return amount"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aragon/osx/=lib/osx/packages/contracts/src/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":osx/=lib/osx/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/bonding_curve/math/BancorFormula.sol": "BancorFormula"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "src/bonding_curve/math/BancorFormula.sol": {
        "keccak256": "0x59e638caadaf1166b3dd40b0752352e89621b56b306b34ba19719abcf5995590",
        "urls": [
          "bzz-raw://b28e76f9d0115382858ac69b2dc0c0562c273d7e44853a8eefeeeb4a1d4c8dea",
          "dweb:/ipfs/QmWSEgXHnarghcBzTvP6XywV665oSvW7DWEzDS7sYJ4FBm"
        ],
        "license": null
      },
      "src/bonding_curve/math/Power.sol": {
        "keccak256": "0xa7a2edc79e4f53d393903bfedea50e09c492d17dddc7c422dc965c4cea05c544",
        "urls": [
          "bzz-raw://c6804e8a3b0550767f98ed788d284741f86d8bb50690c8321708a3a8eedebb23",
          "dweb:/ipfs/QmaJJWY1RHnYXDKKzpEi2DJ4rDTRZvBQYYqrTTKVcLPUSx"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/bonding_curve/math/BancorFormula.sol",
    "id": 50144,
    "exportedSymbols": {
      "BancorFormula": [
        50143
      ],
      "Power": [
        52335
      ],
      "console": [
        21489
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:4098:76",
    "nodes": [
      {
        "id": 49938,
        "nodeType": "PragmaDirective",
        "src": "0:23:76",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 49939,
        "nodeType": "ImportDirective",
        "src": "25:21:76",
        "nodes": [],
        "absolutePath": "src/bonding_curve/math/Power.sol",
        "file": "./Power.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50144,
        "sourceUnit": 52336,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49940,
        "nodeType": "ImportDirective",
        "src": "77:31:76",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50144,
        "sourceUnit": 21490,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50143,
        "nodeType": "ContractDefinition",
        "src": "384:3714:76",
        "nodes": [
          {
            "id": 49946,
            "nodeType": "VariableDeclaration",
            "src": "422:51:76",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MAX_RESERVE_RATIO",
            "nameLocation": "446:17:76",
            "scope": 50143,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 49944,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "422:6:76",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "31303030303030",
              "id": 49945,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "466:7:76",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1000000"
            },
            "visibility": "private"
          },
          {
            "id": 50035,
            "nodeType": "FunctionDefinition",
            "src": "1145:1123:76",
            "nodes": [],
            "body": {
              "id": 50034,
              "nodeType": "Block",
              "src": "1333:935:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 49975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 49971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 49967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 49963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 49961,
                                "name": "_supply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49949,
                                "src": "1540:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 49962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1550:1:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1540:11:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 49966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 49964,
                                "name": "_reserveBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49951,
                                "src": "1555:15:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 49965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1573:1:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1555:19:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "1540:34:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 49970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49968,
                              "name": "_reserveRatio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49953,
                              "src": "1578:13:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 49969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1594:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1578:17:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1540:55:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 49974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49972,
                            "name": "_reserveRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49953,
                            "src": "1599:13:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 49973,
                            "name": "MAX_RESERVE_RATIO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49946,
                            "src": "1616:17:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "1599:34:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1540:93:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420696e707574732e",
                        "id": 49976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1635:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef6cde6fbf7262a91fe23c9c566a0956d022666674f55e2d782c51e274aef3ea",
                          "typeString": "literal_string \"Invalid inputs.\""
                        },
                        "value": "Invalid inputs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef6cde6fbf7262a91fe23c9c566a0956d022666674f55e2d782c51e274aef3ea",
                          "typeString": "literal_string \"Invalid inputs.\""
                        }
                      ],
                      "id": 49960,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1532:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:121:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49978,
                  "nodeType": "ExpressionStatement",
                  "src": "1532:121:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49979,
                      "name": "_depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49955,
                      "src": "1712:14:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 49980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1730:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1712:19:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49985,
                  "nodeType": "IfStatement",
                  "src": "1708:58:76",
                  "trueBody": {
                    "id": 49984,
                    "nodeType": "Block",
                    "src": "1733:33:76",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 49982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1754:1:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 49959,
                        "id": 49983,
                        "nodeType": "Return",
                        "src": "1747:8:76"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 49988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49986,
                      "name": "_reserveRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49953,
                      "src": "1823:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 49987,
                      "name": "MAX_RESERVE_RATIO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49946,
                      "src": "1840:17:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1823:34:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49997,
                  "nodeType": "IfStatement",
                  "src": "1819:112:76",
                  "trueBody": {
                    "id": 49996,
                    "nodeType": "Block",
                    "src": "1859:72:76",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 49991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 49989,
                                  "name": "_supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49949,
                                  "src": "1881:7:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 49990,
                                  "name": "_depositAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49955,
                                  "src": "1889:14:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1881:22:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 49992,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1880:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 49993,
                            "name": "_reserveBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49951,
                            "src": "1905:15:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1880:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 49959,
                        "id": 49995,
                        "nodeType": "Return",
                        "src": "1873:47:76"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    49999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49999,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "1948:6:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50034,
                      "src": "1940:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49998,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1940:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50000,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1940:14:76"
                },
                {
                  "assignments": [
                    50002
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50002,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "1970:9:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50034,
                      "src": "1964:15:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 50001,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1964:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50003,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1964:15:76"
                },
                {
                  "assignments": [
                    50005
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50005,
                      "mutability": "mutable",
                      "name": "baseN",
                      "nameLocation": "1997:5:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50034,
                      "src": "1989:13:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50004,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1989:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50009,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50006,
                      "name": "_depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49955,
                      "src": "2005:14:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 50007,
                      "name": "_reserveBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49951,
                      "src": "2022:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2005:32:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1989:48:76"
                },
                {
                  "expression": {
                    "id": 50019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 50010,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49999,
                          "src": "2048:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 50011,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50002,
                          "src": "2056:9:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 50012,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2047:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50014,
                          "name": "baseN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50005,
                          "src": "2088:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 50015,
                          "name": "_reserveBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49951,
                          "src": "2095:15:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 50016,
                          "name": "_reserveRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49953,
                          "src": "2112:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 50017,
                          "name": "MAX_RESERVE_RATIO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49946,
                          "src": "2127:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 50013,
                        "name": "power",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50868,
                        "src": "2069:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
                          "typeString": "function (uint256,uint256,uint32,uint32) view returns (uint256,uint8)"
                        }
                      },
                      "id": 50018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2069:85:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "src": "2047:107:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50020,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:107:76"
                },
                {
                  "assignments": [
                    50022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50022,
                      "mutability": "mutable",
                      "name": "newTokenSupply",
                      "nameLocation": "2172:14:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50034,
                      "src": "2164:22:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50021,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2164:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50029,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 50025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 50023,
                            "name": "_supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49949,
                            "src": "2190:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 50024,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49999,
                            "src": "2200:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2190:16:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 50026,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2189:18:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">>",
                    "rightExpression": {
                      "id": 50027,
                      "name": "precision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50002,
                      "src": "2211:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2189:31:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2164:56:76"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50030,
                      "name": "newTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50022,
                      "src": "2237:14:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 50031,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49949,
                      "src": "2254:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2237:24:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 49959,
                  "id": 50033,
                  "nodeType": "Return",
                  "src": "2230:31:76"
                }
              ]
            },
            "documentation": {
              "id": 49947,
              "nodeType": "StructuredDocumentation",
              "src": "480:660:76",
              "text": " @dev given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token),\n calculates the return for a given conversion (in the continuous token)\n Formula:\n Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)\n @param _supply              continuous token total supply\n @param _reserveBalance    total reserve token balance\n @param _reserveRatio     reserve ratio, represented in ppm, 1-1000000\n @param _depositAmount       deposit amount, in reserve token\n  @return purchase return amount"
            },
            "functionSelector": "29a00e7c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePurchaseReturn",
            "nameLocation": "1154:23:76",
            "parameters": {
              "id": 49956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49949,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "1195:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 50035,
                  "src": "1187:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49951,
                  "mutability": "mutable",
                  "name": "_reserveBalance",
                  "nameLocation": "1220:15:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 50035,
                  "src": "1212:23:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49953,
                  "mutability": "mutable",
                  "name": "_reserveRatio",
                  "nameLocation": "1252:13:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 50035,
                  "src": "1245:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 49952,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49955,
                  "mutability": "mutable",
                  "name": "_depositAmount",
                  "nameLocation": "1283:14:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 50035,
                  "src": "1275:22:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1177:121:76"
            },
            "returnParameters": {
              "id": 49959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49958,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50035,
                  "src": "1320:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1319:9:76"
            },
            "scope": 50143,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50142,
            "nodeType": "FunctionDefinition",
            "src": "2953:1143:76",
            "nodes": [],
            "body": {
              "id": 50141,
              "nodeType": "Block",
              "src": "3134:962:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 50068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 50064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 50060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 50056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 50052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 50050,
                                  "name": "_supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50038,
                                  "src": "3178:7:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 50051,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3188:1:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3178:11:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 50055,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 50053,
                                  "name": "_reserveBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50040,
                                  "src": "3193:15:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 50054,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3211:1:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3193:19:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3178:34:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 50059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 50057,
                                "name": "_reserveRatio",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50042,
                                "src": "3216:13:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 50058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3232:1:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3216:17:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3178:55:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 50063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 50061,
                              "name": "_reserveRatio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50042,
                              "src": "3237:13:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "id": 50062,
                              "name": "MAX_RESERVE_RATIO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49946,
                              "src": "3254:17:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "3237:34:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3178:93:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 50067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 50065,
                            "name": "_sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50044,
                            "src": "3275:11:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 50066,
                            "name": "_supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50038,
                            "src": "3290:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3275:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3178:119:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420696e707574732e",
                        "id": 50069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3299:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef6cde6fbf7262a91fe23c9c566a0956d022666674f55e2d782c51e274aef3ea",
                          "typeString": "literal_string \"Invalid inputs.\""
                        },
                        "value": "Invalid inputs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef6cde6fbf7262a91fe23c9c566a0956d022666674f55e2d782c51e274aef3ea",
                          "typeString": "literal_string \"Invalid inputs.\""
                        }
                      ],
                      "id": 50049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3170:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3170:147:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50071,
                  "nodeType": "ExpressionStatement",
                  "src": "3170:147:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50072,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50044,
                      "src": "3373:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 50073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3388:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3373:16:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50078,
                  "nodeType": "IfStatement",
                  "src": "3369:55:76",
                  "trueBody": {
                    "id": 50077,
                    "nodeType": "Block",
                    "src": "3391:33:76",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 50075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3412:1:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 50048,
                        "id": 50076,
                        "nodeType": "Return",
                        "src": "3405:8:76"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50079,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50044,
                      "src": "3491:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 50080,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50038,
                      "src": "3506:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3491:22:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50085,
                  "nodeType": "IfStatement",
                  "src": "3487:75:76",
                  "trueBody": {
                    "id": 50084,
                    "nodeType": "Block",
                    "src": "3515:47:76",
                    "statements": [
                      {
                        "expression": {
                          "id": 50082,
                          "name": "_reserveBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50040,
                          "src": "3536:15:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 50048,
                        "id": 50083,
                        "nodeType": "Return",
                        "src": "3529:22:76"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 50088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50086,
                      "name": "_reserveRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50042,
                      "src": "3619:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 50087,
                      "name": "MAX_RESERVE_RATIO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49946,
                      "src": "3636:17:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3619:34:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50097,
                  "nodeType": "IfStatement",
                  "src": "3615:109:76",
                  "trueBody": {
                    "id": 50096,
                    "nodeType": "Block",
                    "src": "3655:69:76",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 50094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 50091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 50089,
                                  "name": "_reserveBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50040,
                                  "src": "3677:15:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 50090,
                                  "name": "_sellAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50044,
                                  "src": "3693:11:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3677:27:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 50092,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3676:29:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 50093,
                            "name": "_supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50038,
                            "src": "3706:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3676:37:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 50048,
                        "id": 50095,
                        "nodeType": "Return",
                        "src": "3669:44:76"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    50099
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50099,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "3741:6:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50141,
                      "src": "3733:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50098,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3733:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50100,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3733:14:76"
                },
                {
                  "assignments": [
                    50102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50102,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "3763:9:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50141,
                      "src": "3757:15:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 50101,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3757:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50103,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3757:15:76"
                },
                {
                  "assignments": [
                    50105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50105,
                      "mutability": "mutable",
                      "name": "baseD",
                      "nameLocation": "3790:5:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50141,
                      "src": "3782:13:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50104,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3782:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50109,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50106,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50038,
                      "src": "3798:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 50107,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50044,
                      "src": "3808:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3798:21:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3782:37:76"
                },
                {
                  "expression": {
                    "id": 50119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 50110,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50099,
                          "src": "3830:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 50111,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50102,
                          "src": "3838:9:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 50112,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3829:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50114,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50038,
                          "src": "3870:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 50115,
                          "name": "baseD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50105,
                          "src": "3879:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 50116,
                          "name": "MAX_RESERVE_RATIO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49946,
                          "src": "3886:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 50117,
                          "name": "_reserveRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50042,
                          "src": "3905:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 50113,
                        "name": "power",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50868,
                        "src": "3851:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
                          "typeString": "function (uint256,uint256,uint32,uint32) view returns (uint256,uint8)"
                        }
                      },
                      "id": 50118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3851:77:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "src": "3829:99:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50120,
                  "nodeType": "ExpressionStatement",
                  "src": "3829:99:76"
                },
                {
                  "assignments": [
                    50122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50122,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "3946:10:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50141,
                      "src": "3938:18:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50121,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3938:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50126,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50123,
                      "name": "_reserveBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50040,
                      "src": "3959:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 50124,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50099,
                      "src": "3975:6:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3959:22:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3938:43:76"
                },
                {
                  "assignments": [
                    50128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50128,
                      "mutability": "mutable",
                      "name": "newBalance",
                      "nameLocation": "3999:10:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50141,
                      "src": "3991:18:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3991:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50132,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50129,
                      "name": "_reserveBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50040,
                      "src": "4012:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "id": 50130,
                      "name": "precision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50102,
                      "src": "4031:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4012:28:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3991:49:76"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 50135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 50133,
                            "name": "oldBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50122,
                            "src": "4058:10:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 50134,
                            "name": "newBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50128,
                            "src": "4069:10:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4058:21:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 50136,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4057:23:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "id": 50137,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50099,
                          "src": "4082:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 50138,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4081:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4057:32:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 50048,
                  "id": 50140,
                  "nodeType": "Return",
                  "src": "4050:39:76"
                }
              ]
            },
            "documentation": {
              "id": 50036,
              "nodeType": "StructuredDocumentation",
              "src": "2274:674:76",
              "text": " @dev given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token),\n calculates the return for a given conversion (in the reserve token)\n Formula:\n Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))\n @param _supply              continuous token total supply\n @param _reserveBalance    total reserve token balance\n @param _reserveRatio     constant reserve ratio, represented in ppm, 1-1000000\n @param _sellAmount          sell amount, in the continuous token itself\n @return sale return amount"
            },
            "functionSelector": "49f9b0f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSaleReturn",
            "nameLocation": "2962:19:76",
            "parameters": {
              "id": 50045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50038,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "2999:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 50142,
                  "src": "2991:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2991:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50040,
                  "mutability": "mutable",
                  "name": "_reserveBalance",
                  "nameLocation": "3024:15:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 50142,
                  "src": "3016:23:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50042,
                  "mutability": "mutable",
                  "name": "_reserveRatio",
                  "nameLocation": "3056:13:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 50142,
                  "src": "3049:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 50041,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3049:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50044,
                  "mutability": "mutable",
                  "name": "_sellAmount",
                  "nameLocation": "3087:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 50142,
                  "src": "3079:19:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3079:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2981:118:76"
            },
            "returnParameters": {
              "id": 50048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50047,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50142,
                  "src": "3121:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3121:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3120:9:76"
            },
            "scope": 50143,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49942,
              "name": "Power",
              "nameLocations": [
                "410:5:76"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52335,
              "src": "410:5:76"
            },
            "id": 49943,
            "nodeType": "InheritanceSpecifier",
            "src": "410:5:76"
          }
        ],
        "canonicalName": "BancorFormula",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 49941,
          "nodeType": "StructuredDocumentation",
          "src": "186:197:76",
          "text": " @title Bancor formula by Bancor\n Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements;\n and to You under the Apache License, Version 2.0. \""
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50143,
          52335
        ],
        "name": "BancorFormula",
        "nameLocation": "393:13:76",
        "scope": 50144,
        "usedErrors": []
      }
    ]
  },
  "id": 76
}