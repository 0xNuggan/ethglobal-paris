{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_depositAmount",
          "type": "uint256"
        }
      ],
      "name": "calculatePurchaseReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_sellAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSaleReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "561:29:77:-:0;384:3708:76;561:29:77;;384:3708:76;561:29:77;;;-1:-1:-1;;;561:29:77;;-1:-1:-1;;561:29:77;;-1:-1:-1;561:29:77;:::i;:::-;;384:3708:76;;;;;;;;;-1:-1:-1;;;;;;4042:15:77;:54;-1:-1:-1;;;;;4106:15:77;:54;-1:-1:-1;;;;;4170:15:77;:54;-1:-1:-1;;;;;4234:15:77;:54;-1:-1:-1;;;;;4298:15:77;:54;-1:-1:-1;;;;;4362:15:77;:54;-1:-1:-1;;;;;4426:15:77;:54;-1:-1:-1;;;;;4490:15:77;:54;-1:-1:-1;;;;;4554:15:77;:54;-1:-1:-1;;;;;4618:15:77;:54;-1:-1:-1;;;;;4682:15:77;:54;-1:-1:-1;;;;;4746:15:77;:54;-1:-1:-1;;;;;4810:15:77;:54;-1:-1:-1;;;;;4874:15:77;:54;-1:-1:-1;;;;;4938:15:77;:54;-1:-1:-1;;;;;5002:15:77;:54;-1:-1:-1;;;;;5066:15:77;:54;-1:-1:-1;;;;;5130:15:77;:54;-1:-1:-1;;;;;5194:15:77;:54;-1:-1:-1;;;;;5258:15:77;:54;-1:-1:-1;;;;;5322:15:77;:54;-1:-1:-1;;;;;5386:15:77;:54;-1:-1:-1;;;;;5450:15:77;:54;-1:-1:-1;;;;;5514:15:77;:54;-1:-1:-1;;;;;5578:15:77;:54;-1:-1:-1;;;;;5642:15:77;:54;-1:-1:-1;;;;;5706:15:77;:54;-1:-1:-1;;;;;5770:15:77;:54;-1:-1:-1;;;;;5834:15:77;:54;-1:-1:-1;;;;;5898:15:77;:54;-1:-1:-1;;;;;5962:15:77;:54;-1:-1:-1;;;;;6026:15:77;:54;-1:-1:-1;;;;;6090:15:77;:54;-1:-1:-1;;;;;6154:15:77;:54;-1:-1:-1;;;;;6218:15:77;:54;-1:-1:-1;;;;;6282:15:77;:54;-1:-1:-1;;;;;6346:15:77;:54;-1:-1:-1;;;;;6410:15:77;:54;-1:-1:-1;;;;;6474:15:77;:54;-1:-1:-1;;;;;6538:15:77;:54;-1:-1:-1;;;;;6602:15:77;:54;-1:-1:-1;;;;;6666:15:77;:54;-1:-1:-1;;;;;6730:15:77;:54;-1:-1:-1;;;;;6794:15:77;:54;-1:-1:-1;;;;;6858:15:77;:54;6940:36;6922:15;:54;7004:36;6986:15;:54;7068:36;7050:15;:54;7132:36;7114:15;:54;7196:36;7178:15;:54;7260:36;7242:15;:54;7324:36;7306:15;:54;7388:36;7370:15;:54;7452:36;7434:15;:54;7516:36;7498:15;:54;7580:36;7562:15;:54;7644:36;7626:15;:54;7708:36;7690:15;:54;7772:36;7754:15;:54;7836:36;7818:15;:54;7900:36;7882:15;:54;7964:36;7946:15;:54;8028:36;8010:15;:54;-1:-1:-1;;;;;8074:15:77;:54;8156:36;8138:15;:54;8220:36;8202:15;:54;8284:36;8266:15;:54;8348:36;8330:15;:54;8413:36;8394:16;:55;8478:36;8459:16;:55;8543:36;8524:16;:55;8608:36;8589:16;:55;8673:36;8654:16;:55;8738:36;8719:16;:55;8803:36;8784:16;:55;8868:36;8849:16;:55;8933:36;8914:16;:55;8998:36;8979:16;:55;9063:36;9044:16;:55;9128:36;9109:16;:55;9193:36;9174:16;:55;9258:36;9239:16;:55;9323:36;9304:16;:55;9388:36;9369:16;:55;9453:36;9434:16;:55;9518:36;9499:16;:55;9583:36;9564:16;:55;9648:36;9629:16;:55;9713:36;9694:16;:55;9778:36;9759:16;:55;9843:36;9824:16;:55;9908:36;9889:16;:55;9973:36;9954:16;:55;10038:36;10019:16;:55;10103:36;10084:16;:55;10168:36;10149:16;:55;384:3708:76;;14:127:80;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:80;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:80;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:80;;;2580:26;2531:89;-1:-1:-1;;1335:1:80;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:80;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:80;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:80;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:80:o;2735:127::-;384:3708:76;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806329a00e7c1461004657806349f9b0f71461006c57806354fd4d501461007f575b600080fd5b610059610054366004611987565b610094565b6040519081526020015b60405180910390f35b61005961007a366004611987565b6101c8565b6100876102e0565b60405161006391906119cf565b600061009f8561036e565b6100a88461036e565b6100b78363ffffffff1661036e565b6100c08261036e565b6000851180156100d05750600084115b80156100e2575060008363ffffffff16115b80156100f75750620f424063ffffffff841611155b61013a5760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21034b7383aba399760891b60448201526064015b60405180910390fd5b8160000361014a575060006101c0565b620f423f1963ffffffff84160161017757836101668387611a33565b6101709190611a60565b90506101c0565b600080806101858786611a74565b9050610196818888620f42406103b6565b9093509150600060ff83166101ab858b611a33565b901c90506101b98982611a87565b9450505050505b949350505050565b600080851180156101d95750600084115b80156101eb575060008363ffffffff16115b80156102005750620f424063ffffffff841611155b801561020c5750848211155b61024a5760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21034b7383aba399760891b6044820152606401610131565b8160000361025a575060006101c0565b8482036102685750826101c0565b620f423f1963ffffffff84160161028457846101668386611a33565b600080806102928589611a87565b90506102a38882620f4240896103b6565b909350915060006102b48489611a33565b905060ff831688901b846102c88284611a87565b6102d29190611a60565b9a9950505050505050505050565b600080546102ed90611a9a565b80601f016020809104026020016040519081016040528092919081815260200182805461031990611a9a565b80156103665780601f1061033b57610100808354040283529160200191610366565b820191906000526020600020905b81548152906001019060200180831161034957829003601f168201915b505050505081565b6103b38160405160240161038491815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052610536565b50565b600080600160811b861061040c5760405162461bcd60e51b815260206004820152601860248201527f626173654e2065786365656473206d61782076616c75652e00000000000000006044820152606401610131565b8486101561045c5760405162461bcd60e51b815260206004820152601c60248201527f4261736573203c203120617265206e6f7420737570706f727465642e000000006044820152606401610131565b6000808661046e6001607f1b8a611a33565b6104789190611a60565b905070015bf0a8b1457695355fb8ac404e7a79e38110156104a35761049c81610557565b91506104af565b6104ac81610ad0565b91505b60008563ffffffff168763ffffffff16846104ca9190611a33565b6104d49190611a60565b9050600160831b8110156104f9576104eb81610bbf565b607f9450945050505061052d565b6000610504826111ea565b905061052061051482607f611ad4565b60ff1683901c826112af565b9550935061052d92505050565b94509492505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd886106105b0576105826001607e1b85611a74565b93506fd3094c70f034de4b96ff7d5b6f99fcd86105a36001607f1b88611a33565b6105ad9190611a60565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610610603576105d56001607d1b85611a74565b93506fa45af1e1f40c333b3de1db4dd55f29a76105f66001607f1b88611a33565b6106009190611a60565b95505b6f910b022db7ae67ce76b441c27035c6a18610610656576106286001607c1b85611a74565b93506f910b022db7ae67ce76b441c27035c6a16106496001607f1b88611a33565b6106539190611a60565b95505b6f88415abbe9a76bead8d00cf112e4d4a886106106a95761067b6001607b1b85611a74565b93506f88415abbe9a76bead8d00cf112e4d4a861069c6001607f1b88611a33565b6106a69190611a60565b95505b6f84102b00893f64c705e841d5d4064bd386106106fc576106ce6001607a1b85611a74565b93506f84102b00893f64c705e841d5d4064bd36106ef6001607f1b88611a33565b6106f99190611a60565b95505b6f8204055aaef1c8bd5c3259f4822735a2861061074f57610721600160791b85611a74565b93506f8204055aaef1c8bd5c3259f4822735a26107426001607f1b88611a33565b61074c9190611a60565b95505b6f810100ab00222d861931c15e39b44e9986106107a257610774600160781b85611a74565b93506f810100ab00222d861931c15e39b44e996107956001607f1b88611a33565b61079f9190611a60565b95505b6f808040155aabbbe9451521693554f73386106107f5576107c7600160771b85611a74565b93506f808040155aabbbe9451521693554f7336107e86001607f1b88611a33565b6107f29190611a60565b95505b6108036001607f1b87611a87565b92508291506001607f1b6108178380611a33565b6108219190611a60565b9050600160801b6108328482611a87565b61083c9084611a33565b6108469190611a60565b6108509085611a74565b93506001607f1b6108618284611a33565b61086b9190611a60565b9150600160811b61088c846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa611a87565b6108969084611a33565b6108a09190611a60565b6108aa9085611a74565b93506001607f1b6108bb8284611a33565b6108c59190611a60565b9150600360801b6108e6846f99999999999999999999999999999999611a87565b6108f09084611a33565b6108fa9190611a60565b6109049085611a74565b93506001607f1b6109158284611a33565b61091f9190611a60565b9150600160821b610940846f92492492492492492492492492492492611a87565b61094a9084611a33565b6109549190611a60565b61095e9085611a74565b93506001607f1b61096f8284611a33565b6109799190611a60565b9150600560801b61099a846f8e38e38e38e38e38e38e38e38e38e38e611a87565b6109a49084611a33565b6109ae9190611a60565b6109b89085611a74565b93506001607f1b6109c98284611a33565b6109d39190611a60565b9150600360811b6109f4846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b611a87565b6109fe9084611a33565b610a089190611a60565b610a129085611a74565b93506001607f1b610a238284611a33565b610a2d9190611a60565b9150600760801b610a4e846f89d89d89d89d89d89d89d89d89d89d89611a87565b610a589084611a33565b610a629190611a60565b610a6c9085611a74565b93506001607f1b610a7d8284611a33565b610a879190611a60565b9150600160831b610aa8846f88888888888888888888888888888888611a87565b610ab29084611a33565b610abc9190611a60565b610ac69085611a74565b9695505050505050565b60008082600160801b8110610b15576000610af7610af26001607f1b84611a60565b611918565b60ff811692831c92909150610b11906001607f1b90611a33565b9250505b6001607f1b811115610b8a57607f5b60ff811615610b88576001607f1b610b3c8380611a33565b610b469190611a60565b9150600160801b8210610b7857600191821c91610b639082611ad4565b60ff166001901b83610b759190611a74565b92505b610b8181611aed565b9050610b24565b505b6f05b9de1d10bf4103d647b0955897ba80610bb56f03f80fe03f80fe03f80fe03f80fe03f884611a33565b6101c09190611a60565b6000808080610bd26001607c1b86611b0a565b91508190506001607f1b610be68280611a33565b610bf09190611a60565b9050610c04816710e1b3be415a0000611a33565b610c0e9084611a74565b92506001607f1b610c1f8383611a33565b610c299190611a60565b9050610c3d816705a0913f6b1e0000611a33565b610c479084611a74565b92506001607f1b610c588383611a33565b610c629190611a60565b9050610c7681670168244fdac78000611a33565b610c809084611a74565b92506001607f1b610c918383611a33565b610c9b9190611a60565b9050610cae81664807432bc18000611a33565b610cb89084611a74565b92506001607f1b610cc98383611a33565b610cd39190611a60565b9050610ce681660c0135dca04000611a33565b610cf09084611a74565b92506001607f1b610d018383611a33565b610d0b9190611a60565b9050610d1e816601b707b1cdc000611a33565b610d289084611a74565b92506001607f1b610d398383611a33565b610d439190611a60565b9050610d55816536e0f639b800611a33565b610d5f9084611a74565b92506001607f1b610d708383611a33565b610d7a9190611a60565b9050610d8c81650618fee9f800611a33565b610d969084611a74565b92506001607f1b610da78383611a33565b610db19190611a60565b9050610dc281649c197dcc00611a33565b610dcc9084611a74565b92506001607f1b610ddd8383611a33565b610de79190611a60565b9050610df881640e30dce400611a33565b610e029084611a74565b92506001607f1b610e138383611a33565b610e1d9190611a60565b9050610e2e8164012ebd1300611a33565b610e389084611a74565b92506001607f1b610e498383611a33565b610e539190611a60565b9050610e63816317499f00611a33565b610e6d9084611a74565b92506001607f1b610e7e8383611a33565b610e889190611a60565b9050610e98816301a9d480611a33565b610ea29084611a74565b92506001607f1b610eb38383611a33565b610ebd9190611a60565b9050610ecc81621c6380611a33565b610ed69084611a74565b92506001607f1b610ee78383611a33565b610ef19190611a60565b9050610f00816201c638611a33565b610f0a9084611a74565b92506001607f1b610f1b8383611a33565b610f259190611a60565b9050610f3381611ab8611a33565b610f3d9084611a74565b92506001607f1b610f4e8383611a33565b610f589190611a60565b9050610f668161017c611a33565b610f709084611a74565b92506001607f1b610f818383611a33565b610f8b9190611a60565b9050610f98816014611a33565b610fa29084611a74565b92506001607f1b610fb38383611a33565b610fbd9190611a60565b9050610fca816001611a33565b610fd49084611a74565b92506001607f1b82610fee6721c3677c82b4000086611a60565b610ff89190611a74565b6110029190611a74565b92506001607c1b85161561104a5770018ebef9eac820ae8682b9793ac6d1e77661103d847001c3d6a24ed82218787d624d3e5eba95f9611a33565b6110479190611a60565b92505b6001607d1b851615611090577001368b2fc6f9609fe7aceb46aa619baed46110838470018ebef9eac820ae8682b9793ac6d1e778611a33565b61108d9190611a60565b92505b6001607e1b8516156110d5576fbc5ab1b16779be3575bd8f0520a9f21f6110c8847001368b2fc6f9609fe7aceb46aa619baed5611a33565b6110d29190611a60565b92505b6001607f1b851615611119576f454aaa8efe072e7f6ddbab84b40a55c961110c846fbc5ab1b16779be3575bd8f0520a9f21e611a33565b6111169190611a60565b92505b600160801b85161561115d576f0960aadc109e7a3bf4578099615711ea611150846f454aaa8efe072e7f6ddbab84b40a55c5611a33565b61115a9190611a60565b92505b600160811b8516156111a0576e2bf84208204f5977f9a8cf01fdce3d611193846f0960aadc109e7a3bf4578099615711d7611a33565b61119d9190611a60565b92505b600160821b8516156111e1576d03c6ab775dd0b95b4cbee7e65d116111d4846e2bf84208204f5977f9a8cf01fdc307611a33565b6111de9190611a60565b92505b50909392505050565b60006020607f5b60ff8116611200836001611b1e565b60ff16101561125357600060026112178385611b1e565b6112219190611b37565b90508460018260ff166080811061123a5761123a611b59565b0154106112495780925061124d565b8091505b506111f1565b8360018260ff166080811061126a5761126a611b59565b015410611278579392505050565b8360018360ff166080811061128f5761128f611b59565b01541061129d575092915050565b6112a5611b6f565b5060009392505050565b6000828160ff84166112c18380611a33565b901c91506112df826f03442c4e6074a82f1797f72ac0000000611a33565b6112e99082611a74565b905060ff84166112f98684611a33565b901c9150611317826f0116b96f757c380fb287fd0e40000000611a33565b6113219082611a74565b905060ff84166113318684611a33565b901c915061134e826e45ae5bdd5f0e03eca1ff4390000000611a33565b6113589082611a74565b905060ff84166113688684611a33565b901c9150611385826e0defabf91302cd95b9ffda50000000611a33565b61138f9082611a74565b905060ff841661139f8684611a33565b901c91506113bc826e02529ca9832b22439efff9b8000000611a33565b6113c69082611a74565b905060ff84166113d68684611a33565b901c91506113f2826d54f1cf12bd04e516b6da88000000611a33565b6113fc9082611a74565b905060ff841661140c8684611a33565b901c9150611428826d0a9e39e257a09ca2d6db51000000611a33565b6114329082611a74565b905060ff84166114428684611a33565b901c915061145e826d012e066e7b839fa050c309000000611a33565b6114689082611a74565b905060ff84166114788684611a33565b901c9150611493826c1e33d7d926c329a1ad1a800000611a33565b61149d9082611a74565b905060ff84166114ad8684611a33565b901c91506114c8826c02bee513bdb4a6b19b5f800000611a33565b6114d29082611a74565b905060ff84166114e28684611a33565b901c91506114fc826b3a9316fa79b88eccf2a00000611a33565b6115069082611a74565b905060ff84166115168684611a33565b901c9150611530826b048177ebe1fa812375200000611a33565b61153a9082611a74565b905060ff841661154a8684611a33565b901c9150611563826a5263fe90242dcbacf00000611a33565b61156d9082611a74565b905060ff841661157d8684611a33565b901c9150611596826a057e22099c030d94100000611a33565b6115a09082611a74565b905060ff84166115b08684611a33565b901c91506115c8826957e22099c030d9410000611a33565b6115d29082611a74565b905060ff84166115e28684611a33565b901c91506115fa8269052b6b54569976310000611a33565b6116049082611a74565b905060ff84166116148684611a33565b901c915061162b82684985f67696bf748000611a33565b6116359082611a74565b905060ff84166116458684611a33565b901c915061165c826803dea12ea99e498000611a33565b6116669082611a74565b905060ff84166116768684611a33565b901c915061168c826731880f2214b6e000611a33565b6116969082611a74565b905060ff84166116a68684611a33565b901c91506116bc8267025bcff56eb36000611a33565b6116c69082611a74565b905060ff84166116d68684611a33565b901c91506116eb82661b722e10ab1000611a33565b6116f59082611a74565b905060ff84166117058684611a33565b901c915061171a826601317c70077000611a33565b6117249082611a74565b905060ff84166117348684611a33565b901c915061174882650cba84aafa00611a33565b6117529082611a74565b905060ff84166117628684611a33565b901c9150611775826482573a0a00611a33565b61177f9082611a74565b905060ff841661178f8684611a33565b901c91506117a2826405035ad900611a33565b6117ac9082611a74565b905060ff84166117bc8684611a33565b901c91506117ce82632f881b00611a33565b6117d89082611a74565b905060ff84166117e88684611a33565b901c91506117fa826301b29340611a33565b6118049082611a74565b905060ff84166118148684611a33565b901c915061182582620efc40611a33565b61182f9082611a74565b905060ff841661183f8684611a33565b901c915061184f82617fe0611a33565b6118599082611a74565b905060ff84166118698684611a33565b901c915061187982610420611a33565b6118839082611a74565b905060ff84166118938684611a33565b901c91506118a2826021611a33565b6118ac9082611a74565b905060ff84166118bc8684611a33565b901c91506118cb826001611a33565b6118d59082611a74565b9050600160ff85161b856118f96f0688589cc0e9505e2f2fee558000000084611a60565b6119039190611a74565b61190d9190611a74565b925050505b92915050565b6000808261010081101561194c575b600181111561194757600190811c906119409083611b1e565b9150611927565b611980565b60805b60ff81161561197e57600160ff82161b8210611973579182179160ff81169190911c905b60011c607f1661194f565b505b5092915050565b6000806000806080858703121561199d57600080fd5b8435935060208501359250604085013563ffffffff811681146119bf57600080fd5b9396929550929360600135925050565b600060208083528351808285015260005b818110156119fc578581018301518582016040015282016119e0565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761191257611912611a1d565b634e487b7160e01b600052601260045260246000fd5b600082611a6f57611a6f611a4a565b500490565b8082018082111561191257611912611a1d565b8181038181111561191257611912611a1d565b600181811c90821680611aae57607f821691505b602082108103611ace57634e487b7160e01b600052602260045260246000fd5b50919050565b60ff828116828216039081111561191257611912611a1d565b600060ff821680611b0057611b00611a1d565b6000190192915050565b600082611b1957611b19611a4a565b500690565b60ff818116838216019081111561191257611912611a1d565b600060ff831680611b4a57611b4a611a4a565b8060ff84160491505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fdfea26469706673582212202f224433ed1cb465fa5a0cef5f1b52922a2ff90430a1bbfb23c5e351e3b865dc64736f6c63430008110033",
    "sourceMap": "384:3708:76:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1145:1117;;;;;;:::i;:::-;;:::i;:::-;;;646:25:80;;;634:2;619:18;1145:1117:76;;;;;;;;2947:1143;;;;;;:::i;:::-;;:::i;561:29:77:-;;;:::i;:::-;;;;;;;:::i;1145:1117:76:-;1320:7;1369:24;1385:7;1369:15;:24::i;:::-;1403:32;1419:15;1403;:32::i;:::-;1445:30;1461:13;1445:30;;:15;:30::i;:::-;1485:31;1501:14;1485:15;:31::i;:::-;1544:1;1534:7;:11;:34;;;;;1567:1;1549:15;:19;1534:34;:55;;;;;1588:1;1572:13;:17;;;1534:55;:93;;;;-1:-1:-1;466:7:76;1593:34;;;;;1534:93;1526:121;;;;-1:-1:-1;;;1526:121:76;;1437:2:80;1526:121:76;;;1419:21:80;1476:2;1456:18;;;1449:30;-1:-1:-1;;;1495:18:80;;;1488:45;1550:18;;1526:121:76;;;;;;;;;1706:14;1724:1;1706:19;1702:58;;-1:-1:-1;1748:1:76;1741:8;;1702:58;-1:-1:-1;;1817:34:76;;;;1813:112;;1899:15;1875:22;1883:14;1875:7;:22;:::i;:::-;1874:40;;;;:::i;:::-;1867:47;;;;1813:112;1934:14;;;1999:32;2016:15;1999:14;:32;:::i;:::-;1983:48;;2063:85;2082:5;2089:15;2106:13;466:7;2063:5;:85::i;:::-;2041:107;;-1:-1:-1;2041:107:76;-1:-1:-1;2158:22:76;2183:31;;;2184:16;2041:107;2184:7;:16;:::i;:::-;2183:31;;;-1:-1:-1;2231:24:76;2248:7;2183:31;2231:24;:::i;:::-;2224:31;;;;;;1145:1117;;;;;;;:::o;2947:1143::-;3115:7;3182:1;3172:7;:11;:34;;;;;3205:1;3187:15;:19;3172:34;:55;;;;;3226:1;3210:13;:17;;;3172:55;:93;;;;-1:-1:-1;466:7:76;3231:34;;;;;3172:93;:119;;;;;3284:7;3269:11;:22;;3172:119;3164:147;;;;-1:-1:-1;;;3164:147:76;;1437:2:80;3164:147:76;;;1419:21:80;1476:2;1456:18;;;1449:30;-1:-1:-1;;;1495:18:80;;;1488:45;1550:18;;3164:147:76;1235:339:80;3164:147:76;3367:11;3382:1;3367:16;3363:55;;-1:-1:-1;3406:1:76;3399:8;;3363:55;3500:7;3485:11;:22;3481:75;;-1:-1:-1;3530:15:76;3523:22;;3481:75;-1:-1:-1;;3613:34:76;;;;3609:109;;3700:7;3671:27;3687:11;3671:15;:27;:::i;3609:109::-;3727:14;;;3792:21;3802:11;3792:7;:21;:::i;:::-;3776:37;;3845:77;3864:7;3873:5;466:7;3899:13;3845:5;:77::i;:::-;3823:99;;-1:-1:-1;3823:99:76;-1:-1:-1;3932:18:76;3953:22;3823:99;3953:15;:22;:::i;:::-;3932:43;-1:-1:-1;4006:28:76;;;;;;4076:6;4052:21;4006:28;3932:43;4052:21;:::i;:::-;4051:32;;;;:::i;:::-;4044:39;2947:1143;-1:-1:-1;;;;;;;;;;2947:1143:76:o;561:29:77:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;781:114:14:-;831:57;884:2;847:40;;;;;;646:25:80;;634:2;619:18;;500:177;847:40:14;;;;-1:-1:-1;;847:40:14;;;;;;;;;;;;;;-1:-1:-1;;;;;847:40:14;-1:-1:-1;;;847:40:14;;;831:15;:57::i;:::-;781:114;:::o;11597:892:77:-;11733:7;11742:5;-1:-1:-1;;;11771:6:77;:16;11763:53;;;;-1:-1:-1;;;11763:53:77;;2991:2:80;11763:53:77;;;2973:21:80;3030:2;3010:18;;;3003:30;3069:26;3049:18;;;3042:54;3113:18;;11763:53:77;2789:348:80;11763:53:77;11844:6;11834;:16;;11826:57;;;;-1:-1:-1;;;11826:57:77;;3344:2:80;11826:57:77;;;3326:21:80;3383:2;3363:18;;;3356:30;3422;3402:18;;;3395:58;3470:18;;11826:57:77;3142:352:80;11826:57:77;11894:15;;11953:6;11934:16;-1:-1:-1;;;11934:6:77;:16;:::i;:::-;:25;;;;:::i;:::-;11919:40;;1584:35;11973:4;:22;11969:136;;;12021:16;12032:4;12021:10;:16::i;:::-;12011:26;;11969:136;;;12078:16;12089:4;12078:10;:16::i;:::-;12068:26;;11969:136;12115:23;12159:5;12141:23;;12151:5;12141:15;;:7;:15;;;;:::i;:::-;:23;;;;:::i;:::-;12115:49;;-1:-1:-1;;;12178:15:77;:33;12174:309;;;12235:27;12246:15;12235:10;:27::i;:::-;771:3;12227:51;;;;;;;;;12174:309;12309:15;12327:42;12353:15;12327:25;:42::i;:::-;12309:60;-1:-1:-1;12391:69:77;12422:25;12309:60;771:3;12422:25;:::i;:::-;12402:46;;:15;:46;;12450:9;12391:10;:69::i;:::-;12383:89;-1:-1:-1;12462:9:77;-1:-1:-1;12383:89:77;;-1:-1:-1;;;12383:89:77;11597:892;;;;;;;;:::o;181:376:14:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;19582:2397:77:-;19636:7;;;;;19748:34;19743:39;;19739:143;;19785:41;-1:-1:-1;;;19785:41:77;;:::i;:::-;;-1:-1:-1;19846:34:77;19832:11;-1:-1:-1;;;19832:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;19828:52;;19739:143;19900:34;19895:1;:39;19891:143;;19937:41;-1:-1:-1;;;19937:41:77;;:::i;:::-;;-1:-1:-1;19998:34:77;19984:11;-1:-1:-1;;;19984:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;19980:52;;19891:143;20052:34;20047:1;:39;20043:143;;20089:41;-1:-1:-1;;;20089:41:77;;:::i;:::-;;-1:-1:-1;20150:34:77;20136:11;-1:-1:-1;;;20136:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20132:52;;20043:143;20204:34;20199:1;:39;20195:143;;20241:41;-1:-1:-1;;;20241:41:77;;:::i;:::-;;-1:-1:-1;20302:34:77;20288:11;-1:-1:-1;;;20288:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20284:52;;20195:143;20356:34;20351:1;:39;20347:143;;20393:41;-1:-1:-1;;;20393:41:77;;:::i;:::-;;-1:-1:-1;20454:34:77;20440:11;-1:-1:-1;;;20440:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20436:52;;20347:143;20508:34;20503:1;:39;20499:143;;20545:41;-1:-1:-1;;;20545:41:77;;:::i;:::-;;-1:-1:-1;20606:34:77;20592:11;-1:-1:-1;;;20592:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20588:52;;20499:143;20660:34;20655:1;:39;20651:143;;20697:41;-1:-1:-1;;;20697:41:77;;:::i;:::-;;-1:-1:-1;20758:34:77;20744:11;-1:-1:-1;;;20744:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20740:52;;20651:143;20812:34;20807:1;:39;20803:143;;20849:41;-1:-1:-1;;;20849:41:77;;:::i;:::-;;-1:-1:-1;20910:34:77;20896:11;-1:-1:-1;;;20896:1:77;:11;:::i;:::-;:48;;;;:::i;:::-;20892:52;;20803:143;20964:11;-1:-1:-1;;;20964:1:77;:11;:::i;:::-;20960:15;-1:-1:-1;20960:15:77;;-1:-1:-1;;;;20989:5:77;20960:15;;20989:5;:::i;:::-;:15;;;;:::i;:::-;20985:19;-1:-1:-1;;;;21026:39:77;21064:1;21069:35;21026:39;:::i;:::-;21021:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21014:90;;;;:::i;:::-;;-1:-1:-1;;;;21110:5:77;21114:1;21110;:5;:::i;:::-;:15;;;;:::i;:::-;21106:19;-1:-1:-1;;;;21147:39:77;21185:1;21147:35;:39;:::i;:::-;21142:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21135:90;;;;:::i;:::-;;-1:-1:-1;;;;21231:5:77;21235:1;21231;:5;:::i;:::-;:15;;;;:::i;:::-;21227:19;-1:-1:-1;;;;21268:39:77;21306:1;21268:35;:39;:::i;:::-;21263:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21256:90;;;;:::i;:::-;;-1:-1:-1;;;;21352:5:77;21356:1;21352;:5;:::i;:::-;:15;;;;:::i;:::-;21348:19;-1:-1:-1;;;;21389:39:77;21427:1;21389:35;:39;:::i;:::-;21384:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21377:90;;;;:::i;:::-;;-1:-1:-1;;;;21473:5:77;21477:1;21473;:5;:::i;:::-;:15;;;;:::i;:::-;21469:19;-1:-1:-1;;;;21510:39:77;21548:1;21510:35;:39;:::i;:::-;21505:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21498:90;;;;:::i;:::-;;-1:-1:-1;;;;21594:5:77;21598:1;21594;:5;:::i;:::-;:15;;;;:::i;:::-;21590:19;-1:-1:-1;;;;21631:39:77;21669:1;21631:35;:39;:::i;:::-;21626:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21619:90;;;;:::i;:::-;;-1:-1:-1;;;;21715:5:77;21719:1;21715;:5;:::i;:::-;:15;;;;:::i;:::-;21711:19;-1:-1:-1;;;;21752:39:77;21790:1;21752:35;:39;:::i;:::-;21747:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21740:90;;;;:::i;:::-;;-1:-1:-1;;;;21836:5:77;21840:1;21836;:5;:::i;:::-;:15;;;;:::i;:::-;21832:19;-1:-1:-1;;;;21873:39:77;21911:1;21873:35;:39;:::i;:::-;21868:45;;:1;:45;:::i;:::-;:83;;;;:::i;:::-;21861:90;;;;:::i;:::-;;19582:2397;-1:-1:-1;;;;;;19582:2397:77:o;12654:826::-;12709:7;;12765:2;-1:-1:-1;;;12873:12:77;;12869:152;;12901:11;12915:22;12925:11;-1:-1:-1;;;12925:1:77;:11;:::i;:::-;12915:9;:22::i;:::-;12951:11;;;;;;;12901:36;;-1:-1:-1;12995:15:77;;-1:-1:-1;;;1008:35:77;12995:15;:::i;:::-;12989:21;;12887:134;12869:152;-1:-1:-1;;;13126:1:77;:11;13122:297;;;771:3;13153:256;13183:5;;;;13153:256;;-1:-1:-1;;;13218:5:77;13222:1;;13218:5;:::i;:::-;13217:17;;;;:::i;:::-;13213:21;;-1:-1:-1;;;13273:1:77;:12;13269:126;;13315:1;13309:7;;;;13370:5;;:1;:5;:::i;:::-;13362:14;;628:1;13362:14;;13355:21;;;;;:::i;:::-;;;13269:126;13190:3;;;:::i;:::-;;;13153:256;;;;13122:297;1397:33;13436:19;1315:33;13436:3;:19;:::i;:::-;:37;;;;:::i;22150:2980::-;22204:7;;;;22296:38;-1:-1:-1;;;22296:1:77;:38;:::i;:::-;22292:42;-1:-1:-1;22292:42:77;;-1:-1:-1;;;;22348:5:77;22292:42;;22348:5;:::i;:::-;:15;;;;:::i;:::-;22344:19;-1:-1:-1;22372:22:77;22344:19;22376:18;22372:22;:::i;:::-;22365:29;;;;:::i;:::-;;-1:-1:-1;;;;22434:5:77;22438:1;22434;:5;:::i;:::-;:15;;;;:::i;:::-;22430:19;-1:-1:-1;22458:22:77;22430:19;22462:18;22458:22;:::i;:::-;22451:29;;;;:::i;:::-;;-1:-1:-1;;;;22520:5:77;22524:1;22520;:5;:::i;:::-;:15;;;;:::i;:::-;22516:19;-1:-1:-1;22544:22:77;22516:19;22548:18;22544:22;:::i;:::-;22537:29;;;;:::i;:::-;;-1:-1:-1;;;;22606:5:77;22610:1;22606;:5;:::i;:::-;:15;;;;:::i;:::-;22602:19;-1:-1:-1;22630:22:77;22602:19;22634:18;22630:22;:::i;:::-;22623:29;;;;:::i;:::-;;-1:-1:-1;;;;22692:5:77;22696:1;22692;:5;:::i;:::-;:15;;;;:::i;:::-;22688:19;-1:-1:-1;22716:22:77;22688:19;22720:18;22716:22;:::i;:::-;22709:29;;;;:::i;:::-;;-1:-1:-1;;;;22778:5:77;22782:1;22778;:5;:::i;:::-;:15;;;;:::i;:::-;22774:19;-1:-1:-1;22802:22:77;22774:19;22806:18;22802:22;:::i;:::-;22795:29;;;;:::i;:::-;;-1:-1:-1;;;;22864:5:77;22868:1;22864;:5;:::i;:::-;:15;;;;:::i;:::-;22860:19;-1:-1:-1;22888:22:77;22860:19;22892:18;22888:22;:::i;:::-;22881:29;;;;:::i;:::-;;-1:-1:-1;;;;22950:5:77;22954:1;22950;:5;:::i;:::-;:15;;;;:::i;:::-;22946:19;-1:-1:-1;22974:22:77;22946:19;22978:18;22974:22;:::i;:::-;22967:29;;;;:::i;:::-;;-1:-1:-1;;;;23036:5:77;23040:1;23036;:5;:::i;:::-;:15;;;;:::i;:::-;23032:19;-1:-1:-1;23060:22:77;23032:19;23064:18;23060:22;:::i;:::-;23053:29;;;;:::i;:::-;;-1:-1:-1;;;;23122:5:77;23126:1;23122;:5;:::i;:::-;:15;;;;:::i;:::-;23118:19;-1:-1:-1;23146:22:77;23118:19;23150:18;23146:22;:::i;:::-;23139:29;;;;:::i;:::-;;-1:-1:-1;;;;23208:5:77;23212:1;23208;:5;:::i;:::-;:15;;;;:::i;:::-;23204:19;-1:-1:-1;23232:22:77;23204:19;23236:18;23232:22;:::i;:::-;23225:29;;;;:::i;:::-;;-1:-1:-1;;;;23294:5:77;23298:1;23294;:5;:::i;:::-;:15;;;;:::i;:::-;23290:19;-1:-1:-1;23318:22:77;23290:19;23322:18;23318:22;:::i;:::-;23311:29;;;;:::i;:::-;;-1:-1:-1;;;;23380:5:77;23384:1;23380;:5;:::i;:::-;:15;;;;:::i;:::-;23376:19;-1:-1:-1;23404:22:77;23376:19;23408:18;23404:22;:::i;:::-;23397:29;;;;:::i;:::-;;-1:-1:-1;;;;23466:5:77;23470:1;23466;:5;:::i;:::-;:15;;;;:::i;:::-;23462:19;-1:-1:-1;23490:22:77;23462:19;23494:18;23490:22;:::i;:::-;23483:29;;;;:::i;:::-;;-1:-1:-1;;;;23552:5:77;23556:1;23552;:5;:::i;:::-;:15;;;;:::i;:::-;23548:19;-1:-1:-1;23576:22:77;23548:19;23580:18;23576:22;:::i;:::-;23569:29;;;;:::i;:::-;;-1:-1:-1;;;;23638:5:77;23642:1;23638;:5;:::i;:::-;:15;;;;:::i;:::-;23634:19;-1:-1:-1;23662:22:77;23634:19;23666:18;23662:22;:::i;:::-;23655:29;;;;:::i;:::-;;-1:-1:-1;;;;23724:5:77;23728:1;23724;:5;:::i;:::-;:15;;;;:::i;:::-;23720:19;-1:-1:-1;23748:22:77;23720:19;23752:18;23748:22;:::i;:::-;23741:29;;;;:::i;:::-;;-1:-1:-1;;;;23810:5:77;23814:1;23810;:5;:::i;:::-;:15;;;;:::i;:::-;23806:19;-1:-1:-1;23834:22:77;23806:19;23838:18;23834:22;:::i;:::-;23827:29;;;;:::i;:::-;;-1:-1:-1;;;;23896:5:77;23900:1;23896;:5;:::i;:::-;:15;;;;:::i;:::-;23892:19;-1:-1:-1;23920:22:77;23892:19;23924:18;23920:22;:::i;:::-;23913:29;;;;:::i;:::-;;-1:-1:-1;;;;24011:1:77;23984:24;23990:18;23913:29;23984:24;:::i;:::-;:28;;;;:::i;:::-;:38;;;;:::i;:::-;23978:44;-1:-1:-1;;;;24088:39:77;;24087:46;24083:137;;24185:35;24141:41;:3;24147:35;24141:41;:::i;:::-;:79;;;;:::i;:::-;24135:85;;24083:137;-1:-1:-1;;;24235:39:77;;24234:46;24230:137;;24332:35;24288:41;:3;24294:35;24288:41;:::i;:::-;:79;;;;:::i;:::-;24282:85;;24230:137;-1:-1:-1;;;24382:39:77;;24381:46;24377:137;;24479:35;24435:41;:3;24441:35;24435:41;:::i;:::-;:79;;;;:::i;:::-;24429:85;;24377:137;-1:-1:-1;;;24529:39:77;;24528:46;24524:137;;24626:35;24582:41;:3;24588:35;24582:41;:::i;:::-;:79;;;;:::i;:::-;24576:85;;24524:137;-1:-1:-1;;;24676:39:77;;24675:46;24671:137;;24773:35;24729:41;:3;24735:35;24729:41;:::i;:::-;:79;;;;:::i;:::-;24723:85;;24671:137;-1:-1:-1;;;24823:39:77;;24822:46;24818:137;;24920:35;24876:41;:3;24882:35;24876:41;:::i;:::-;:79;;;;:::i;:::-;24870:85;;24818:137;-1:-1:-1;;;24970:39:77;;24969:46;24965:137;;25067:35;25023:41;:3;25029:35;25023:41;:::i;:::-;:79;;;;:::i;:::-;25017:85;;24965:137;-1:-1:-1;25120:3:77;;22150:2980;-1:-1:-1;;;22150:2980:77:o;14488:508::-;14562:5;724:2;771:3;14652:179;14659:11;;;:6;:2;14664:1;14659:6;:::i;:::-;:11;;;14652:179;;;14686:9;14710:1;14699:7;14704:2;14699;:7;:::i;:::-;14698:13;;;;:::i;:::-;14686:25;;14749:2;14729:11;14741:3;14729:16;;;;;;;;;:::i;:::-;;;:22;14725:95;;14774:3;14769:8;;14725:95;;;14817:3;14812:8;;14725:95;14672:159;14652:179;;;14864:2;14845:11;14857:2;14845:15;;;;;;;;;:::i;:::-;;;:21;14841:48;;14887:2;14488:508;-1:-1:-1;;;14488:508:77:o;14841:48::-;14922:2;14903:11;14915:2;14903:15;;;;;;;;;:::i;:::-;;;:21;14899:48;;-1:-1:-1;14945:2:77;14488:508;-1:-1:-1;;14488:508:77:o;14899:48::-;14958:13;;:::i;:::-;-1:-1:-1;14988:1:77;;14488:508;-1:-1:-1;;;14488:508:77:o;15580:3826::-;15653:7;15685:2;15653:7;15728:23;;;15729:7;15685:2;;15729:7;:::i;:::-;15728:23;;;-1:-1:-1;15760:38:77;15728:23;15765:33;15760:38;:::i;:::-;15753:45;;;;:::i;:::-;;-1:-1:-1;15839:23:77;;;15840:7;15845:2;15840;:7;:::i;:::-;15839:23;;;-1:-1:-1;15871:38:77;15839:23;15876:33;15871:38;:::i;:::-;15864:45;;;;:::i;:::-;;-1:-1:-1;15950:23:77;;;15951:7;15956:2;15951;:7;:::i;:::-;15950:23;;;-1:-1:-1;15982:38:77;15950:23;15987:33;15982:38;:::i;:::-;15975:45;;;;:::i;:::-;;-1:-1:-1;16061:23:77;;;16062:7;16067:2;16062;:7;:::i;:::-;16061:23;;;-1:-1:-1;16093:38:77;16061:23;16098:33;16093:38;:::i;:::-;16086:45;;;;:::i;:::-;;-1:-1:-1;16172:23:77;;;16173:7;16178:2;16173;:7;:::i;:::-;16172:23;;;-1:-1:-1;16204:38:77;16172:23;16209:33;16204:38;:::i;:::-;16197:45;;;;:::i;:::-;;-1:-1:-1;16283:23:77;;;16284:7;16289:2;16284;:7;:::i;:::-;16283:23;;;-1:-1:-1;16315:38:77;16283:23;16320:33;16315:38;:::i;:::-;16308:45;;;;:::i;:::-;;-1:-1:-1;16394:23:77;;;16395:7;16400:2;16395;:7;:::i;:::-;16394:23;;;-1:-1:-1;16426:38:77;16394:23;16431:33;16426:38;:::i;:::-;16419:45;;;;:::i;:::-;;-1:-1:-1;16505:23:77;;;16506:7;16511:2;16506;:7;:::i;:::-;16505:23;;;-1:-1:-1;16537:38:77;16505:23;16542:33;16537:38;:::i;:::-;16530:45;;;;:::i;:::-;;-1:-1:-1;16616:23:77;;;16617:7;16622:2;16617;:7;:::i;:::-;16616:23;;;-1:-1:-1;16648:38:77;16616:23;16653:33;16648:38;:::i;:::-;16641:45;;;;:::i;:::-;;-1:-1:-1;16727:23:77;;;16728:7;16733:2;16728;:7;:::i;:::-;16727:23;;;-1:-1:-1;16759:38:77;16727:23;16764:33;16759:38;:::i;:::-;16752:45;;;;:::i;:::-;;-1:-1:-1;16838:23:77;;;16839:7;16844:2;16839;:7;:::i;:::-;16838:23;;;-1:-1:-1;16870:38:77;16838:23;16875:33;16870:38;:::i;:::-;16863:45;;;;:::i;:::-;;-1:-1:-1;16949:23:77;;;16950:7;16955:2;16950;:7;:::i;:::-;16949:23;;;-1:-1:-1;16981:38:77;16949:23;16986:33;16981:38;:::i;:::-;16974:45;;;;:::i;:::-;;-1:-1:-1;17060:23:77;;;17061:7;17066:2;17061;:7;:::i;:::-;17060:23;;;-1:-1:-1;17092:38:77;17060:23;17097:33;17092:38;:::i;:::-;17085:45;;;;:::i;:::-;;-1:-1:-1;17171:23:77;;;17172:7;17177:2;17172;:7;:::i;:::-;17171:23;;;-1:-1:-1;17203:38:77;17171:23;17208:33;17203:38;:::i;:::-;17196:45;;;;:::i;:::-;;-1:-1:-1;17282:23:77;;;17283:7;17288:2;17283;:7;:::i;:::-;17282:23;;;-1:-1:-1;17314:38:77;17282:23;17319:33;17314:38;:::i;:::-;17307:45;;;;:::i;:::-;;-1:-1:-1;17393:23:77;;;17394:7;17399:2;17394;:7;:::i;:::-;17393:23;;;-1:-1:-1;17425:38:77;17393:23;17430:33;17425:38;:::i;:::-;17418:45;;;;:::i;:::-;;-1:-1:-1;17504:23:77;;;17505:7;17510:2;17505;:7;:::i;:::-;17504:23;;;-1:-1:-1;17536:38:77;17504:23;17541:33;17536:38;:::i;:::-;17529:45;;;;:::i;:::-;;-1:-1:-1;17615:23:77;;;17616:7;17621:2;17616;:7;:::i;:::-;17615:23;;;-1:-1:-1;17647:38:77;17615:23;17652:33;17647:38;:::i;:::-;17640:45;;;;:::i;:::-;;-1:-1:-1;17726:23:77;;;17727:7;17732:2;17727;:7;:::i;:::-;17726:23;;;-1:-1:-1;17758:38:77;17726:23;17763:33;17758:38;:::i;:::-;17751:45;;;;:::i;:::-;;-1:-1:-1;17837:23:77;;;17838:7;17843:2;17838;:7;:::i;:::-;17837:23;;;-1:-1:-1;17869:38:77;17837:23;17874:33;17869:38;:::i;:::-;17862:45;;;;:::i;:::-;;-1:-1:-1;17948:23:77;;;17949:7;17954:2;17949;:7;:::i;:::-;17948:23;;;-1:-1:-1;17980:38:77;17948:23;17985:33;17980:38;:::i;:::-;17973:45;;;;:::i;:::-;;-1:-1:-1;18059:23:77;;;18060:7;18065:2;18060;:7;:::i;:::-;18059:23;;;-1:-1:-1;18091:38:77;18059:23;18096:33;18091:38;:::i;:::-;18084:45;;;;:::i;:::-;;-1:-1:-1;18170:23:77;;;18171:7;18176:2;18171;:7;:::i;:::-;18170:23;;;-1:-1:-1;18202:38:77;18170:23;18207:33;18202:38;:::i;:::-;18195:45;;;;:::i;:::-;;-1:-1:-1;18281:23:77;;;18282:7;18287:2;18282;:7;:::i;:::-;18281:23;;;-1:-1:-1;18313:38:77;18281:23;18318:33;18313:38;:::i;:::-;18306:45;;;;:::i;:::-;;-1:-1:-1;18392:23:77;;;18393:7;18398:2;18393;:7;:::i;:::-;18392:23;;;-1:-1:-1;18424:38:77;18392:23;18429:33;18424:38;:::i;:::-;18417:45;;;;:::i;:::-;;-1:-1:-1;18503:23:77;;;18504:7;18509:2;18504;:7;:::i;:::-;18503:23;;;-1:-1:-1;18535:38:77;18503:23;18540:33;18535:38;:::i;:::-;18528:45;;;;:::i;:::-;;-1:-1:-1;18614:23:77;;;18615:7;18620:2;18615;:7;:::i;:::-;18614:23;;;-1:-1:-1;18646:38:77;18614:23;18651:33;18646:38;:::i;:::-;18639:45;;;;:::i;:::-;;-1:-1:-1;18725:23:77;;;18726:7;18731:2;18726;:7;:::i;:::-;18725:23;;;-1:-1:-1;18757:38:77;18725:23;18762:33;18757:38;:::i;:::-;18750:45;;;;:::i;:::-;;-1:-1:-1;18836:23:77;;;18837:7;18842:2;18837;:7;:::i;:::-;18836:23;;;-1:-1:-1;18868:38:77;18836:23;18873:33;18868:38;:::i;:::-;18861:45;;;;:::i;:::-;;-1:-1:-1;18947:23:77;;;18948:7;18953:2;18948;:7;:::i;:::-;18947:23;;;-1:-1:-1;18979:38:77;18947:23;18984:33;18979:38;:::i;:::-;18972:45;;;;:::i;:::-;;-1:-1:-1;19058:23:77;;;19059:7;19064:2;19059;:7;:::i;:::-;19058:23;;;-1:-1:-1;19090:38:77;19058:23;19095:33;19090:38;:::i;:::-;19083:45;;;;:::i;:::-;;-1:-1:-1;19169:23:77;;;19170:7;19175:2;19170;:7;:::i;:::-;19169:23;;;-1:-1:-1;19201:38:77;19169:23;19206:33;19201:38;:::i;:::-;19194:45;;;;:::i;:::-;;-1:-1:-1;628:1:77;19331:17;;;;19325:2;19283:39;19289:33;19194:45;19283:39;:::i;:::-;:44;;;;:::i;:::-;:66;;;;:::i;:::-;19276:73;;;;15580:3826;;;;;:::o;13595:532::-;13649:5;;13701:2;13722:3;13718:7;;13714:386;;;13777:80;13788:1;13784;:5;13777:80;;;13815:1;13809:7;;;;13834:8;;;;:::i;:::-;;;13777:80;;;13714:386;;;13938:3;13923:167;13943:5;;;;13923:167;;628:1;13987:8;;;;13981:15;;13977:99;;14049:8;;;;14020:7;;;;;;;;13977:99;13956:1;13950:7;;;13923:167;;;;13714:386;-1:-1:-1;14117:3:77;13595:532;-1:-1:-1;;13595:532:77:o;14:481:80:-;99:6;107;115;123;176:3;164:9;155:7;151:23;147:33;144:53;;;193:1;190;183:12;144:53;229:9;216:23;206:33;;286:2;275:9;271:18;258:32;248:42;;340:2;329:9;325:18;312:32;384:10;377:5;373:22;366:5;363:33;353:61;;410:1;407;400:12;353:61;14:481;;;;-1:-1:-1;433:5:80;;485:2;470:18;457:32;;-1:-1:-1;;14:481:80:o;682:548::-;794:4;823:2;852;841:9;834:21;884:6;878:13;927:6;922:2;911:9;907:18;900:34;952:1;962:140;976:6;973:1;970:13;962:140;;;1071:14;;;1067:23;;1061:30;1037:17;;;1056:2;1033:26;1026:66;991:10;;962:140;;;966:3;1151:1;1146:2;1137:6;1126:9;1122:22;1118:31;1111:42;1221:2;1214;1210:7;1205:2;1197:6;1193:15;1189:29;1178:9;1174:45;1170:54;1162:62;;;;682:548;;;;:::o;1579:127::-;1640:10;1635:3;1631:20;1628:1;1621:31;1671:4;1668:1;1661:15;1695:4;1692:1;1685:15;1711:168;1784:9;;;1815;;1832:15;;;1826:22;;1812:37;1802:71;;1853:18;;:::i;1884:127::-;1945:10;1940:3;1936:20;1933:1;1926:31;1976:4;1973:1;1966:15;2000:4;1997:1;1990:15;2016:120;2056:1;2082;2072:35;;2087:18;;:::i;:::-;-1:-1:-1;2121:9:80;;2016:120::o;2141:125::-;2206:9;;;2227:10;;;2224:36;;;2240:18;;:::i;2271:128::-;2338:9;;;2359:11;;;2356:37;;;2373:18;;:::i;2404:380::-;2483:1;2479:12;;;;2526;;;2547:61;;2601:4;2593:6;2589:17;2579:27;;2547:61;2654:2;2646:6;2643:14;2623:18;2620:38;2617:161;;2700:10;2695:3;2691:20;2688:1;2681:31;2735:4;2732:1;2725:15;2763:4;2760:1;2753:15;2617:161;;2404:380;;;:::o;3499:151::-;3589:4;3582:12;;;3568;;;3564:31;;3607:14;;3604:40;;;3624:18;;:::i;3655:178::-;3692:3;3736:4;3729:5;3725:16;3760:7;3750:41;;3771:18;;:::i;:::-;-1:-1:-1;;3807:20:80;;3655:178;-1:-1:-1;;3655:178:80:o;3838:112::-;3870:1;3896;3886:35;;3901:18;;:::i;:::-;-1:-1:-1;3935:9:80;;3838:112::o;3955:148::-;4043:4;4022:12;;;4036;;;4018:31;;4061:13;;4058:39;;;4077:18;;:::i;4108:165::-;4146:1;4180:4;4177:1;4173:12;4204:3;4194:37;;4211:18;;:::i;:::-;4263:3;4256:4;4253:1;4249:12;4245:22;4240:27;;;4108:165;;;;:::o;4278:127::-;4339:10;4334:3;4330:20;4327:1;4320:31;4370:4;4367:1;4360:15;4394:4;4391:1;4384:15;4410:127;4471:10;4466:3;4462:20;4459:1;4452:31;4502:4;4499:1;4492:15;4526:4;4523:1;4516:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": "29a00e7c",
    "calculateSaleReturn(uint256,uint256,uint32,uint256)": "49f9b0f7",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_depositAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePurchaseReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_sellAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculatePurchaseReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token), calculates the return for a given conversion (in the continuous token) Formula: Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)\",\"params\":{\"_depositAmount\":\"deposit amount, in reserve token\",\"_reserveBalance\":\"total reserve token balance\",\"_reserveRatio\":\"reserve ratio, represented in ppm, 1-1000000\",\"_supply\":\"continuous token total supply\"},\"returns\":{\"_0\":\"purchase return amount\"}},\"calculateSaleReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token), calculates the return for a given conversion (in the reserve token) Formula: Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))\",\"params\":{\"_reserveBalance\":\"total reserve token balance\",\"_reserveRatio\":\"constant reserve ratio, represented in ppm, 1-1000000\",\"_sellAmount\":\"sell amount, in the continuous token itself\",\"_supply\":\"continuous token total supply\"},\"returns\":{\"_0\":\"sale return amount\"}}},\"title\":\"Bancor formula by Bancor Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements; and to You under the Apache License, Version 2.0. \\\"\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/bonding_curve/math/BancorFormula.sol\":\"BancorFormula\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aragon/osx/=lib/osx/packages/contracts/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":osx/=lib/osx/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"src/bonding_curve/math/BancorFormula.sol\":{\"keccak256\":\"0xc29baca9df1d8801445c505e006db8b40eade3750c4dc0296cd0080fbe630346\",\"urls\":[\"bzz-raw://e6491828943d0f189caf734581ad01812dae69a62024e0076c8e58401fb15897\",\"dweb:/ipfs/QmRFEZHoCDv3USWC2cNXavvuknt6UMwguxcu9kTGCHaPQa\"]},\"src/bonding_curve/math/Power.sol\":{\"keccak256\":\"0xa7a2edc79e4f53d393903bfedea50e09c492d17dddc7c422dc965c4cea05c544\",\"urls\":[\"bzz-raw://c6804e8a3b0550767f98ed788d284741f86d8bb50690c8321708a3a8eedebb23\",\"dweb:/ipfs/QmaJJWY1RHnYXDKKzpEi2DJ4rDTRZvBQYYqrTTKVcLPUSx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_supply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_reserveBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_reserveRatio",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "_depositAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculatePurchaseReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_supply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_reserveBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_reserveRatio",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "_sellAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateSaleReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": {
            "details": "given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token), calculates the return for a given conversion (in the continuous token) Formula: Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)",
            "params": {
              "_depositAmount": "deposit amount, in reserve token",
              "_reserveBalance": "total reserve token balance",
              "_reserveRatio": "reserve ratio, represented in ppm, 1-1000000",
              "_supply": "continuous token total supply"
            },
            "returns": {
              "_0": "purchase return amount"
            }
          },
          "calculateSaleReturn(uint256,uint256,uint32,uint256)": {
            "details": "given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token), calculates the return for a given conversion (in the reserve token) Formula: Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))",
            "params": {
              "_reserveBalance": "total reserve token balance",
              "_reserveRatio": "constant reserve ratio, represented in ppm, 1-1000000",
              "_sellAmount": "sell amount, in the continuous token itself",
              "_supply": "continuous token total supply"
            },
            "returns": {
              "_0": "sale return amount"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aragon/osx/=lib/osx/packages/contracts/src/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":osx/=lib/osx/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/bonding_curve/math/BancorFormula.sol": "BancorFormula"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "src/bonding_curve/math/BancorFormula.sol": {
        "keccak256": "0xc29baca9df1d8801445c505e006db8b40eade3750c4dc0296cd0080fbe630346",
        "urls": [
          "bzz-raw://e6491828943d0f189caf734581ad01812dae69a62024e0076c8e58401fb15897",
          "dweb:/ipfs/QmRFEZHoCDv3USWC2cNXavvuknt6UMwguxcu9kTGCHaPQa"
        ],
        "license": null
      },
      "src/bonding_curve/math/Power.sol": {
        "keccak256": "0xa7a2edc79e4f53d393903bfedea50e09c492d17dddc7c422dc965c4cea05c544",
        "urls": [
          "bzz-raw://c6804e8a3b0550767f98ed788d284741f86d8bb50690c8321708a3a8eedebb23",
          "dweb:/ipfs/QmaJJWY1RHnYXDKKzpEi2DJ4rDTRZvBQYYqrTTKVcLPUSx"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/bonding_curve/math/BancorFormula.sol",
    "id": 50072,
    "exportedSymbols": {
      "BancorFormula": [
        50071
      ],
      "Power": [
        52263
      ],
      "console": [
        21489
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:4092:76",
    "nodes": [
      {
        "id": 49842,
        "nodeType": "PragmaDirective",
        "src": "0:23:76",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 49843,
        "nodeType": "ImportDirective",
        "src": "25:21:76",
        "nodes": [],
        "absolutePath": "src/bonding_curve/math/Power.sol",
        "file": "./Power.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50072,
        "sourceUnit": 52264,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49844,
        "nodeType": "ImportDirective",
        "src": "77:31:76",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50072,
        "sourceUnit": 21490,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50071,
        "nodeType": "ContractDefinition",
        "src": "384:3708:76",
        "nodes": [
          {
            "id": 49850,
            "nodeType": "VariableDeclaration",
            "src": "422:51:76",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MAX_RESERVE_RATIO",
            "nameLocation": "446:17:76",
            "scope": 50071,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 49848,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "422:6:76",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "31303030303030",
              "id": 49849,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "466:7:76",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1000000"
            },
            "visibility": "private"
          },
          {
            "id": 49963,
            "nodeType": "FunctionDefinition",
            "src": "1145:1117:76",
            "nodes": [],
            "body": {
              "id": 49962,
              "nodeType": "Block",
              "src": "1333:929:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49867,
                        "name": "_supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49853,
                        "src": "1385:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49864,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21489,
                        "src": "1369:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21489_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 49866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1377:7:76",
                      "memberName": "logUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13488,
                      "src": "1369:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 49868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1369:24:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49869,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:24:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49873,
                        "name": "_reserveBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49855,
                        "src": "1419:15:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49870,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21489,
                        "src": "1403:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21489_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 49872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1411:7:76",
                      "memberName": "logUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13488,
                      "src": "1403:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 49874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:32:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49875,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:32:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49879,
                        "name": "_reserveRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49857,
                        "src": "1461:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 49876,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21489,
                        "src": "1445:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21489_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 49878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1453:7:76",
                      "memberName": "logUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13488,
                      "src": "1445:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 49880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1445:30:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49881,
                  "nodeType": "ExpressionStatement",
                  "src": "1445:30:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49885,
                        "name": "_depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49859,
                        "src": "1501:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49882,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21489,
                        "src": "1485:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21489_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 49884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1493:7:76",
                      "memberName": "logUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13488,
                      "src": "1485:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 49886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1485:31:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49887,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:31:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 49903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 49899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 49895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 49891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 49889,
                                "name": "_supply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49853,
                                "src": "1534:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 49890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1544:1:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1534:11:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 49894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 49892,
                                "name": "_reserveBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49855,
                                "src": "1549:15:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 49893,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1567:1:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1549:19:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "1534:34:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 49898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49896,
                              "name": "_reserveRatio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49857,
                              "src": "1572:13:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 49897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1588:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1572:17:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1534:55:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 49902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49900,
                            "name": "_reserveRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49857,
                            "src": "1593:13:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 49901,
                            "name": "MAX_RESERVE_RATIO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49850,
                            "src": "1610:17:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "1593:34:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1534:93:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420696e707574732e",
                        "id": 49904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1629:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef6cde6fbf7262a91fe23c9c566a0956d022666674f55e2d782c51e274aef3ea",
                          "typeString": "literal_string \"Invalid inputs.\""
                        },
                        "value": "Invalid inputs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef6cde6fbf7262a91fe23c9c566a0956d022666674f55e2d782c51e274aef3ea",
                          "typeString": "literal_string \"Invalid inputs.\""
                        }
                      ],
                      "id": 49888,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1526:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1526:121:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49906,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:121:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49907,
                      "name": "_depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49859,
                      "src": "1706:14:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 49908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1724:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1706:19:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49913,
                  "nodeType": "IfStatement",
                  "src": "1702:58:76",
                  "trueBody": {
                    "id": 49912,
                    "nodeType": "Block",
                    "src": "1727:33:76",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 49910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1748:1:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 49863,
                        "id": 49911,
                        "nodeType": "Return",
                        "src": "1741:8:76"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 49916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49914,
                      "name": "_reserveRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49857,
                      "src": "1817:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 49915,
                      "name": "MAX_RESERVE_RATIO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49850,
                      "src": "1834:17:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1817:34:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49925,
                  "nodeType": "IfStatement",
                  "src": "1813:112:76",
                  "trueBody": {
                    "id": 49924,
                    "nodeType": "Block",
                    "src": "1853:72:76",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 49919,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 49917,
                                  "name": "_supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49853,
                                  "src": "1875:7:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 49918,
                                  "name": "_depositAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49859,
                                  "src": "1883:14:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1875:22:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 49920,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1874:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 49921,
                            "name": "_reserveBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49855,
                            "src": "1899:15:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1874:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 49863,
                        "id": 49923,
                        "nodeType": "Return",
                        "src": "1867:47:76"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    49927
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49927,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "1942:6:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 49962,
                      "src": "1934:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49926,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1934:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49928,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1934:14:76"
                },
                {
                  "assignments": [
                    49930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49930,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "1964:9:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 49962,
                      "src": "1958:15:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 49929,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1958:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49931,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1958:15:76"
                },
                {
                  "assignments": [
                    49933
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49933,
                      "mutability": "mutable",
                      "name": "baseN",
                      "nameLocation": "1991:5:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 49962,
                      "src": "1983:13:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49932,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1983:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49937,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49934,
                      "name": "_depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49859,
                      "src": "1999:14:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 49935,
                      "name": "_reserveBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49855,
                      "src": "2016:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1999:32:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1983:48:76"
                },
                {
                  "expression": {
                    "id": 49947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 49938,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49927,
                          "src": "2042:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 49939,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49930,
                          "src": "2050:9:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 49940,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2041:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49942,
                          "name": "baseN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49933,
                          "src": "2082:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 49943,
                          "name": "_reserveBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49855,
                          "src": "2089:15:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 49944,
                          "name": "_reserveRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49857,
                          "src": "2106:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 49945,
                          "name": "MAX_RESERVE_RATIO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49850,
                          "src": "2121:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 49941,
                        "name": "power",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50796,
                        "src": "2063:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
                          "typeString": "function (uint256,uint256,uint32,uint32) view returns (uint256,uint8)"
                        }
                      },
                      "id": 49946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2063:85:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "src": "2041:107:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49948,
                  "nodeType": "ExpressionStatement",
                  "src": "2041:107:76"
                },
                {
                  "assignments": [
                    49950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49950,
                      "mutability": "mutable",
                      "name": "newTokenSupply",
                      "nameLocation": "2166:14:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 49962,
                      "src": "2158:22:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49949,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2158:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49957,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49951,
                            "name": "_supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49853,
                            "src": "2184:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 49952,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49927,
                            "src": "2194:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2184:16:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 49954,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2183:18:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">>",
                    "rightExpression": {
                      "id": 49955,
                      "name": "precision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49930,
                      "src": "2205:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2183:31:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2158:56:76"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49958,
                      "name": "newTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49950,
                      "src": "2231:14:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 49959,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49853,
                      "src": "2248:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2231:24:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 49863,
                  "id": 49961,
                  "nodeType": "Return",
                  "src": "2224:31:76"
                }
              ]
            },
            "documentation": {
              "id": 49851,
              "nodeType": "StructuredDocumentation",
              "src": "480:660:76",
              "text": " @dev given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token),\n calculates the return for a given conversion (in the continuous token)\n Formula:\n Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)\n @param _supply              continuous token total supply\n @param _reserveBalance    total reserve token balance\n @param _reserveRatio     reserve ratio, represented in ppm, 1-1000000\n @param _depositAmount       deposit amount, in reserve token\n  @return purchase return amount"
            },
            "functionSelector": "29a00e7c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePurchaseReturn",
            "nameLocation": "1154:23:76",
            "parameters": {
              "id": 49860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49853,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "1195:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 49963,
                  "src": "1187:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49855,
                  "mutability": "mutable",
                  "name": "_reserveBalance",
                  "nameLocation": "1220:15:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 49963,
                  "src": "1212:23:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49857,
                  "mutability": "mutable",
                  "name": "_reserveRatio",
                  "nameLocation": "1252:13:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 49963,
                  "src": "1245:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 49856,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49859,
                  "mutability": "mutable",
                  "name": "_depositAmount",
                  "nameLocation": "1283:14:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 49963,
                  "src": "1275:22:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1177:121:76"
            },
            "returnParameters": {
              "id": 49863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49963,
                  "src": "1320:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1319:9:76"
            },
            "scope": 50071,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50070,
            "nodeType": "FunctionDefinition",
            "src": "2947:1143:76",
            "nodes": [],
            "body": {
              "id": 50069,
              "nodeType": "Block",
              "src": "3128:962:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 49996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 49992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 49988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 49984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 49980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 49978,
                                  "name": "_supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49966,
                                  "src": "3172:7:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 49979,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3182:1:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3172:11:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 49983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 49981,
                                  "name": "_reserveBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49968,
                                  "src": "3187:15:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 49982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3205:1:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3187:19:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3172:34:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 49987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 49985,
                                "name": "_reserveRatio",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49970,
                                "src": "3210:13:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 49986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3226:1:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3210:17:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3172:55:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 49991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49989,
                              "name": "_reserveRatio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49970,
                              "src": "3231:13:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "id": 49990,
                              "name": "MAX_RESERVE_RATIO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49850,
                              "src": "3248:17:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "3231:34:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3172:93:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49993,
                            "name": "_sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49972,
                            "src": "3269:11:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 49994,
                            "name": "_supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49966,
                            "src": "3284:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3269:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3172:119:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420696e707574732e",
                        "id": 49997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3293:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef6cde6fbf7262a91fe23c9c566a0956d022666674f55e2d782c51e274aef3ea",
                          "typeString": "literal_string \"Invalid inputs.\""
                        },
                        "value": "Invalid inputs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef6cde6fbf7262a91fe23c9c566a0956d022666674f55e2d782c51e274aef3ea",
                          "typeString": "literal_string \"Invalid inputs.\""
                        }
                      ],
                      "id": 49977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3164:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3164:147:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49999,
                  "nodeType": "ExpressionStatement",
                  "src": "3164:147:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50000,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49972,
                      "src": "3367:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 50001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3382:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3367:16:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50006,
                  "nodeType": "IfStatement",
                  "src": "3363:55:76",
                  "trueBody": {
                    "id": 50005,
                    "nodeType": "Block",
                    "src": "3385:33:76",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 50003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3406:1:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 49976,
                        "id": 50004,
                        "nodeType": "Return",
                        "src": "3399:8:76"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50007,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49972,
                      "src": "3485:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 50008,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49966,
                      "src": "3500:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3485:22:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50013,
                  "nodeType": "IfStatement",
                  "src": "3481:75:76",
                  "trueBody": {
                    "id": 50012,
                    "nodeType": "Block",
                    "src": "3509:47:76",
                    "statements": [
                      {
                        "expression": {
                          "id": 50010,
                          "name": "_reserveBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49968,
                          "src": "3530:15:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 49976,
                        "id": 50011,
                        "nodeType": "Return",
                        "src": "3523:22:76"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 50016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50014,
                      "name": "_reserveRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49970,
                      "src": "3613:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 50015,
                      "name": "MAX_RESERVE_RATIO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49850,
                      "src": "3630:17:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3613:34:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50025,
                  "nodeType": "IfStatement",
                  "src": "3609:109:76",
                  "trueBody": {
                    "id": 50024,
                    "nodeType": "Block",
                    "src": "3649:69:76",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 50022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 50019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 50017,
                                  "name": "_reserveBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49968,
                                  "src": "3671:15:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 50018,
                                  "name": "_sellAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49972,
                                  "src": "3687:11:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3671:27:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 50020,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3670:29:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 50021,
                            "name": "_supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49966,
                            "src": "3700:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3670:37:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 49976,
                        "id": 50023,
                        "nodeType": "Return",
                        "src": "3663:44:76"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    50027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50027,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "3735:6:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50069,
                      "src": "3727:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50026,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3727:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50028,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3727:14:76"
                },
                {
                  "assignments": [
                    50030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50030,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "3757:9:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50069,
                      "src": "3751:15:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 50029,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3751:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50031,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3751:15:76"
                },
                {
                  "assignments": [
                    50033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50033,
                      "mutability": "mutable",
                      "name": "baseD",
                      "nameLocation": "3784:5:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50069,
                      "src": "3776:13:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50032,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3776:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50037,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50034,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49966,
                      "src": "3792:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 50035,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49972,
                      "src": "3802:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3792:21:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3776:37:76"
                },
                {
                  "expression": {
                    "id": 50047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 50038,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50027,
                          "src": "3824:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 50039,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50030,
                          "src": "3832:9:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 50040,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3823:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50042,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49966,
                          "src": "3864:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 50043,
                          "name": "baseD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50033,
                          "src": "3873:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 50044,
                          "name": "MAX_RESERVE_RATIO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49850,
                          "src": "3880:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 50045,
                          "name": "_reserveRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49970,
                          "src": "3899:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 50041,
                        "name": "power",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50796,
                        "src": "3845:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
                          "typeString": "function (uint256,uint256,uint32,uint32) view returns (uint256,uint8)"
                        }
                      },
                      "id": 50046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3845:77:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "src": "3823:99:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50048,
                  "nodeType": "ExpressionStatement",
                  "src": "3823:99:76"
                },
                {
                  "assignments": [
                    50050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50050,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "3940:10:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50069,
                      "src": "3932:18:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50049,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3932:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50054,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50051,
                      "name": "_reserveBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49968,
                      "src": "3953:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 50052,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50027,
                      "src": "3969:6:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3953:22:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3932:43:76"
                },
                {
                  "assignments": [
                    50056
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50056,
                      "mutability": "mutable",
                      "name": "newBalance",
                      "nameLocation": "3993:10:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 50069,
                      "src": "3985:18:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50055,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3985:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50060,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50057,
                      "name": "_reserveBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49968,
                      "src": "4006:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "id": 50058,
                      "name": "precision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50030,
                      "src": "4025:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4006:28:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3985:49:76"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 50063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 50061,
                            "name": "oldBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50050,
                            "src": "4052:10:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 50062,
                            "name": "newBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50056,
                            "src": "4063:10:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4052:21:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 50064,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4051:23:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "id": 50065,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50027,
                          "src": "4076:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 50066,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4075:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4051:32:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 49976,
                  "id": 50068,
                  "nodeType": "Return",
                  "src": "4044:39:76"
                }
              ]
            },
            "documentation": {
              "id": 49964,
              "nodeType": "StructuredDocumentation",
              "src": "2268:674:76",
              "text": " @dev given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token),\n calculates the return for a given conversion (in the reserve token)\n Formula:\n Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))\n @param _supply              continuous token total supply\n @param _reserveBalance    total reserve token balance\n @param _reserveRatio     constant reserve ratio, represented in ppm, 1-1000000\n @param _sellAmount          sell amount, in the continuous token itself\n @return sale return amount"
            },
            "functionSelector": "49f9b0f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSaleReturn",
            "nameLocation": "2956:19:76",
            "parameters": {
              "id": 49973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49966,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "2993:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 50070,
                  "src": "2985:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49968,
                  "mutability": "mutable",
                  "name": "_reserveBalance",
                  "nameLocation": "3018:15:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 50070,
                  "src": "3010:23:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3010:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49970,
                  "mutability": "mutable",
                  "name": "_reserveRatio",
                  "nameLocation": "3050:13:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 50070,
                  "src": "3043:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 49969,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3043:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49972,
                  "mutability": "mutable",
                  "name": "_sellAmount",
                  "nameLocation": "3081:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 50070,
                  "src": "3073:19:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3073:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2975:118:76"
            },
            "returnParameters": {
              "id": 49976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49975,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50070,
                  "src": "3115:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3115:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3114:9:76"
            },
            "scope": 50071,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49846,
              "name": "Power",
              "nameLocations": [
                "410:5:76"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52263,
              "src": "410:5:76"
            },
            "id": 49847,
            "nodeType": "InheritanceSpecifier",
            "src": "410:5:76"
          }
        ],
        "canonicalName": "BancorFormula",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 49845,
          "nodeType": "StructuredDocumentation",
          "src": "186:197:76",
          "text": " @title Bancor formula by Bancor\n Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements;\n and to You under the Apache License, Version 2.0. \""
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50071,
          52263
        ],
        "name": "BancorFormula",
        "nameLocation": "393:13:76",
        "scope": 50072,
        "usedErrors": []
      }
    ]
  },
  "id": 76
}